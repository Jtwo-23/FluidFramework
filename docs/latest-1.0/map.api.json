{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.22.2",
    "schemaVersion": 1005,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@fluidframework/map!",
  "docComment": "/**\n * The `map` package provides interfaces and implementing classes for map-like distributed data structures.\n *\n * @remarks\n *\n * The following distributed data structures are defined in this package:\n *\n * - {@link SharedMap}\n *\n * - {@link SharedDirectory}\n *\n * @packageDocumentation\n */\n",
  "name": "@fluidframework/map",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@fluidframework/map!",
      "name": "",
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/map!DirectoryFactory:class",
          "docComment": "/**\n * The factory that defines the directory.\n *\n * @sealed\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DirectoryFactory "
            }
          ],
          "releaseTag": "Public",
          "name": "DirectoryFactory",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/map!DirectoryFactory#attributes:member",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.attributes}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get attributes(): "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "attributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/map!DirectoryFactory.Attributes:member",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.attributes}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly Attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Attributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!DirectoryFactory#create:member(1)",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.create}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "create(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ISharedDirectory",
                  "canonicalReference": "@fluidframework/map!ISharedDirectory:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!DirectoryFactory#load:member(1)",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.load}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "load(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", services: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelServices",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelServices:interface"
                },
                {
                  "kind": "Content",
                  "text": ", attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ISharedDirectory",
                  "canonicalReference": "@fluidframework/map!ISharedDirectory:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "services",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "name": "load"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/map!DirectoryFactory#type:member",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.\"type\"}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get type(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/map!DirectoryFactory.Type:member",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.\"type\"}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly Type = \"https://graph.microsoft.com/types/directory\";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Type",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "isStatic": true
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/map!IDirectory:interface",
          "docComment": "/**\n * Interface describing actions on a directory.\n *\n * @remarks\n *\n * When used as a Map, operates on its keys.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDirectory extends "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, any>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IEventProvider",
              "canonicalReference": "@fluidframework/common-definitions!IEventProvider:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDirectoryEvents",
              "canonicalReference": "@fluidframework/map!IDirectoryEvents:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDisposable",
              "canonicalReference": "@fluidframework/common-definitions!IDisposable:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "IDirectory",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!IDirectory#absolutePath:member",
              "docComment": "/**\n * The absolute path of the directory.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly absolutePath: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "absolutePath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/map!IDirectory#countSubDirectory:member(1)",
              "docComment": "/**\n * Get the number of sub directory within the directory.\n *\n * @returns The number of sub directory within a directory.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "countSubDirectory?(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "countSubDirectory"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/map!IDirectory#createSubDirectory:member(1)",
              "docComment": "/**\n * Creates an IDirectory child of this IDirectory, or retrieves the existing IDirectory child if one with the same name already exists.\n *\n * @param subdirName - Name of the new child directory to create\n *\n * @returns The IDirectory child that was created or retrieved\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createSubDirectory(subdirName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IDirectory",
                  "canonicalReference": "@fluidframework/map!IDirectory:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "subdirName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "createSubDirectory"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/map!IDirectory#deleteSubDirectory:member(1)",
              "docComment": "/**\n * Deletes an IDirectory child of this IDirectory, if it exists, along with all descendent keys and directories.\n *\n * @param subdirName - Name of the child directory to delete\n *\n * @returns True if the IDirectory existed and was deleted, false if it did not exist\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deleteSubDirectory(subdirName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "subdirName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "deleteSubDirectory"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/map!IDirectory#get:member(1)",
              "docComment": "/**\n * Retrieves the value stored at the given key from the directory.\n *\n * @param key - Key to retrieve from\n *\n * @returns The stored value, or undefined if the key is not set\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get<T = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "get"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/map!IDirectory#getSubDirectory:member(1)",
              "docComment": "/**\n * Gets an IDirectory child of this IDirectory, if it exists.\n *\n * @param subdirName - Name of the child directory to get\n *\n * @returns The requested IDirectory\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSubDirectory(subdirName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IDirectory",
                  "canonicalReference": "@fluidframework/map!IDirectory:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "subdirName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "getSubDirectory"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/map!IDirectory#getWorkingDirectory:member(1)",
              "docComment": "/**\n * Get an IDirectory within the directory, in order to use relative paths from that location.\n *\n * @param relativePath - Path of the IDirectory to get, relative to this IDirectory\n *\n * @returns The requested IDirectory\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getWorkingDirectory(relativePath: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IDirectory",
                  "canonicalReference": "@fluidframework/map!IDirectory:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "relativePath",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "getWorkingDirectory"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/map!IDirectory#hasSubDirectory:member(1)",
              "docComment": "/**\n * Checks whether this directory has a child directory with the given name.\n *\n * @param subdirName - Name of the child directory to check\n *\n * @returns True if it exists, false otherwise\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasSubDirectory(subdirName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "subdirName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "hasSubDirectory"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/map!IDirectory#set:member(1)",
              "docComment": "/**\n * Sets the value stored at key to the provided value.\n *\n * @param key - Key to set at\n *\n * @param value - Value to set\n *\n * @returns The IDirectory itself\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set<T = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "set"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/map!IDirectory#subdirectories:member(1)",
              "docComment": "/**\n * Gets an iterator over the IDirectory children of this IDirectory.\n *\n * @returns The IDirectory iterator\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subdirectories(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<[string, "
                },
                {
                  "kind": "Reference",
                  "text": "IDirectory",
                  "canonicalReference": "@fluidframework/map!IDirectory:interface"
                },
                {
                  "kind": "Content",
                  "text": "]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "subdirectories"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            },
            {
              "startIndex": 4,
              "endIndex": 8
            },
            {
              "startIndex": 9,
              "endIndex": 12
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/map!IDirectoryClearOperation:interface",
          "docComment": "/**\n * Operation indicating the directory should be cleared.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDirectoryClearOperation "
            }
          ],
          "releaseTag": "Public",
          "name": "IDirectoryClearOperation",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!IDirectoryClearOperation#path:member",
              "docComment": "/**\n * Absolute path of the directory being cleared.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "path: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!IDirectoryClearOperation#type:member",
              "docComment": "/**\n * String identifier of the operation type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "\"clear\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/map!IDirectoryCreateSubDirectoryOperation:interface",
          "docComment": "/**\n * Operation indicating a subdirectory should be created.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDirectoryCreateSubDirectoryOperation "
            }
          ],
          "releaseTag": "Public",
          "name": "IDirectoryCreateSubDirectoryOperation",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!IDirectoryCreateSubDirectoryOperation#path:member",
              "docComment": "/**\n * Absolute path of the directory that will contain the new subdirectory.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "path: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!IDirectoryCreateSubDirectoryOperation#subdirName:member",
              "docComment": "/**\n * Name of the new subdirectory.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subdirName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "subdirName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!IDirectoryCreateSubDirectoryOperation#type:member",
              "docComment": "/**\n * String identifier of the operation type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "\"createSubDirectory\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/map!IDirectoryDataObject:interface",
          "docComment": "/**\n * Defines the in-memory object structure to be used for the conversion to/from serialized.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDirectoryDataObject "
            }
          ],
          "releaseTag": "Public",
          "name": "IDirectoryDataObject",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!IDirectoryDataObject#storage:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "storage?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "ISerializableValue",
                  "canonicalReference": "@fluidframework/map!ISerializableValue:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "storage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!IDirectoryDataObject#subdirectories:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subdirectories?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [subdirName: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "IDirectoryDataObject",
                  "canonicalReference": "@fluidframework/map!IDirectoryDataObject:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "subdirectories",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/map!IDirectoryDeleteOperation:interface",
          "docComment": "/**\n * Operation indicating a key should be deleted from the directory.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDirectoryDeleteOperation "
            }
          ],
          "releaseTag": "Public",
          "name": "IDirectoryDeleteOperation",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!IDirectoryDeleteOperation#key:member",
              "docComment": "/**\n * Directory key being modified.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!IDirectoryDeleteOperation#path:member",
              "docComment": "/**\n * Absolute path of the directory where the modified key is located.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "path: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!IDirectoryDeleteOperation#type:member",
              "docComment": "/**\n * String identifier of the operation type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "\"delete\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/map!IDirectoryDeleteSubDirectoryOperation:interface",
          "docComment": "/**\n * Operation indicating a subdirectory should be deleted.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDirectoryDeleteSubDirectoryOperation "
            }
          ],
          "releaseTag": "Public",
          "name": "IDirectoryDeleteSubDirectoryOperation",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!IDirectoryDeleteSubDirectoryOperation#path:member",
              "docComment": "/**\n * Absolute path of the directory that contains the directory to be deleted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "path: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!IDirectoryDeleteSubDirectoryOperation#subdirName:member",
              "docComment": "/**\n * Name of the subdirectory to be deleted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subdirName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "subdirName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!IDirectoryDeleteSubDirectoryOperation#type:member",
              "docComment": "/**\n * String identifier of the operation type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "\"deleteSubDirectory\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/map!IDirectoryEvents:interface",
          "docComment": "/**\n * Events emitted in response to changes to the directory data.\n *\n * @remarks\n *\n * The following is the list of events emitted.\n *\n * ### \"containedValueChanged\"\n *\n * The containedValueChanged event is emitted when a key is set or deleted. As opposed to the SharedDirectory's valueChanged event, this is emitted only on the IDirectory that directly contains the key.\n *\n * #### Listener signature\n * ```typescript\n * (changed: IValueChanged, local: boolean, target: IEventThisPlaceHolder) => void\n * ```\n *\n * - `changed` - Information on the key that changed and its value prior to the change.\n *\n * - `local` - Whether the change originated from this client.\n *\n * - `target` - The IDirectory itself.\n *\n * ### \"subDirectoryCreated\"\n *\n * The subDirectoryCreated event is emitted when a subdirectory is created.\n *\n * #### Listener signature\n * ```typescript\n * (path: string, local: boolean, target: IEventThisPlaceHolder) => void\n * ```\n *\n * - `path` - The relative path to the subdirectory that is created. It is relative from the object which raises the event.\n *\n * - `local` - Whether the creation originated from the this client.\n *\n * - `target` - The ISharedDirectory itself.\n *\n * ### \"subDirectoryDeleted\"\n *\n * The subDirectoryDeleted event is emitted when a subdirectory is deleted.\n *\n * #### Listener signature\n * ```typescript\n * (path: string, local: boolean, target: IEventThisPlaceHolder) => void\n * ```\n *\n * - `path` - The relative path to the subdirectory that is deleted. It is relative from the object which raises the event.\n *\n * - `local` - Whether the delete originated from the this client.\n *\n * - `target` - The ISharedDirectory itself.\n *\n * ### \"disposed\"\n *\n * The dispose event is emitted when this sub directory is deleted.\n *\n * #### Listener signature\n * ```typescript\n * (local: boolean, target: IEventThisPlaceHolder) => void\n * ```\n *\n * - `target` - The IDirectory itself.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDirectoryEvents extends "
            },
            {
              "kind": "Reference",
              "text": "IEvent",
              "canonicalReference": "@fluidframework/common-definitions!IEvent:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDirectoryEvents",
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/map!IDirectoryEvents:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"containedValueChanged\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(changed: "
                },
                {
                  "kind": "Reference",
                  "text": "IValueChanged",
                  "canonicalReference": "@fluidframework/map!IValueChanged:interface"
                },
                {
                  "kind": "Content",
                  "text": ", local: boolean, target: "
                },
                {
                  "kind": "Reference",
                  "text": "IEventThisPlaceHolder",
                  "canonicalReference": "@fluidframework/common-definitions!IEventThisPlaceHolder:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/map!IDirectoryEvents:call(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"subDirectoryCreated\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(path: string, local: boolean, target: "
                },
                {
                  "kind": "Reference",
                  "text": "IEventThisPlaceHolder",
                  "canonicalReference": "@fluidframework/common-definitions!IEventThisPlaceHolder:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/map!IDirectoryEvents:call(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"subDirectoryDeleted\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(path: string, local: boolean, target: "
                },
                {
                  "kind": "Reference",
                  "text": "IEventThisPlaceHolder",
                  "canonicalReference": "@fluidframework/common-definitions!IEventThisPlaceHolder:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/map!IDirectoryEvents:call(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"disposed\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(target: "
                },
                {
                  "kind": "Reference",
                  "text": "IEventThisPlaceHolder",
                  "canonicalReference": "@fluidframework/common-definitions!IEventThisPlaceHolder:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluidframework/map!IDirectoryKeyOperation:type",
          "docComment": "/**\n * An operation on a specific key within a directory\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IDirectoryKeyOperation = "
            },
            {
              "kind": "Reference",
              "text": "IDirectorySetOperation",
              "canonicalReference": "@fluidframework/map!IDirectorySetOperation:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "IDirectoryDeleteOperation",
              "canonicalReference": "@fluidframework/map!IDirectoryDeleteOperation:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IDirectoryKeyOperation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/map!IDirectoryNewStorageFormat:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDirectoryNewStorageFormat "
            }
          ],
          "releaseTag": "Public",
          "name": "IDirectoryNewStorageFormat",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!IDirectoryNewStorageFormat#blobs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "blobs: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "blobs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!IDirectoryNewStorageFormat#content:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "content: "
                },
                {
                  "kind": "Reference",
                  "text": "IDirectoryDataObject",
                  "canonicalReference": "@fluidframework/map!IDirectoryDataObject:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "content",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluidframework/map!IDirectoryOperation:type",
          "docComment": "/**\n * Any operation on a directory\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IDirectoryOperation = "
            },
            {
              "kind": "Reference",
              "text": "IDirectoryStorageOperation",
              "canonicalReference": "@fluidframework/map!IDirectoryStorageOperation:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "IDirectorySubDirectoryOperation",
              "canonicalReference": "@fluidframework/map!IDirectorySubDirectoryOperation:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IDirectoryOperation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/map!IDirectorySetOperation:interface",
          "docComment": "/**\n * Operation indicating a value should be set for a key.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDirectorySetOperation "
            }
          ],
          "releaseTag": "Public",
          "name": "IDirectorySetOperation",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!IDirectorySetOperation#key:member",
              "docComment": "/**\n * Directory key being modified.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!IDirectorySetOperation#path:member",
              "docComment": "/**\n * Absolute path of the directory where the modified key is located.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "path: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!IDirectorySetOperation#type:member",
              "docComment": "/**\n * String identifier of the operation type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "\"set\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!IDirectorySetOperation#value:member",
              "docComment": "/**\n * Value to be set on the key.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Reference",
                  "text": "ISerializableValue",
                  "canonicalReference": "@fluidframework/map!ISerializableValue:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluidframework/map!IDirectoryStorageOperation:type",
          "docComment": "/**\n * An operation on one or more of the keys within a directory\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IDirectoryStorageOperation = "
            },
            {
              "kind": "Reference",
              "text": "IDirectoryKeyOperation",
              "canonicalReference": "@fluidframework/map!IDirectoryKeyOperation:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "IDirectoryClearOperation",
              "canonicalReference": "@fluidframework/map!IDirectoryClearOperation:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IDirectoryStorageOperation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluidframework/map!IDirectorySubDirectoryOperation:type",
          "docComment": "/**\n * An operation on the subdirectories within a directory\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IDirectorySubDirectoryOperation = "
            },
            {
              "kind": "Reference",
              "text": "IDirectoryCreateSubDirectoryOperation",
              "canonicalReference": "@fluidframework/map!IDirectoryCreateSubDirectoryOperation:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "IDirectoryDeleteSubDirectoryOperation",
              "canonicalReference": "@fluidframework/map!IDirectoryDeleteSubDirectoryOperation:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IDirectorySubDirectoryOperation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/map!IDirectoryValueChanged:interface",
          "docComment": "/**\n * Type of \"valueChanged\" event parameter for SharedDirectory.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDirectoryValueChanged extends "
            },
            {
              "kind": "Reference",
              "text": "IValueChanged",
              "canonicalReference": "@fluidframework/map!IValueChanged:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDirectoryValueChanged",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!IDirectoryValueChanged#path:member",
              "docComment": "/**\n * The absolute path to the IDirectory storing the key which changed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "path: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/map!ILocalValue:interface",
          "docComment": "/**\n * A local value to be stored in a container type DDS.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ILocalValue "
            }
          ],
          "releaseTag": "Public",
          "name": "ILocalValue",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/map!ILocalValue#makeSerialized:member(1)",
              "docComment": "/**\n * Retrieve the serialized form of the value stored within.\n *\n * @param serializer - Data store runtime's serializer\n *\n * @param bind - Container type's handle\n *\n * @returns The serialized form of the contained value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "makeSerialized(serializer: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidSerializer",
                  "canonicalReference": "@fluidframework/shared-object-base!IFluidSerializer:interface"
                },
                {
                  "kind": "Content",
                  "text": ", bind: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidHandle",
                  "canonicalReference": "@fluidframework/core-interfaces!IFluidHandle:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ISerializedValue",
                  "canonicalReference": "@fluidframework/map!ISerializedValue:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "serializer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "bind",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "makeSerialized"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!ILocalValue#type:member",
              "docComment": "/**\n * Type indicator of the value stored within.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!ILocalValue#value:member",
              "docComment": "/**\n * The in-memory value stored within.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly value: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/map!ISerializableValue:interface",
          "docComment": "/**\n * The _ready-for-serialization_ format of values contained in DDS contents. This allows us to use ISerializableValue.type to understand whether they're storing a Plain JS object, a SharedObject, or a value type.\n *\n * @remarks\n *\n * Note that the in-memory equivalent of ISerializableValue is ILocalValue (similarly holding a type, but with the _in-memory representation_ of the value instead). An ISerializableValue is what gets passed to JSON.stringify and comes out of JSON.parse. This format is used both for snapshots (loadCore/populate) and ops (set). If type is Plain, it must be a plain JS object that can survive a JSON.stringify/parse. E.g. a URL object will just get stringified to a URL string and not rehydrate as a URL object on the other side. It may contain members that are ISerializedHandle (the serialized form of a handle). If type is a value type then it must be amongst the types registered via registerValueType or we won't know how to serialize/deserialize it (we rely on its factory via .load() and .store()). Its value will be type-dependent. If type is Shared, then the in-memory value will just be a reference to the SharedObject. Its value will be a channel ID. This type is legacy and deprecated.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISerializableValue "
            }
          ],
          "releaseTag": "Public",
          "name": "ISerializableValue",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!ISerializableValue#type:member",
              "docComment": "/**\n * A type annotation to help indicate how the value serializes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!ISerializableValue#value:member",
              "docComment": "/**\n * The JSONable representation of the value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/map!ISerializedValue:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISerializedValue "
            }
          ],
          "releaseTag": "Public",
          "name": "ISerializedValue",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!ISerializedValue#type:member",
              "docComment": "/**\n * A type annotation to help indicate how the value serializes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!ISerializedValue#value:member",
              "docComment": "/**\n * String representation of the value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/map!ISharedDirectory:interface",
          "docComment": "/**\n * Interface describing a shared directory.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISharedDirectory extends "
            },
            {
              "kind": "Reference",
              "text": "ISharedObject",
              "canonicalReference": "@fluidframework/shared-object-base!ISharedObject:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ISharedDirectoryEvents",
              "canonicalReference": "@fluidframework/map!ISharedDirectoryEvents:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "IDirectoryEvents",
              "canonicalReference": "@fluidframework/map!IDirectoryEvents:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDirectory",
              "canonicalReference": "@fluidframework/map!IDirectory:interface"
            },
            {
              "kind": "Content",
              "text": ", \"on\" | \"once\" | \"off\"> "
            }
          ],
          "releaseTag": "Public",
          "name": "ISharedDirectory",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/map!ISharedDirectory#[Symbol.iterator]:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.iterator",
                  "canonicalReference": "!SymbolConstructor#iterator"
                },
                {
                  "kind": "Content",
                  "text": "](): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<[string, any]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "[Symbol.iterator]"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!ISharedDirectory#[Symbol.toStringTag]:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly ["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.toStringTag",
                  "canonicalReference": "!SymbolConstructor#toStringTag"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "[Symbol.toStringTag]",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 7
            },
            {
              "startIndex": 8,
              "endIndex": 11
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/map!ISharedDirectoryEvents:interface",
          "docComment": "/**\n * Events emitted in response to changes to the directory data. These events only emit on the ISharedDirectory itself, and not on subdirectories.\n *\n * @remarks\n *\n * The following is the list of events emitted.\n *\n * ### \"valueChanged\"\n *\n * The valueChanged event is emitted when a key is set or deleted. This is emitted for any key in the ISharedDirectory or any subdirectory.\n *\n * #### Listener signature\n * ```typescript\n * (\n *     changed: IDirectoryValueChanged,\n *     local: boolean,\n *     target: IEventThisPlaceHolder,\n * ) => void\n * ```\n *\n * - `changed` - Information on the key that changed, its value prior to the change, and the path to the key that changed.\n *\n * - `local` - Whether the change originated from this client.\n *\n * - `target` - The ISharedDirectory itself.\n *\n * ### \"clear\"\n *\n * The clear event is emitted when the ISharedDirectory is cleared.\n *\n * #### Listener signature\n * ```typescript\n * (local: boolean, target: IEventThisPlaceHolder) => void\n * ```\n *\n * - `local` - Whether the clear originated from this client.\n *\n * - `target` - The ISharedDirectory itself.\n *\n * ### \"subDirectoryCreated\"\n *\n * The subDirectoryCreated event is emitted when a subdirectory is created.\n *\n * #### Listener signature\n * ```typescript\n * (path: string, local: boolean, target: IEventThisPlaceHolder) => void\n * ```\n *\n * - `path` - The relative path to the subdirectory that is created. It is relative from the object which raises the event.\n *\n * - `local` - Whether the create originated from the this client.\n *\n * - `target` - The ISharedDirectory itself.\n *\n * ###\"subDirectoryDeleted\"\n *\n * The subDirectoryDeleted event is emitted when a subdirectory is deleted.\n *\n * #### Listener signature\n * ```typescript\n * (path: string, local: boolean, target: IEventThisPlaceHolder) => void\n * ```\n *\n * - `path` - The relative path to the subdirectory that is deleted. It is relative from the object which raises the event.\n *\n * - `local` - Whether the delete originated from the this client.\n *\n * - `target` - The ISharedDirectory itself.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISharedDirectoryEvents extends "
            },
            {
              "kind": "Reference",
              "text": "ISharedObjectEvents",
              "canonicalReference": "@fluidframework/shared-object-base!ISharedObjectEvents:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ISharedDirectoryEvents",
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/map!ISharedDirectoryEvents:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"valueChanged\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(changed: "
                },
                {
                  "kind": "Reference",
                  "text": "IDirectoryValueChanged",
                  "canonicalReference": "@fluidframework/map!IDirectoryValueChanged:interface"
                },
                {
                  "kind": "Content",
                  "text": ", local: boolean, target: "
                },
                {
                  "kind": "Reference",
                  "text": "IEventThisPlaceHolder",
                  "canonicalReference": "@fluidframework/common-definitions!IEventThisPlaceHolder:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/map!ISharedDirectoryEvents:call(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"clear\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(local: boolean, target: "
                },
                {
                  "kind": "Reference",
                  "text": "IEventThisPlaceHolder",
                  "canonicalReference": "@fluidframework/common-definitions!IEventThisPlaceHolder:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/map!ISharedDirectoryEvents:call(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"subDirectoryCreated\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(path: string, local: boolean, target: "
                },
                {
                  "kind": "Reference",
                  "text": "IEventThisPlaceHolder",
                  "canonicalReference": "@fluidframework/common-definitions!IEventThisPlaceHolder:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/map!ISharedDirectoryEvents:call(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"subDirectoryDeleted\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(path: string, local: boolean, target: "
                },
                {
                  "kind": "Reference",
                  "text": "IEventThisPlaceHolder",
                  "canonicalReference": "@fluidframework/common-definitions!IEventThisPlaceHolder:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/map!ISharedMap:interface",
          "docComment": "/**\n * Shared map interface\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISharedMap extends "
            },
            {
              "kind": "Reference",
              "text": "ISharedObject",
              "canonicalReference": "@fluidframework/shared-object-base!ISharedObject:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ISharedMapEvents",
              "canonicalReference": "@fluidframework/map!ISharedMapEvents:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, any> "
            }
          ],
          "releaseTag": "Public",
          "name": "ISharedMap",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/map!ISharedMap#get:member(1)",
              "docComment": "/**\n * Retrieves the given key from the map.\n *\n * @param key - Key to retrieve from\n *\n * @returns The stored value, or undefined if the key is not set\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get<T = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "get"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/map!ISharedMap#set:member(1)",
              "docComment": "/**\n * Sets the value stored at key to the provided value.\n *\n * @param key - Key to set at\n *\n * @param value - Value to set\n *\n * @returns The ISharedMap itself\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set<T = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "set"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/map!ISharedMapEvents:interface",
          "docComment": "/**\n * Events emitted in response to changes to the map data.\n *\n * @remarks\n *\n * The following is the list of events emitted.\n *\n * ### \"valueChanged\"\n *\n * The valueChanged event is emitted when a key is set or deleted.\n *\n * #### Listener signature\n * ```typescript\n * (\n *     changed: IValueChanged,\n *     local: boolean,\n *     target: IEventThisPlaceHolder,\n * ) => void\n * ```\n *\n * - `changed` - Information on the key that changed and its value prior to the change.\n *\n * - `local` - Whether the change originated from this client.\n *\n * - `target` - The map itself.\n *\n * ### \"clear\"\n *\n * The clear event is emitted when the map is cleared.\n *\n * #### Listener signature\n * ```typescript\n * (local: boolean, target: IEventThisPlaceHolder) => void\n * ```\n *\n * - `local` - Whether the clear originated from this client.\n *\n * - `target` - The map itself.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISharedMapEvents extends "
            },
            {
              "kind": "Reference",
              "text": "ISharedObjectEvents",
              "canonicalReference": "@fluidframework/shared-object-base!ISharedObjectEvents:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ISharedMapEvents",
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/map!ISharedMapEvents:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"valueChanged\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(changed: "
                },
                {
                  "kind": "Reference",
                  "text": "IValueChanged",
                  "canonicalReference": "@fluidframework/map!IValueChanged:interface"
                },
                {
                  "kind": "Content",
                  "text": ", local: boolean, target: "
                },
                {
                  "kind": "Reference",
                  "text": "IEventThisPlaceHolder",
                  "canonicalReference": "@fluidframework/common-definitions!IEventThisPlaceHolder:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/map!ISharedMapEvents:call(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"clear\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(local: boolean, target: "
                },
                {
                  "kind": "Reference",
                  "text": "IEventThisPlaceHolder",
                  "canonicalReference": "@fluidframework/common-definitions!IEventThisPlaceHolder:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/map!IValueChanged:interface",
          "docComment": "/**\n * Type of \"valueChanged\" event parameter.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IValueChanged "
            }
          ],
          "releaseTag": "Public",
          "name": "IValueChanged",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!IValueChanged#key:member",
              "docComment": "/**\n * The key storing the value that changed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/map!IValueChanged#previousValue:member",
              "docComment": "/**\n * The value that was stored at the key prior to the change.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "previousValue: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "previousValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/map!LocalValueMaker:class",
          "docComment": "/**\n * A LocalValueMaker enables a container type DDS to produce and store local values with minimal awareness of how those objects are stored, serialized, and deserialized.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class LocalValueMaker "
            }
          ],
          "releaseTag": "Public",
          "name": "LocalValueMaker",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluidframework/map!LocalValueMaker:constructor(1)",
              "docComment": "/**\n * Create a new LocalValueMaker.\n *\n * @param serializer - The serializer to serialize / parse handles.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(serializer: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidSerializer",
                  "canonicalReference": "@fluidframework/shared-object-base!IFluidSerializer:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "serializer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!LocalValueMaker#fromInMemory:member(1)",
              "docComment": "/**\n * Create a new local value containing a given plain object.\n *\n * @param value - The value to store\n *\n * @returns An ILocalValue containing the value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fromInMemory(value: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ILocalValue",
                  "canonicalReference": "@fluidframework/map!ILocalValue:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "fromInMemory"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!LocalValueMaker#fromSerializable:member(1)",
              "docComment": "/**\n * Create a new local value from an incoming serialized value.\n *\n * @param serializable - The serializable value to make local\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fromSerializable(serializable: "
                },
                {
                  "kind": "Reference",
                  "text": "ISerializableValue",
                  "canonicalReference": "@fluidframework/map!ISerializableValue:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ILocalValue",
                  "canonicalReference": "@fluidframework/map!ILocalValue:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "serializable",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "fromSerializable"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/map!MapFactory:class",
          "docComment": "/**\n * The factory that defines the map.\n *\n * @sealed\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MapFactory implements "
            },
            {
              "kind": "Reference",
              "text": "IChannelFactory",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannelFactory:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MapFactory",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/map!MapFactory#attributes:member",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.attributes}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get attributes(): "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "attributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/map!MapFactory.Attributes:member",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.attributes}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly Attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Attributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!MapFactory#create:member(1)",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.create}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "create(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ISharedMap",
                  "canonicalReference": "@fluidframework/map!ISharedMap:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!MapFactory#load:member(1)",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.load}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "load(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", services: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelServices",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelServices:interface"
                },
                {
                  "kind": "Content",
                  "text": ", attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ISharedMap",
                  "canonicalReference": "@fluidframework/map!ISharedMap:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "services",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "name": "load"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/map!MapFactory#type:member",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.\"type\"}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get type(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/map!MapFactory.Type:member",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.\"type\"}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly Type = \"https://graph.microsoft.com/types/map\";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Type",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "isStatic": true
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/map!SharedDirectory:class",
          "docComment": "/**\n * SharedDirectory provides a hierarchical organization of map-like data structures as SubDirectories. The values stored within can be accessed like a map, and the hierarchy can be navigated using path syntax. SubDirectories can be retrieved for use as working directories.\n *\n * @example\n * ```typescript\n * mySharedDirectory.createSubDirectory(\"a\").createSubDirectory(\"b\").createSubDirectory(\"c\").set(\"foo\", val1);\n * const mySubDir = mySharedDirectory.getWorkingDirectory(\"/a/b/c\");\n * mySubDir.get(\"foo\"); // returns val1\n * ```\n *\n * @sealed\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SharedDirectory extends "
            },
            {
              "kind": "Reference",
              "text": "SharedObject",
              "canonicalReference": "@fluidframework/shared-object-base!SharedObject:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ISharedDirectoryEvents",
              "canonicalReference": "@fluidframework/map!ISharedDirectoryEvents:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "ISharedDirectory",
              "canonicalReference": "@fluidframework/map!ISharedDirectory:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SharedDirectory",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedDirectory#[Symbol.iterator]:member(1)",
              "docComment": "/**\n * Get an iterator over the entries under this IDirectory.\n *\n * @returns The iterator\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.iterator",
                  "canonicalReference": "!SymbolConstructor#iterator"
                },
                {
                  "kind": "Content",
                  "text": "](): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<[string, any]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "[Symbol.iterator]"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/map!SharedDirectory#[Symbol.toStringTag]:member",
              "docComment": "/**\n * String representation for the class.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.toStringTag",
                  "canonicalReference": "!SymbolConstructor#toStringTag"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "[Symbol.toStringTag]",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@fluidframework/map!SharedDirectory:constructor(1)",
              "docComment": "/**\n * Constructs a new shared directory. If the object is non-local an id and service interfaces will be provided.\n *\n * @param id - String identifier for the SharedDirectory\n *\n * @param runtime - Data store runtime\n *\n * @param type - Type identifier\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/map!SharedDirectory#absolutePath:member",
              "docComment": "/**\n * The absolute path of the directory.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get absolutePath(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "absolutePath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedDirectory#clear:member(1)",
              "docComment": "/**\n * Deletes all keys from within this IDirectory.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clear(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "clear"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedDirectory#countSubDirectory:member(1)",
              "docComment": "/**\n * Get the number of sub directory within the directory.\n *\n * @returns The number of sub directory within a directory.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "countSubDirectory(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "countSubDirectory"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedDirectory.create:member(1)",
              "docComment": "/**\n * Create a new shared directory\n *\n * @param runtime - Data store runtime the new shared directory belongs to\n *\n * @param id - Optional name of the shared directory\n *\n * @returns Newly create shared directory (but not attached yet)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static create(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SharedDirectory",
                  "canonicalReference": "@fluidframework/map!SharedDirectory:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedDirectory#createSubDirectory:member(1)",
              "docComment": "/**\n * Creates an IDirectory child of this IDirectory, or retrieves the existing IDirectory child if one with the same name already exists.\n *\n * @param subdirName - Name of the new child directory to create\n *\n * @returns The IDirectory child that was created or retrieved\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createSubDirectory(subdirName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IDirectory",
                  "canonicalReference": "@fluidframework/map!IDirectory:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "subdirName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "createSubDirectory"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedDirectory#delete:member(1)",
              "docComment": "/**\n * Deletes the given key from within this IDirectory.\n *\n * @param key - The key to delete\n *\n * @returns True if the key existed and was deleted, false if it did not exist\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delete(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "delete"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedDirectory#deleteSubDirectory:member(1)",
              "docComment": "/**\n * Deletes an IDirectory child of this IDirectory, if it exists, along with all descendent keys and directories.\n *\n * @param subdirName - Name of the child directory to delete\n *\n * @returns True if the IDirectory existed and was deleted, false if it did not exist\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deleteSubDirectory(subdirName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "subdirName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "deleteSubDirectory"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedDirectory#dispose:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dispose(error?: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "name": "dispose"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/map!SharedDirectory#disposed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get disposed(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "disposed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedDirectory#entries:member(1)",
              "docComment": "/**\n * Get an iterator over the entries under this IDirectory.\n *\n * @returns The iterator\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "entries(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<[string, any]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "entries"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedDirectory#forEach:member(1)",
              "docComment": "/**\n * Issue a callback on each entry under this IDirectory.\n *\n * @param callback - Callback to issue\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forEach(callback: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any, key: string, map: "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "forEach"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedDirectory#get:member(1)",
              "docComment": "/**\n * Retrieves the value stored at the given key from the directory.\n *\n * @param key - Key to retrieve from\n *\n * @returns The stored value, or undefined if the key is not set\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get<T = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "get"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedDirectory.getFactory:member(1)",
              "docComment": "/**\n * Get a factory for SharedDirectory to register with the data store.\n *\n * @returns A factory that creates and load SharedDirectory\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getFactory(): "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelFactory",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelFactory:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getFactory"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedDirectory#getSubDirectory:member(1)",
              "docComment": "/**\n * Gets an IDirectory child of this IDirectory, if it exists.\n *\n * @param subdirName - Name of the child directory to get\n *\n * @returns The requested IDirectory\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSubDirectory(subdirName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IDirectory",
                  "canonicalReference": "@fluidframework/map!IDirectory:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "subdirName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "getSubDirectory"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedDirectory#getWorkingDirectory:member(1)",
              "docComment": "/**\n * Get an IDirectory within the directory, in order to use relative paths from that location.\n *\n * @param relativePath - Path of the IDirectory to get, relative to this IDirectory\n *\n * @returns The requested IDirectory\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getWorkingDirectory(relativePath: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IDirectory",
                  "canonicalReference": "@fluidframework/map!IDirectory:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "relativePath",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "getWorkingDirectory"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedDirectory#has:member(1)",
              "docComment": "/**\n * Checks whether the given key exists in this IDirectory.\n *\n * @param key - The key to check\n *\n * @returns True if the key exists, false otherwise\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "has(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "has"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedDirectory#hasSubDirectory:member(1)",
              "docComment": "/**\n * Checks whether this directory has a child directory with the given name.\n *\n * @param subdirName - Name of the child directory to check\n *\n * @returns True if it exists, false otherwise\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasSubDirectory(subdirName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "subdirName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "hasSubDirectory"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedDirectory#keys:member(1)",
              "docComment": "/**\n * Get an iterator over the keys under this IDirectory.\n *\n * @returns The iterator\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keys(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "keys"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedDirectory#set:member(1)",
              "docComment": "/**\n * Sets the value stored at key to the provided value.\n *\n * @param key - Key to set at\n *\n * @param value - Value to set\n *\n * @returns The IDirectory itself\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set<T = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "set"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/map!SharedDirectory#size:member",
              "docComment": "/**\n * The number of entries under this IDirectory.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get size(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "size",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedDirectory#subdirectories:member(1)",
              "docComment": "/**\n * Gets an iterator over the IDirectory children of this IDirectory.\n *\n * @returns The IDirectory iterator\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subdirectories(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<[string, "
                },
                {
                  "kind": "Reference",
                  "text": "IDirectory",
                  "canonicalReference": "@fluidframework/map!IDirectory:interface"
                },
                {
                  "kind": "Content",
                  "text": "]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "subdirectories"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedDirectory#values:member(1)",
              "docComment": "/**\n * Get an iterator over the values under this IDirectory.\n *\n * @returns The iterator\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "values(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "values"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "implementsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/map!SharedMap:class",
          "docComment": "/**\n * The SharedMap distributed data structure can be used to store key-value pairs. It provides the same API for setting and retrieving values that JavaScript developers are accustomed to with the {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map | Map} built-in object. However, the keys of a SharedMap must be strings.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SharedMap extends "
            },
            {
              "kind": "Reference",
              "text": "SharedObject",
              "canonicalReference": "@fluidframework/shared-object-base!SharedObject:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ISharedMapEvents",
              "canonicalReference": "@fluidframework/map!ISharedMapEvents:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "ISharedMap",
              "canonicalReference": "@fluidframework/map!ISharedMap:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SharedMap",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedMap#[Symbol.iterator]:member(1)",
              "docComment": "/**\n * Get an iterator over the entries in this map.\n *\n * @returns The iterator\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.iterator",
                  "canonicalReference": "!SymbolConstructor#iterator"
                },
                {
                  "kind": "Content",
                  "text": "](): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<[string, any]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "[Symbol.iterator]"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/map!SharedMap#[Symbol.toStringTag]:member",
              "docComment": "/**\n * String representation for the class.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly ["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.toStringTag",
                  "canonicalReference": "!SymbolConstructor#toStringTag"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "[Symbol.toStringTag]",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@fluidframework/map!SharedMap:constructor(1)",
              "docComment": "/**\n * Do not call the constructor. Instead, you should use the {@link SharedMap.create | create method}.\n *\n * @param id - String identifier.\n *\n * @param runtime - Data store runtime.\n *\n * @param attributes - The attributes for the map.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedMap#clear:member(1)",
              "docComment": "/**\n * Clear all data from the map.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clear(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "clear"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedMap.create:member(1)",
              "docComment": "/**\n * Create a new shared map.\n *\n * @param runtime - The data store runtime that the new shared map belongs to.\n *\n * @param id - Optional name of the shared map.\n *\n * @returns Newly created shared map.\n *\n * @example\n *\n * To create a `SharedMap`, call the static create method:\n * ```typescript\n * const myMap = SharedMap.create(this.runtime, id);\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static create(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SharedMap",
                  "canonicalReference": "@fluidframework/map!SharedMap:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedMap#delete:member(1)",
              "docComment": "/**\n * Delete a key from the map.\n *\n * @param key - Key to delete\n *\n * @returns True if the key existed and was deleted, false if it did not exist\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delete(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "delete"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedMap#entries:member(1)",
              "docComment": "/**\n * Get an iterator over the entries in this map.\n *\n * @returns The iterator\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "entries(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<[string, any]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "entries"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedMap#forEach:member(1)",
              "docComment": "/**\n * Executes the given callback on each entry in the map.\n *\n * @param callbackFn - Callback function\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forEach(callbackFn: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any, key: string, map: "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callbackFn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "forEach"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedMap#get:member(1)",
              "docComment": "/**\n * Retrieves the given key from the map.\n *\n * @param key - Key to retrieve from\n *\n * @returns The stored value, or undefined if the key is not set\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get<T = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "get"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedMap.getFactory:member(1)",
              "docComment": "/**\n * Get a factory for SharedMap to register with the data store.\n *\n * @returns A factory that creates SharedMaps and loads them from storage.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getFactory(): "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelFactory",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelFactory:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getFactory"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedMap#has:member(1)",
              "docComment": "/**\n * Check if a key exists in the map.\n *\n * @param key - The key to check\n *\n * @returns True if the key exists, false otherwise\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "has(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "has"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedMap#keys:member(1)",
              "docComment": "/**\n * Get an iterator over the keys in this map.\n *\n * @returns The iterator\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keys(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "keys"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedMap#set:member(1)",
              "docComment": "/**\n * Sets the value stored at key to the provided value.\n *\n * @param key - Key to set at\n *\n * @param value - Value to set\n *\n * @returns The ISharedMap itself\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "set"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/map!SharedMap#size:member",
              "docComment": "/**\n * The number of key/value pairs stored in the map.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get size(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "size",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/map!SharedMap#values:member(1)",
              "docComment": "/**\n * Get an iterator over the values in this map.\n *\n * @returns The iterator\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "values(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "values"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "implementsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 7
            }
          ]
        }
      ]
    }
  ]
}

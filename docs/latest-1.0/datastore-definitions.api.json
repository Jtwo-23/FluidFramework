{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.22.2",
    "schemaVersion": 1005,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@fluidframework/datastore-definitions!",
  "docComment": "/**\n * This package defines the interfaces required to implement and/or communicate with a data store.\n *\n * @packageDocumentation\n */\n",
  "name": "@fluidframework/datastore-definitions",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@fluidframework/datastore-definitions!",
      "name": "",
      "members": [
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/datastore-definitions!IChannel:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IChannel extends "
            },
            {
              "kind": "Reference",
              "text": "IFluidLoadable",
              "canonicalReference": "@fluidframework/core-interfaces!IFluidLoadable:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IChannel",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannel#attributes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "attributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannel#connect:member(1)",
              "docComment": "/**\n * Enables the channel to send and receive ops.\n *\n * @param services - Services to connect to\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connect(services: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelServices",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelServices:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "services",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "connect"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannel#getAttachSummary:member(1)",
              "docComment": "/**\n * Generates summary of the channel synchronously. It is called when an `attach message` for a local channel is generated. In other words, when the channel is being attached to make it visible to other clients. Note: Since Attach Summary is generated for local channels when making them visible to remote clients, they don't have any previous summaries to compare against. For this reason, The attach summary cannot contain summary handles (paths to sub-trees or blobs). It can, however, contain ISummaryAttachment (handles to blobs uploaded async via the blob manager).\n *\n * @param fullTree - flag indicating whether the attempt should generate a full summary tree without any handles for unchanged subtrees.\n *\n * @param trackState - optimization for tracking state of objects across summaries. If the state of an object did not change since last successful summary, an ISummaryHandle can be used instead of re-summarizing it. If this is false, the expectation is that you should never send an ISummaryHandle since you are not expected to track state. Note: The goal is to remove the trackState and automatically decided whether the handles will be used or not: https://github.com/microsoft/FluidFramework/issues/10455\n *\n * @returns A summary capturing the current state of the channel.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAttachSummary(fullTree?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", trackState?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", telemetryContext?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryContext",
                  "canonicalReference": "@fluidframework/runtime-definitions!ITelemetryContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ISummaryTreeWithStats",
                  "canonicalReference": "@fluidframework/runtime-definitions!ISummaryTreeWithStats:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fullTree",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "trackState",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "telemetryContext",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "name": "getAttachSummary"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannel#getGCData:member(1)",
              "docComment": "/**\n * Returns the GC data for this channel. It contains a list of GC nodes that contains references to other GC nodes.\n *\n * @param fullGC - true to bypass optimizations and force full generation of GC data.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getGCData(fullGC?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IGarbageCollectionData",
                  "canonicalReference": "@fluidframework/runtime-definitions!IGarbageCollectionData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fullGC",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "name": "getGCData"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannel#id:member",
              "docComment": "/**\n * A readonly identifier for the channel\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannel#isAttached:member(1)",
              "docComment": "/**\n * Checks if the channel is attached to storage.\n *\n * @returns True iff the channel is attached.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isAttached(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "isAttached"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannel#owner:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly owner?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "owner",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannel#summarize:member(1)",
              "docComment": "/**\n * Generates summary of the channel asynchronously. This should not be called where the channel can be modified while summarization is in progress.\n *\n * @param fullTree - flag indicating whether the attempt should generate a full summary tree without any handles for unchanged subtrees. It is only set to true when generating a summary from the entire container.\n *\n * @param trackState - This tells whether we should track state from this summary.\n *\n * @returns A summary capturing the current state of the channel.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "summarize(fullTree?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", trackState?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", telemetryContext?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryContext",
                  "canonicalReference": "@fluidframework/runtime-definitions!ITelemetryContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ISummaryTreeWithStats",
                  "canonicalReference": "@fluidframework/runtime-definitions!ISummaryTreeWithStats:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fullTree",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "trackState",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "telemetryContext",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "name": "summarize"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface",
          "docComment": "/**\n * Represents the attributes of a channel/DDS.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IChannelAttributes "
            }
          ],
          "releaseTag": "Public",
          "name": "IChannelAttributes",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes#packageVersion:member",
              "docComment": "/**\n * The package version of the code of the DDS, for debug only\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly packageVersion?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "packageVersion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes#snapshotFormatVersion:member",
              "docComment": "/**\n * Format version of the snapshot Currently, only use to display a debug message if the version is incompatible\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly snapshotFormatVersion: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "snapshotFormatVersion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes#type:member",
              "docComment": "/**\n * Type name of the DDS for factory look up with ISharedObjectRegistry\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/datastore-definitions!IChannelFactory:interface",
          "docComment": "/**\n * Definitions of a channel factory. Factories follow a common model but enable custom behavior.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IChannelFactory "
            }
          ],
          "releaseTag": "Public",
          "name": "IChannelFactory",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannelFactory#attributes:member",
              "docComment": "/**\n * Attributes of the channel.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "attributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannelFactory#create:member(1)",
              "docComment": "/**\n * Creates a local version of the channel. Calling attach on the object later will insert it into the object stream.\n *\n * @param runtime - The runtime the new object will be associated with\n *\n * @param id - The unique ID of the new object\n *\n * @returns The newly created object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "create(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IChannel",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannel:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "create"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannelFactory#load:member(1)",
              "docComment": "/**\n * Loads the given channel. This call is only ever invoked internally as the only thing that is ever directly loaded is the document itself. Load will then only be called on documents that were created and added to a channel.\n *\n * @param runtime - Data store runtime containing state/info/helper methods about the data store.\n *\n * @param id - ID of the channel.\n *\n * @param services - Services to read objects at a given path using the delta connection.\n *\n * @param channelAttributes - The attributes for the the channel to be loaded.\n *\n * @returns The loaded object\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "load(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", services: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelServices",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelServices:interface"
                },
                {
                  "kind": "Content",
                  "text": ", channelAttributes: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IChannel",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannel:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "services",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "channelAttributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "name": "load"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannelFactory#type:member",
              "docComment": "/**\n * String representing the type of the factory.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/datastore-definitions!IChannelServices:interface",
          "docComment": "/**\n * Storage services to read the objects at a given path using the given delta connection.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IChannelServices "
            }
          ],
          "releaseTag": "Public",
          "name": "IChannelServices",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannelServices#deltaConnection:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deltaConnection: "
                },
                {
                  "kind": "Reference",
                  "text": "IDeltaConnection",
                  "canonicalReference": "@fluidframework/datastore-definitions!IDeltaConnection:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "deltaConnection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannelServices#objectStorage:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "objectStorage: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelStorageService",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelStorageService:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "objectStorage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/datastore-definitions!IChannelStorageService:interface",
          "docComment": "/**\n * Storage services to read the objects at a given path.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IChannelStorageService "
            }
          ],
          "releaseTag": "Public",
          "name": "IChannelStorageService",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannelStorageService#contains:member(1)",
              "docComment": "/**\n * Determines if there is an object contained at the given path.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contains(path: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "path",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "contains"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannelStorageService#list:member(1)",
              "docComment": "/**\n * Lists the blobs that exist at a specific path.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "list(path: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "path",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "list"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannelStorageService#readBlob:member(1)",
              "docComment": "/**\n * Reads the object contained at the given path. Returns a buffer representation for the object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readBlob(path: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ArrayBufferLike",
                  "canonicalReference": "!ArrayBufferLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "path",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "readBlob"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/datastore-definitions!IDeltaConnection:interface",
          "docComment": "/**\n * Interface to represent a connection to a delta notification stream.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDeltaConnection "
            }
          ],
          "releaseTag": "Public",
          "name": "IDeltaConnection",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IDeltaConnection#addedGCOutboundReference:member(1)",
              "docComment": "/**\n * Called when a new outbound reference is added to another node. This is used by garbage collection to identify all references added in the system.\n *\n * @param srcHandle - The handle of the node that added the reference.\n *\n * @param outboundHandle - The handle of the outbound node that is referenced.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addedGCOutboundReference?(srcHandle: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidHandle",
                  "canonicalReference": "@fluidframework/core-interfaces!IFluidHandle:interface"
                },
                {
                  "kind": "Content",
                  "text": ", outboundHandle: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidHandle",
                  "canonicalReference": "@fluidframework/core-interfaces!IFluidHandle:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "srcHandle",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "outboundHandle",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "addedGCOutboundReference"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IDeltaConnection#attach:member(1)",
              "docComment": "/**\n * Attaches a message handler to the delta connection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "attach(handler: "
                },
                {
                  "kind": "Reference",
                  "text": "IDeltaHandler",
                  "canonicalReference": "@fluidframework/datastore-definitions!IDeltaHandler:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "handler",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "attach"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IDeltaConnection#connected:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connected: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "connected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IDeltaConnection#dirty:member(1)",
              "docComment": "/**\n * Indicates that the channel is dirty and needs to be part of the summary. It is called by a SharedSummaryBlock that needs to be part of the summary but does not generate ops.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dirty(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "dirty"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IDeltaConnection#submit:member(1)",
              "docComment": "/**\n * Send new messages to the server.\n *\n * @param messageContent - The content of the message to be sent.\n *\n * @param localOpMetadata - The local metadata associated with the message. This is kept locally by the runtime and not sent to the server. It will be provided back when this message is acknowledged by the server. It will also be provided back when asked to resubmit the message.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "submit(messageContent: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", localOpMetadata: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "messageContent",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "localOpMetadata",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "submit"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/datastore-definitions!IDeltaHandler:interface",
          "docComment": "/**\n * Handler provided by shared data structure to process requests from the runtime.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDeltaHandler "
            }
          ],
          "releaseTag": "Public",
          "name": "IDeltaHandler",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IDeltaHandler#applyStashedOp:member(1)",
              "docComment": "/**\n * Apply changes from an op. Used when rehydrating an attached container with pending changes. This prepares the SharedObject for seeing an ACK for the op or resubmitting the op upon reconnection.\n *\n * @param message - Contents of a stashed op.\n *\n * @returns localMetadata of the op, to be passed to process() or resubmit() when the op is ACKed or resubmitted, respectively\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "applyStashedOp(message: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "applyStashedOp"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IDeltaHandler#process:member",
              "docComment": "/**\n * Processes the op.\n *\n * @param message - The message to process\n *\n * @param local - Whether the message originated from the local client\n *\n * @param localOpMetadata - For local client messages, this is the metadata that was submitted with the message. For messages from a remote client, this will be undefined.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "process: "
                },
                {
                  "kind": "Content",
                  "text": "(message: "
                },
                {
                  "kind": "Reference",
                  "text": "ISequencedDocumentMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISequencedDocumentMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ", local: boolean, localOpMetadata: unknown) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "process",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IDeltaHandler#reSubmit:member(1)",
              "docComment": "/**\n * Called when the runtime asks the client to resubmit an op. This may be because the Container reconnected and this op was not acked. The client can choose to resubmit the same message, submit different / multiple messages or not submit anything at all.\n *\n * @param message - The original message that was submitted.\n *\n * @param localOpMetadata - The local metadata associated with the original message.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reSubmit(message: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", localOpMetadata: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "localOpMetadata",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "reSubmit"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IDeltaHandler#rollback:member(1)",
              "docComment": "/**\n * Revert a local op.\n *\n * @param message - The original message that was submitted.\n *\n * @param localOpMetadata - The local metadata associated with the original message.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rollback?(message: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", localOpMetadata: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "localOpMetadata",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "rollback"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IDeltaHandler#setConnectionState:member(1)",
              "docComment": "/**\n * State change events to indicate changes to the delta connection\n *\n * @param connected - true if connected, false otherwise\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setConnectionState(connected: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "connected",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "setConnectionState"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface",
          "docComment": "/**\n * Represents the runtime for the data store. Contains helper functions/state of the data store.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IFluidDataStoreRuntime extends "
            },
            {
              "kind": "Reference",
              "text": "IFluidRouter",
              "canonicalReference": "@fluidframework/core-interfaces!IFluidRouter:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IEventProvider",
              "canonicalReference": "@fluidframework/common-definitions!IEventProvider:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IFluidDataStoreRuntimeEvents",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntimeEvents:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IDisposable",
              "canonicalReference": "@fluidframework/common-definitions!IDisposable:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IProvideFluidDataStoreRegistry",
              "canonicalReference": "@fluidframework/runtime-definitions!IProvideFluidDataStoreRegistry:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "IFluidDataStoreRuntime",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime#attachState:member",
              "docComment": "/**\n * Indicates the attachment state of the data store to a host service.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly attachState: "
                },
                {
                  "kind": "Reference",
                  "text": "AttachState",
                  "canonicalReference": "@fluidframework/container-definitions!AttachState:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "attachState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime#bindChannel:member(1)",
              "docComment": "/**\n * Bind the channel with the data store runtime. If the runtime is attached then we attach the channel to make it live.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bindChannel(channel: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannel",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannel:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "channel",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "bindChannel"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime#channelsRoutingContext:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly channelsRoutingContext: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidHandleContext",
                  "canonicalReference": "@fluidframework/core-interfaces!IFluidHandleContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "channelsRoutingContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime#clientId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly clientId: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "clientId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime#connected:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly connected: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "connected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime#createChannel:member(1)",
              "docComment": "/**\n * Creates a new channel of the given type.\n *\n * @param id - ID of the channel to be created. A unique ID will be generated if left undefined.\n *\n * @param type - Type of the channel.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createChannel(id: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IChannel",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannel:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "createChannel"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime#deltaManager:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly deltaManager: "
                },
                {
                  "kind": "Reference",
                  "text": "IDeltaManager",
                  "canonicalReference": "@fluidframework/container-definitions!IDeltaManager:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ISequencedDocumentMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISequencedDocumentMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!IDocumentMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "deltaManager",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime#getAudience:member(1)",
              "docComment": "/**\n * Returns the current audience.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAudience(): "
                },
                {
                  "kind": "Reference",
                  "text": "IAudience",
                  "canonicalReference": "@fluidframework/container-definitions!IAudience:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getAudience"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime#getChannel:member(1)",
              "docComment": "/**\n * Returns the channel with the given id\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getChannel(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IChannel",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannel:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "getChannel"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime#getQuorum:member(1)",
              "docComment": "/**\n * Returns the current quorum.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getQuorum(): "
                },
                {
                  "kind": "Reference",
                  "text": "IQuorumClients",
                  "canonicalReference": "@fluidframework/protocol-definitions!IQuorumClients:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getQuorum"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime#IFluidHandleContext:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly IFluidHandleContext: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidHandleContext",
                  "canonicalReference": "@fluidframework/core-interfaces!IFluidHandleContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "IFluidHandleContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime#logger:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly logger: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryLogger",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "logger",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime#objectsRoutingContext:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly objectsRoutingContext: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidHandleContext",
                  "canonicalReference": "@fluidframework/core-interfaces!IFluidHandleContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "objectsRoutingContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime#options:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly options: "
                },
                {
                  "kind": "Reference",
                  "text": "ILoaderOptions",
                  "canonicalReference": "@fluidframework/container-definitions!ILoaderOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime#rootRoutingContext:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly rootRoutingContext: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidHandleContext",
                  "canonicalReference": "@fluidframework/core-interfaces!IFluidHandleContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rootRoutingContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime#submitSignal:member(1)",
              "docComment": "/**\n * Submits the signal to be sent to other clients.\n *\n * @param type - Type of the signal.\n *\n * @param content - Content of the signal.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "submitSignal(type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", content: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "content",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "submitSignal"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime#uploadBlob:member(1)",
              "docComment": "/**\n * Api to upload a blob of data.\n *\n * @param blob - blob to be uploaded.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uploadBlob(blob: "
                },
                {
                  "kind": "Reference",
                  "text": "ArrayBufferLike",
                  "canonicalReference": "!ArrayBufferLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IFluidHandle",
                  "canonicalReference": "@fluidframework/core-interfaces!IFluidHandle:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ArrayBufferLike",
                  "canonicalReference": "!ArrayBufferLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "blob",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "uploadBlob"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime#waitAttached:member(1)",
              "docComment": "/**\n * Resolves when a local data store is attached.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "waitAttached(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "waitAttached"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 7
            },
            {
              "startIndex": 8,
              "endIndex": 9
            },
            {
              "startIndex": 10,
              "endIndex": 13
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntimeEvents:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IFluidDataStoreRuntimeEvents extends "
            },
            {
              "kind": "Reference",
              "text": "IEvent",
              "canonicalReference": "@fluidframework/common-definitions!IEvent:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IFluidDataStoreRuntimeEvents",
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntimeEvents:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"disconnected\" | \"dispose\" | \"attaching\" | \"attached\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntimeEvents:call(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"op\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(message: "
                },
                {
                  "kind": "Reference",
                  "text": "ISequencedDocumentMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISequencedDocumentMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntimeEvents:call(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"signal\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(message: "
                },
                {
                  "kind": "Reference",
                  "text": "IInboundSignalMessage",
                  "canonicalReference": "@fluidframework/runtime-definitions!IInboundSignalMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ", local: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntimeEvents:call(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"connected\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(clientId: string) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluidframework/datastore-definitions!Jsonable:type",
          "docComment": "/**\n * Used to constrain a type `T` to types that are serializable as JSON. Produces a compile-time error if `T` contains non-Jsonable members.\n *\n * @remarks\n *\n * Note that this does NOT prevent using of values with non-json compatible data, it only prevents using values with types that include non-json compatible data. This means that one can, for example, pass an a value typed with json compatible interface into this function, that could actually be a class with lots on non-json compatible fields and methods.\n *\n * Important: `T extends Jsonable<T>` is incorrect (does not even compile). `T extends Jsonable` is also incorrect since `Jsonable` is just `any` and thus applies no constraint at all.\n *\n * The optional 'TReplaced' parameter may be used to permit additional leaf types to support situations where a `replacer` is used to handle special values (e.g., `Jsonable<{ x: IFluidHandle }, IFluidHandle>`).\n *\n * Note that `Jsonable<T>` does not protect against the following pitfalls when serializing with JSON.stringify():\n *\n * - `undefined` properties on objects are omitted (i.e., properties become undefined instead of equal to undefined). - When `undefined` appears as the root object or as an array element it is coerced to `null`. - Non-finite numbers (`NaN`, `+/-Infinity`) are also coerced to `null`. - prototypes and non-enumerable properties are lost.\n *\n * Also, `Jsonable<T>` does not prevent the construction of circular references.\n *\n * Using `Jsonable` (with no type parameters) or `Jsonable<any>` is just a type alias for `any` and should not be used if type safety is desired.\n *\n * @example\n *\n * Typical usage:\n * ```ts\n *      function foo<T>(value: Jsonable<T>) { ... }\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Jsonable<T = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", TReplaced = "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "T extends undefined | null | boolean | number | string | TReplaced ? T : "
            },
            {
              "kind": "Reference",
              "text": "Extract",
              "canonicalReference": "!Extract:type"
            },
            {
              "kind": "Content",
              "text": "<T, "
            },
            {
              "kind": "Reference",
              "text": "Function",
              "canonicalReference": "!Function:interface"
            },
            {
              "kind": "Content",
              "text": "> extends never ? {\n    [K in keyof T]: "
            },
            {
              "kind": "Reference",
              "text": "Extract",
              "canonicalReference": "!Extract:type"
            },
            {
              "kind": "Content",
              "text": "<K, symbol> extends never ? "
            },
            {
              "kind": "Reference",
              "text": "Jsonable",
              "canonicalReference": "@fluidframework/datastore-definitions!Jsonable:type"
            },
            {
              "kind": "Content",
              "text": "<T[K], TReplaced> : never;\n} : never"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Jsonable",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "typeParameterName": "TReplaced",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 5,
            "endIndex": 14
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluidframework/datastore-definitions!Serializable:type",
          "docComment": "/**\n * Used to constrain a type 'T' to types that Fluid can intrinsically serialize. Produces a compile-time error if `T` contains non-serializable members.\n *\n * @remarks\n *\n * See Jsonable for caveats regarding serialization of `undefined`, non-finite numbers, and circular references.\n *\n * Important: `T extends Serializable<T>` is generally incorrect. (Any value of `T` extends the serializable subset of itself.)\n *\n * @example\n *\n * Typical usage:\n * ```typescript\n *      function serialize<T>(value: Serializable<T>) { ... }\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Serializable<T = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "Jsonable",
              "canonicalReference": "@fluidframework/datastore-definitions!Jsonable:type"
            },
            {
              "kind": "Content",
              "text": "<T, "
            },
            {
              "kind": "Reference",
              "text": "IFluidHandle",
              "canonicalReference": "@fluidframework/core-interfaces!IFluidHandle:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Serializable",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          }
        }
      ]
    }
  ]
}

{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.22.2",
    "schemaVersion": 1005,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@fluidframework/container-definitions!",
  "docComment": "/**\n * This package contains the interfaces and types concerning the `Loader` and loading the `Container`.\n *\n * @packageDocumentation\n */\n",
  "name": "@fluidframework/container-definitions",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@fluidframework/container-definitions!",
      "name": "",
      "members": [
        {
          "kind": "Enum",
          "canonicalReference": "@fluidframework/container-definitions!AttachState:enum",
          "docComment": "/**\n * The attachment state of some Fluid data (e.g. a container or data store), denoting whether it is uploaded to the service. The transition from detached to attached state is a one-way transition.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum AttachState "
            }
          ],
          "releaseTag": "Public",
          "name": "AttachState",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluidframework/container-definitions!AttachState.Attached:member",
              "docComment": "/**\n * In attached state, the data has completed upload to the service. It can be accessed by other clients after reaching attached state.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Attached = "
                },
                {
                  "kind": "Content",
                  "text": "\"Attached\""
                }
              ],
              "releaseTag": "Public",
              "name": "Attached",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluidframework/container-definitions!AttachState.Attaching:member",
              "docComment": "/**\n * In attaching state, the data has started the upload to the service, but has not yet completed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Attaching = "
                },
                {
                  "kind": "Content",
                  "text": "\"Attaching\""
                }
              ],
              "releaseTag": "Public",
              "name": "Attaching",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluidframework/container-definitions!AttachState.Detached:member",
              "docComment": "/**\n * In detached state, the data is only present on the local client's machine. It has not yet been uploaded to the service.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Detached = "
                },
                {
                  "kind": "Content",
                  "text": "\"Detached\""
                }
              ],
              "releaseTag": "Public",
              "name": "Detached",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@fluidframework/container-definitions!BindState:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum BindState "
            }
          ],
          "releaseTag": "Public",
          "name": "BindState",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluidframework/container-definitions!BindState.Binding:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Binding = "
                },
                {
                  "kind": "Content",
                  "text": "\"Binding\""
                }
              ],
              "releaseTag": "Public",
              "name": "Binding",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluidframework/container-definitions!BindState.Bound:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Bound = "
                },
                {
                  "kind": "Content",
                  "text": "\"Bound\""
                }
              ],
              "releaseTag": "Public",
              "name": "Bound",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluidframework/container-definitions!BindState.NotBound:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NotBound = "
                },
                {
                  "kind": "Content",
                  "text": "\"NotBound\""
                }
              ],
              "releaseTag": "Public",
              "name": "NotBound",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@fluidframework/container-definitions!ConnectionState:namespace",
          "docComment": "/**\n * Namespace for the different connection states a container can be in PLEASE NOTE: The sequence of the numerical values does no correspond to the typical connection state progression\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace ConnectionState "
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectionState",
          "members": [
            {
              "kind": "TypeAlias",
              "canonicalReference": "@fluidframework/container-definitions!ConnectionState.CatchingUp:type",
              "docComment": "/**\n * The container has an inbound connection only, and is catching up to the latest known state from the service.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type CatchingUp = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "CatchingUp",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@fluidframework/container-definitions!ConnectionState.Connected:type",
              "docComment": "/**\n * The container is fully connected and syncing\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type Connected = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "Connected",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@fluidframework/container-definitions!ConnectionState.Connecting:type",
              "docComment": "/**\n * See ConnectionState.CatchingUp, which is the new name for this state.\n *\n * @deprecated\n *\n * - This state itself is not gone, just being renamed. Please use ConnectionState.CatchingUp.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type Connecting = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "Connecting",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@fluidframework/container-definitions!ConnectionState.Disconnected:type",
              "docComment": "/**\n * The container is not connected to the delta server Note - When in this state the container may be about to reconnect, or may remain disconnected until explicitly told to connect.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type Disconnected = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "Disconnected",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@fluidframework/container-definitions!ConnectionState.EstablishingConnection:type",
              "docComment": "/**\n * The container is disconnected but actively trying to establish a new connection PLEASE NOTE that this numerical value falls out of the order you may expect for this state\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type EstablishingConnection = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "EstablishingConnection",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluidframework/container-definitions!ConnectionState:type",
          "docComment": "/**\n * Type defining the different states of connectivity a container can be in\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ConnectionState = "
            },
            {
              "kind": "Reference",
              "text": "ConnectionState.Disconnected",
              "canonicalReference": "@fluidframework/container-definitions!ConnectionState.Disconnected:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ConnectionState.EstablishingConnection",
              "canonicalReference": "@fluidframework/container-definitions!ConnectionState.EstablishingConnection:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ConnectionState.CatchingUp",
              "canonicalReference": "@fluidframework/container-definitions!ConnectionState.CatchingUp:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ConnectionState.Connecting",
              "canonicalReference": "@fluidframework/container-definitions!ConnectionState.Connecting:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ConnectionState.Connected",
              "canonicalReference": "@fluidframework/container-definitions!ConnectionState.Connected:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectionState",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Enum",
          "canonicalReference": "@fluidframework/container-definitions!ContainerErrorType:enum",
          "docComment": "/**\n * Different error types the Container may report out to the Host\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum ContainerErrorType "
            }
          ],
          "releaseTag": "Public",
          "name": "ContainerErrorType",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluidframework/container-definitions!ContainerErrorType.clientSessionExpiredError:member",
              "docComment": "/**\n * Error indicating an client session has expired. Currently this only happens when GC is allowed on a document and aids in safely deleting unused objects.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clientSessionExpiredError = "
                },
                {
                  "kind": "Content",
                  "text": "\"clientSessionExpiredError\""
                }
              ],
              "releaseTag": "Public",
              "name": "clientSessionExpiredError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluidframework/container-definitions!ContainerErrorType.dataCorruptionError:member",
              "docComment": "/**\n * Data loss error detected by Container / DeltaManager. Likely points to storage issue.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataCorruptionError = "
                },
                {
                  "kind": "Content",
                  "text": "\"dataCorruptionError\""
                }
              ],
              "releaseTag": "Public",
              "name": "dataCorruptionError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluidframework/container-definitions!ContainerErrorType.dataProcessingError:member",
              "docComment": "/**\n * Error encountered when processing an operation. May correlate with data corruption.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataProcessingError = "
                },
                {
                  "kind": "Content",
                  "text": "\"dataProcessingError\""
                }
              ],
              "releaseTag": "Public",
              "name": "dataProcessingError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluidframework/container-definitions!ContainerErrorType.genericError:member",
              "docComment": "/**\n * Some error, most likely an exception caught by runtime and propagated to container as critical error\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "genericError = "
                },
                {
                  "kind": "Content",
                  "text": "\"genericError\""
                }
              ],
              "releaseTag": "Public",
              "name": "genericError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluidframework/container-definitions!ContainerErrorType.throttlingError:member",
              "docComment": "/**\n * Throttling error from server. Server is busy and is asking not to reconnect for some time\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "throttlingError = "
                },
                {
                  "kind": "Content",
                  "text": "\"throttlingError\""
                }
              ],
              "releaseTag": "Public",
              "name": "throttlingError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluidframework/container-definitions!ContainerErrorType.usageError:member",
              "docComment": "/**\n * Error indicating an API is being used improperly resulting in an invalid operation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "usageError = "
                },
                {
                  "kind": "Content",
                  "text": "\"usageError\""
                }
              ],
              "releaseTag": "Public",
              "name": "usageError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!ContainerWarning:interface",
          "docComment": "/**\n * Represents warnings raised on container.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ContainerWarning extends "
            },
            {
              "kind": "Reference",
              "text": "IErrorBase",
              "canonicalReference": "@fluidframework/container-definitions!IErrorBase:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ContainerWarning",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!ContainerWarning#logged:member",
              "docComment": "/**\n * Whether this error has already been logged. Used to avoid logging errors twice. Default is false.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logged?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "logged",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IAudience:interface",
          "docComment": "/**\n * Audience represents all clients connected to the op stream, both read-only and read/write.\n *\n * See {@link https://nodejs.org/api/events.html#class-eventemitter | here} for an overview of the `EventEmitter` class.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IAudience extends "
            },
            {
              "kind": "Reference",
              "text": "EventEmitter",
              "canonicalReference": "@types/events!EventEmitter:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IAudience",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IAudience#getMember:member(1)",
              "docComment": "/**\n * Get details about the connected client with the specified clientId, or undefined if the specified client isn't connected\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMember(clientId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IClient",
                  "canonicalReference": "@fluidframework/protocol-definitions!IClient:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "clientId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "getMember"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IAudience#getMembers:member(1)",
              "docComment": "/**\n * List all clients connected to the op stream, keyed off their clientId\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMembers(): "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "IClient",
                  "canonicalReference": "@fluidframework/protocol-definitions!IClient:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getMembers"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IAudience#on:member(1)",
              "docComment": "/**\n * See {@link https://nodejs.dev/learn/the-nodejs-event-emitter | here} for an overview of `EventEmitter.on`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "on(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"addMember\" | \"removeMember\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(clientId: string, client: "
                },
                {
                  "kind": "Reference",
                  "text": "IClient",
                  "canonicalReference": "@fluidframework/protocol-definitions!IClient:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "name": "on"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!ICodeAllowList:interface",
          "docComment": "/**\n * Code AllowListing Interface\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ICodeAllowList "
            }
          ],
          "releaseTag": "Public",
          "name": "ICodeAllowList",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!ICodeAllowList#testSource:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "testSource(source: "
                },
                {
                  "kind": "Reference",
                  "text": "IResolvedFluidCodeDetails",
                  "canonicalReference": "@fluidframework/container-definitions!IResolvedFluidCodeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "source",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "testSource"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!ICodeDetailsLoader:interface",
          "docComment": "/**\n * Fluid code loader resolves a code module matching the document schema, i.e. code details, such as a package name and package version range.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ICodeDetailsLoader extends "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IProvideFluidCodeDetailsComparer",
              "canonicalReference": "@fluidframework/container-definitions!IProvideFluidCodeDetailsComparer:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "ICodeDetailsLoader",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!ICodeDetailsLoader#load:member(1)",
              "docComment": "/**\n * Load the code module (package) that is capable to interact with the document.\n *\n * @param source - Code proposal that articulates the current schema the document is written in.\n *\n * @returns - Code module entry point along with the code details associated with it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "load(source: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidCodeDetails",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IFluidModuleWithDetails",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidModuleWithDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "source",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "load"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!ICodeLoader:interface",
          "docComment": "/**\n * Code loading interface\n *\n * @deprecated\n *\n * in favor of {@link @fluidframework/container-loader#ICodeDetailsLoader}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ICodeLoader extends "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IProvideFluidCodeDetailsComparer",
              "canonicalReference": "@fluidframework/container-definitions!IProvideFluidCodeDetailsComparer:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "ICodeLoader",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!ICodeLoader#load:member(1)",
              "docComment": "/**\n * Loads the package specified by code details and returns a promise to its entry point exports.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "load(source: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidCodeDetails",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IFluidModule",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidModule:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "source",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "load"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IConnectionDetails:interface",
          "docComment": "/**\n * Contract representing the result of a newly established connection to the server for syncing deltas\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IConnectionDetails "
            }
          ],
          "releaseTag": "Public",
          "name": "IConnectionDetails",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IConnectionDetails#checkpointSequenceNumber:member",
              "docComment": "/**\n * Last known sequence number to ordering service at the time of connection It may lap actual last sequence number (quite a bit, if container is very active). But it's best information for client to figure out how far it is behind, at least for \"read\" connections. \"write\" connections may use own \"join\" op to similar information, that is likely to be more up-to-date.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkpointSequenceNumber: "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "checkpointSequenceNumber",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IConnectionDetails#claims:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "claims: "
                },
                {
                  "kind": "Reference",
                  "text": "ITokenClaims",
                  "canonicalReference": "@fluidframework/protocol-definitions!ITokenClaims:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "claims",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IConnectionDetails#clientId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clientId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "clientId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IConnectionDetails#existing:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "existing: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "existing",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IConnectionDetails#initialClients:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialClients: "
                },
                {
                  "kind": "Reference",
                  "text": "ISignalClient",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISignalClient:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "initialClients",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IConnectionDetails#mode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mode: "
                },
                {
                  "kind": "Reference",
                  "text": "ConnectionMode",
                  "canonicalReference": "@fluidframework/protocol-definitions!ConnectionMode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IConnectionDetails#serviceConfiguration:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serviceConfiguration: "
                },
                {
                  "kind": "Reference",
                  "text": "IClientConfiguration",
                  "canonicalReference": "@fluidframework/protocol-definitions!IClientConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "serviceConfiguration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IConnectionDetails#version:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "version: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IContainer:interface",
          "docComment": "/**\n * The Host's view of the Container and its connection to storage\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IContainer extends "
            },
            {
              "kind": "Reference",
              "text": "IEventProvider",
              "canonicalReference": "@fluidframework/common-definitions!IEventProvider:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IContainerEvents",
              "canonicalReference": "@fluidframework/container-definitions!IContainerEvents:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IFluidRouter",
              "canonicalReference": "@fluidframework/core-interfaces!IFluidRouter:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IContainer",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainer#attach:member(1)",
              "docComment": "/**\n * Attaches the Container to the Container specified by the given Request.\n *\n * TODO - in the case of failure options should give a retry policy. Or some continuation function that allows attachment to a secondary document.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "attach(request: "
                },
                {
                  "kind": "Reference",
                  "text": "IRequest",
                  "canonicalReference": "@fluidframework/core-interfaces!IRequest:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "request",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "attach"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainer#attachState:member",
              "docComment": "/**\n * Indicates the attachment state of the container to a host service.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly attachState: "
                },
                {
                  "kind": "Reference",
                  "text": "AttachState",
                  "canonicalReference": "@fluidframework/container-definitions!AttachState:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "attachState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainer#audience:member",
              "docComment": "/**\n * The audience information for all clients currently associated with the document in the current session\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly audience: "
                },
                {
                  "kind": "Reference",
                  "text": "IAudience",
                  "canonicalReference": "@fluidframework/container-definitions!IAudience:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "audience",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainer#close:member(1)",
              "docComment": "/**\n * Closes the container\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "close(error?: "
                },
                {
                  "kind": "Reference",
                  "text": "ICriticalContainerError",
                  "canonicalReference": "@fluidframework/container-definitions!ICriticalContainerError:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "name": "close"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainer#closeAndGetPendingLocalState:member(1)",
              "docComment": "/**\n * Closes the container and returns serialized local state intended to be given to a newly loaded container\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "closeAndGetPendingLocalState(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "closeAndGetPendingLocalState"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainer#closed:member",
              "docComment": "/**\n * Returns true if the container has been closed, otherwise false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly closed: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "closed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainer#connect:member(1)",
              "docComment": "/**\n * Attempts to connect the container to the delta stream and process ops\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connect(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "connect"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainer#connectionState:member",
              "docComment": "/**\n * Provides the current state of the container's connection to the ordering service\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly connectionState: "
                },
                {
                  "kind": "Reference",
                  "text": "ConnectionState",
                  "canonicalReference": "@fluidframework/container-definitions!ConnectionState:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "connectionState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainer#deltaManager:member",
              "docComment": "/**\n * The Delta Manager supporting the op stream for this Container\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deltaManager: "
                },
                {
                  "kind": "Reference",
                  "text": "IDeltaManager",
                  "canonicalReference": "@fluidframework/container-definitions!IDeltaManager:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ISequencedDocumentMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISequencedDocumentMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!IDocumentMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "deltaManager",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainer#disconnect:member(1)",
              "docComment": "/**\n * Disconnects the container from the delta stream and stops processing ops\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disconnect(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "disconnect"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainer#getAbsoluteUrl:member(1)",
              "docComment": "/**\n * Get an absolute url for a provided container-relative request url. If the container is not attached, this will return undefined.\n *\n * @param relativeUrl - A container-relative request URL\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAbsoluteUrl(relativeUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "relativeUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "getAbsoluteUrl"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainer#getLoadedCodeDetails:member(1)",
              "docComment": "/**\n * Get the code details that were used to load the container.\n *\n * @returns The code details that were used to load the container if it is loaded, undefined if it is not yet loaded.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLoadedCodeDetails(): "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidCodeDetails",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getLoadedCodeDetails"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainer#getQuorum:member(1)",
              "docComment": "/**\n * The collection of write clients which were connected as of the current sequence number. Also contains a map of key-value pairs that must be agreed upon by all clients before being accepted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getQuorum(): "
                },
                {
                  "kind": "Reference",
                  "text": "IQuorumClients",
                  "canonicalReference": "@fluidframework/protocol-definitions!IQuorumClients:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getQuorum"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainer#getSpecifiedCodeDetails:member(1)",
              "docComment": "/**\n * Get the code details that are currently specified for the container.\n *\n * @returns The current code details if any are specified, undefined if none are specified.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSpecifiedCodeDetails(): "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidCodeDetails",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getSpecifiedCodeDetails"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainer#isDirty:member",
              "docComment": "/**\n * Returns true if the container is dirty, i.e. there are user changes that has not been saved Closing container in this state results in data loss for user. Container usually gets into this situation due to loss of connectivity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly isDirty: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isDirty",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainer#proposeCodeDetails:member(1)",
              "docComment": "/**\n * Propose new code details that define the code to be loaded for this container's runtime. The returned promise will be true when the proposal is accepted, and false if the proposal is rejected.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "proposeCodeDetails(codeDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidCodeDetails",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "codeDetails",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "proposeCodeDetails"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainer#readOnlyInfo:member",
              "docComment": "/**\n * Tells if container is in read-only mode. Data stores should listen for \"readonly\" notifications and disallow user making changes to data stores. Readonly state can be because of no storage write permission, or due to host forcing readonly mode for container.\n *\n * We do not differentiate here between no write access to storage vs. host disallowing changes to container - in all cases container runtime and data stores should respect readonly state and not allow local changes.\n *\n * It is undefined if we have not yet established websocket connection and do not know if user has write access to a file.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly readOnlyInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadOnlyInfo",
                  "canonicalReference": "@fluidframework/container-definitions!ReadOnlyInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readOnlyInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainer#request:member(1)",
              "docComment": "/**\n * Issue a request against the container for a resource.\n *\n * @param request - The request to be issued against the container\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "request(request: "
                },
                {
                  "kind": "Reference",
                  "text": "IRequest",
                  "canonicalReference": "@fluidframework/core-interfaces!IRequest:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IResponse",
                  "canonicalReference": "@fluidframework/core-interfaces!IResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "request",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "request"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainer#resolvedUrl:member",
              "docComment": "/**\n * Represents the resolved url to the Container Will be undefined only when the container is in the {@link AttachState.Detached | detatched} state.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resolvedUrl: "
                },
                {
                  "kind": "Reference",
                  "text": "IResolvedUrl",
                  "canonicalReference": "@fluidframework/driver-definitions!IResolvedUrl:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "resolvedUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainer#serialize:member(1)",
              "docComment": "/**\n * Extract the snapshot from the detached container.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serialize(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "serialize"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IContainerContext:interface",
          "docComment": "/**\n * The ContainerContext is a proxy standing between the Container and the Container's IRuntime. This allows the Container to terminate the connection to the IRuntime.\n *\n * Specifically, there is an event on Container, onContextChanged, which mean a new code proposal has been loaded, so the old IRuntime is no longer valid, as its ContainerContext has been revoked, and the Container has created a new ContainerContext.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IContainerContext extends "
            },
            {
              "kind": "Reference",
              "text": "IDisposable",
              "canonicalReference": "@fluidframework/common-definitions!IDisposable:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IContainerContext",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#attachState:member",
              "docComment": "/**\n * Indicates the attachment state of the container to a host service.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly attachState: "
                },
                {
                  "kind": "Reference",
                  "text": "AttachState",
                  "canonicalReference": "@fluidframework/container-definitions!AttachState:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "attachState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#audience:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly audience: "
                },
                {
                  "kind": "Reference",
                  "text": "IAudience",
                  "canonicalReference": "@fluidframework/container-definitions!IAudience:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "audience",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#baseSnapshot:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly baseSnapshot: "
                },
                {
                  "kind": "Reference",
                  "text": "ISnapshotTree",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISnapshotTree:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "baseSnapshot",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#clientDetails:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly clientDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "IClientDetails",
                  "canonicalReference": "@fluidframework/protocol-definitions!IClientDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "clientDetails",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#clientId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly clientId: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "clientId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#closeFn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly closeFn: "
                },
                {
                  "kind": "Content",
                  "text": "(error?: "
                },
                {
                  "kind": "Reference",
                  "text": "ICriticalContainerError",
                  "canonicalReference": "@fluidframework/container-definitions!ICriticalContainerError:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "closeFn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#connected:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly connected: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "connected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#deltaManager:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly deltaManager: "
                },
                {
                  "kind": "Reference",
                  "text": "IDeltaManager",
                  "canonicalReference": "@fluidframework/container-definitions!IDeltaManager:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ISequencedDocumentMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISequencedDocumentMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!IDocumentMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "deltaManager",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#existing:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly existing: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "existing",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#getAbsoluteUrl:member(1)",
              "docComment": "/**\n * Get an absolute url for a provided container-relative request.\n *\n * @param relativeUrl - A relative request within the container\n *\n * TODO: Optional for backwards compatibility. Make non-optional in version 0.19\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAbsoluteUrl?(relativeUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "relativeUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "getAbsoluteUrl"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#getLoadedFromVersion:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLoadedFromVersion(): "
                },
                {
                  "kind": "Reference",
                  "text": "IVersion",
                  "canonicalReference": "@fluidframework/protocol-definitions!IVersion:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getLoadedFromVersion"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#getSpecifiedCodeDetails:member(1)",
              "docComment": "/**\n * @deprecated\n *\n * This method is provided as a migration tool for customers currently reading the code details from within the Container by directly accessing the Quorum proposals. The code details should not be accessed from within the Container as this requires coupling between the container contents and the code loader. Direct access to Quorum proposals will be removed in an upcoming release, and in a further future release this migration tool will be removed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSpecifiedCodeDetails?(): "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidCodeDetails",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getSpecifiedCodeDetails"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#id:member",
              "docComment": "/**\n * WARNING: this id is meant for telemetry usages ONLY, not recommended for other consumption This id is not supposed to be exposed anywhere else. It is dependant on usage or drivers and scenarios which can change in the future.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#loader:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly loader: "
                },
                {
                  "kind": "Reference",
                  "text": "ILoader",
                  "canonicalReference": "@fluidframework/container-definitions!ILoader:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "loader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#options:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly options: "
                },
                {
                  "kind": "Reference",
                  "text": "ILoaderOptions",
                  "canonicalReference": "@fluidframework/container-definitions!ILoaderOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#pendingLocalState:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pendingLocalState?: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "pendingLocalState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#quorum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly quorum: "
                },
                {
                  "kind": "Reference",
                  "text": "IQuorumClients",
                  "canonicalReference": "@fluidframework/protocol-definitions!IQuorumClients:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "quorum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#scope:member",
              "docComment": "/**\n * Ambient services provided with the context\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly scope: "
                },
                {
                  "kind": "Reference",
                  "text": "FluidObject",
                  "canonicalReference": "@fluidframework/core-interfaces!FluidObject:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "scope",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#serviceConfiguration:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly serviceConfiguration: "
                },
                {
                  "kind": "Reference",
                  "text": "IClientConfiguration",
                  "canonicalReference": "@fluidframework/protocol-definitions!IClientConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "serviceConfiguration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#storage:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly storage: "
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentStorageService",
                  "canonicalReference": "@fluidframework/driver-definitions!IDocumentStorageService:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "storage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#submitFn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly submitFn: "
                },
                {
                  "kind": "Content",
                  "text": "(type: "
                },
                {
                  "kind": "Reference",
                  "text": "MessageType",
                  "canonicalReference": "@fluidframework/protocol-definitions!MessageType:enum"
                },
                {
                  "kind": "Content",
                  "text": ", contents: any, batch: boolean, appData?: any) => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "submitFn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#submitSignalFn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly submitSignalFn: "
                },
                {
                  "kind": "Content",
                  "text": "(contents: any) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "submitSignalFn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#taggedLogger:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly taggedLogger: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryBaseLogger",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "taggedLogger",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerContext#updateDirtyContainerState:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateDirtyContainerState(dirty: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dirty",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "updateDirtyContainerState"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IContainerEvents:interface",
          "docComment": "/**\n * Events emitted by the Container \"upwards\" to the Loader and Host\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IContainerEvents extends "
            },
            {
              "kind": "Reference",
              "text": "IEvent",
              "canonicalReference": "@fluidframework/common-definitions!IEvent:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IContainerEvents",
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerEvents:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"readonly\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(readonly: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerEvents:call(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"connected\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(clientId: string) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerEvents:call(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"codeDetailsProposed\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(codeDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidCodeDetails",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ", proposal: "
                },
                {
                  "kind": "Reference",
                  "text": "ISequencedProposal",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISequencedProposal:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerEvents:call(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"contextChanged\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(codeDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidCodeDetails",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerEvents:call(5)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"disconnected\" | \"attached\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 5,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerEvents:call(6)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"closed\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(error?: "
                },
                {
                  "kind": "Reference",
                  "text": "ICriticalContainerError",
                  "canonicalReference": "@fluidframework/container-definitions!ICriticalContainerError:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 6,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerEvents:call(7)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"warning\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(error: "
                },
                {
                  "kind": "Reference",
                  "text": "ContainerWarning",
                  "canonicalReference": "@fluidframework/container-definitions!ContainerWarning:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 7,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerEvents:call(8)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"op\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(message: "
                },
                {
                  "kind": "Reference",
                  "text": "ISequencedDocumentMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISequencedDocumentMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 8,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerEvents:call(9)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"dirty\" | \"saved\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(dirty: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 9,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IContainerLoadMode:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IContainerLoadMode "
            }
          ],
          "releaseTag": "Public",
          "name": "IContainerLoadMode",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerLoadMode#deltaConnection:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deltaConnection?: "
                },
                {
                  "kind": "Content",
                  "text": "\"none\" | \"delayed\" | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "deltaConnection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IContainerLoadMode#opsBeforeReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "opsBeforeReturn?: "
                },
                {
                  "kind": "Content",
                  "text": "undefined | \"cached\" | \"all\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "opsBeforeReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluidframework/container-definitions!ICriticalContainerError:type",
          "docComment": "/**\n * Represents errors raised on container.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ICriticalContainerError = "
            },
            {
              "kind": "Reference",
              "text": "IErrorBase",
              "canonicalReference": "@fluidframework/container-definitions!IErrorBase:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ICriticalContainerError",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IDeltaHandlerStrategy:interface",
          "docComment": "/**\n * Interface used to define a strategy for handling incoming delta messages\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDeltaHandlerStrategy "
            }
          ],
          "releaseTag": "Public",
          "name": "IDeltaHandlerStrategy",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaHandlerStrategy#process:member",
              "docComment": "/**\n * Processes the message.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "process: "
                },
                {
                  "kind": "Content",
                  "text": "(message: "
                },
                {
                  "kind": "Reference",
                  "text": "ISequencedDocumentMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISequencedDocumentMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "process",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaHandlerStrategy#processSignal:member",
              "docComment": "/**\n * Processes the signal.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processSignal: "
                },
                {
                  "kind": "Content",
                  "text": "(message: "
                },
                {
                  "kind": "Reference",
                  "text": "ISignalMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISignalMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "processSignal",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IDeltaManager:interface",
          "docComment": "/**\n * Manages the transmission of ops between the runtime and storage.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDeltaManager<T, U> extends "
            },
            {
              "kind": "Reference",
              "text": "IEventProvider",
              "canonicalReference": "@fluidframework/common-definitions!IEventProvider:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDeltaManagerEvents",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManagerEvents:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IDeltaSender",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaSender:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IDisposable",
              "canonicalReference": "@fluidframework/common-definitions!IDisposable:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "U",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IDeltaManager",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManager#active:member",
              "docComment": "/**\n * Flag to indicate whether the client can write or not.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly active: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "active",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManager#clientDetails:member",
              "docComment": "/**\n * Details of client\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly clientDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "IClientDetails",
                  "canonicalReference": "@fluidframework/protocol-definitions!IClientDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "clientDetails",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManager#hasCheckpointSequenceNumber:member",
              "docComment": "/**\n * Tells if current connection has checkpoint information. I.e. we know how far behind the client was at the time of establishing connection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly hasCheckpointSequenceNumber: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hasCheckpointSequenceNumber",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManager#inbound:member",
              "docComment": "/**\n * The queue of inbound delta messages\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly inbound: "
                },
                {
                  "kind": "Reference",
                  "text": "IDeltaQueue",
                  "canonicalReference": "@fluidframework/container-definitions!IDeltaQueue:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "inbound",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManager#inboundSignal:member",
              "docComment": "/**\n * The queue of inbound delta signals\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly inboundSignal: "
                },
                {
                  "kind": "Reference",
                  "text": "IDeltaQueue",
                  "canonicalReference": "@fluidframework/container-definitions!IDeltaQueue:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ISignalMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISignalMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "inboundSignal",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManager#initialSequenceNumber:member",
              "docComment": "/**\n * The initial sequence number set when attaching the op handler\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly initialSequenceNumber: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "initialSequenceNumber",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManager#lastKnownSeqNumber:member",
              "docComment": "/**\n * The latest sequence number the delta manager is aware of\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly lastKnownSeqNumber: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "lastKnownSeqNumber",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManager#lastMessage:member",
              "docComment": "/**\n * The last message processed by the delta manager\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly lastMessage: "
                },
                {
                  "kind": "Reference",
                  "text": "ISequencedDocumentMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISequencedDocumentMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "lastMessage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManager#lastSequenceNumber:member",
              "docComment": "/**\n * The last sequence number processed by the delta manager\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly lastSequenceNumber: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "lastSequenceNumber",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManager#maxMessageSize:member",
              "docComment": "/**\n * Max message size allowed to the delta manager\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly maxMessageSize: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "maxMessageSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManager#minimumSequenceNumber:member",
              "docComment": "/**\n * The current minimum sequence number\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly minimumSequenceNumber: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "minimumSequenceNumber",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManager#outbound:member",
              "docComment": "/**\n * The queue of outbound delta messages\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly outbound: "
                },
                {
                  "kind": "Reference",
                  "text": "IDeltaQueue",
                  "canonicalReference": "@fluidframework/container-definitions!IDeltaQueue:interface"
                },
                {
                  "kind": "Content",
                  "text": "<U[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "outbound",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManager#readOnlyInfo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly readOnlyInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadOnlyInfo",
                  "canonicalReference": "@fluidframework/container-definitions!ReadOnlyInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readOnlyInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManager#serviceConfiguration:member",
              "docComment": "/**\n * Service configuration provided by the service.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly serviceConfiguration: "
                },
                {
                  "kind": "Reference",
                  "text": "IClientConfiguration",
                  "canonicalReference": "@fluidframework/protocol-definitions!IClientConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "serviceConfiguration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManager#submitSignal:member(1)",
              "docComment": "/**\n * Submit a signal to the service to be broadcast to other connected clients, but not persisted\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "submitSignal(content: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "content",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "submitSignal"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManager#version:member",
              "docComment": "/**\n * Protocol version being used to communicate with the service\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly version: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 7
            },
            {
              "startIndex": 8,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IDeltaManagerEvents:interface",
          "docComment": "/**\n * Events emitted by the Delta Manager\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDeltaManagerEvents extends "
            },
            {
              "kind": "Reference",
              "text": "IEvent",
              "canonicalReference": "@fluidframework/common-definitions!IEvent:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDeltaManagerEvents",
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManagerEvents:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"prepareSend\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(messageBuffer: any[]) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManagerEvents:call(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"submitOp\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(message: "
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!IDocumentMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManagerEvents:call(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"op\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(message: "
                },
                {
                  "kind": "Reference",
                  "text": "ISequencedDocumentMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISequencedDocumentMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ", processingTime: number) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManagerEvents:call(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"allSentOpsAckd\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManagerEvents:call(5)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"pong\" | \"processTime\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(latency: number) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 5,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManagerEvents:call(6)",
              "docComment": "/**\n * The connect event fires once we've received the connect_document_success message from the server. This happens prior to the client's join message (if there is a join message).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"connect\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(details: "
                },
                {
                  "kind": "Reference",
                  "text": "IConnectionDetails",
                  "canonicalReference": "@fluidframework/container-definitions!IConnectionDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ", opsBehind?: number) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 6,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManagerEvents:call(7)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"disconnect\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(reason: string) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 7,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaManagerEvents:call(8)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"readonly\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(readonly: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 8,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IDeltaQueue:interface",
          "docComment": "/**\n * Queue of ops to be sent to or processed from storage\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDeltaQueue<T> extends "
            },
            {
              "kind": "Reference",
              "text": "IEventProvider",
              "canonicalReference": "@fluidframework/common-definitions!IEventProvider:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDeltaQueueEvents",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaQueueEvents:interface"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IDisposable",
              "canonicalReference": "@fluidframework/common-definitions!IDisposable:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IDeltaQueue",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaQueue#idle:member",
              "docComment": "/**\n * Flag indicating whether or not the queue is idle\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "idle: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "idle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaQueue#length:member",
              "docComment": "/**\n * The number of messages remaining in the queue\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "length: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "length",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaQueue#pause:member(1)",
              "docComment": "/**\n * Pauses processing on the queue\n *\n * @returns A promise which resolves when processing has been paused.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pause(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "pause"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaQueue#paused:member",
              "docComment": "/**\n * Flag indicating whether or not the queue was paused\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "paused: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "paused",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaQueue#peek:member(1)",
              "docComment": "/**\n * Peeks at the next message in the queue\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "peek(): "
                },
                {
                  "kind": "Content",
                  "text": "T | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "peek"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaQueue#resume:member(1)",
              "docComment": "/**\n * Resumes processing on the queue\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resume(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "resume"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaQueue#toArray:member(1)",
              "docComment": "/**\n * Returns all the items in the queue as an array. Does not remove them from the queue.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toArray(): "
                },
                {
                  "kind": "Content",
                  "text": "T[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "toArray"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaQueue#waitTillProcessingDone:member(1)",
              "docComment": "/**\n * returns number of ops processed and time it took to process these ops. Zeros if queue did not process anything (had no messages, was paused or had hit an error before)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "waitTillProcessingDone(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        count: number;\n        duration: number;\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "waitTillProcessingDone"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IDeltaQueueEvents:interface",
          "docComment": "/**\n * Events emitted by a Delta Queue\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDeltaQueueEvents<T> extends "
            },
            {
              "kind": "Reference",
              "text": "IErrorEvent",
              "canonicalReference": "@fluidframework/common-definitions!IErrorEvent:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IDeltaQueueEvents",
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaQueueEvents:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"push\" | \"op\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(task: T) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaQueueEvents:call(2)",
              "docComment": "/**\n * @param count - number of events (T) processed before becoming idle\n *\n * @param duration - amount of time it took to process elements (milliseconds).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"idle\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(count: number, duration: number) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IDeltaSender:interface",
          "docComment": "/**\n * Contract supporting delivery of outbound messages to the server\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDeltaSender "
            }
          ],
          "releaseTag": "Public",
          "name": "IDeltaSender",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IDeltaSender#flush:member(1)",
              "docComment": "/**\n * Flush all pending messages through the outbound queue\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "flush(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "flush"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IErrorBase:interface",
          "docComment": "/**\n * Base interface for all errors and warnings at container level\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IErrorBase extends "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "IErrorBase",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IErrorBase#errorType:member",
              "docComment": "/**\n * errorType is a union of error types from - container - runtime - drivers\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly errorType: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errorType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IErrorBase#getTelemetryProperties:member(1)",
              "docComment": "/**\n * Returns all properties of this error object that are either safe to log or explicitly tagged as containing privacy-sensitive data.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTelemetryProperties?(): "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryProperties",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getTelemetryProperties"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IErrorBase#message:member",
              "docComment": "/**\n * See Error.message Privacy Note - This is a freeform string that we may not control in all cases (e.g. a dependency throws an error) If there are known cases where this contains privacy-sensitive data it will be tagged and included in the result of getTelemetryProperties. When logging, consider fetching it that way rather than straight from this field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IErrorBase#name:member",
              "docComment": "/**\n * See Error.name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IErrorBase#stack:member",
              "docComment": "/**\n * See Error.stack\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly stack?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "stack",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IFluidBrowserPackage:interface",
          "docComment": "/**\n * A Fluid package for specification for browser environments\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IFluidBrowserPackage extends "
            },
            {
              "kind": "Reference",
              "text": "IFluidPackage",
              "canonicalReference": "@fluidframework/container-definitions!IFluidPackage:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IFluidBrowserPackage",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IFluidBrowserPackage#fluid:member",
              "docComment": "/**\n * {@inheritDoc @fluidframework/core-interfaces#IFluidPackage.fluid}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fluid: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        browser: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidBrowserPackageEnvironment",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidBrowserPackageEnvironment:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        [environment: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidPackageEnvironment",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidPackageEnvironment:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "fluid",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IFluidBrowserPackageEnvironment:interface",
          "docComment": "/**\n * A specific Fluid package environment for browsers\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IFluidBrowserPackageEnvironment extends "
            },
            {
              "kind": "Reference",
              "text": "IFluidPackageEnvironment",
              "canonicalReference": "@fluidframework/container-definitions!IFluidPackageEnvironment:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IFluidBrowserPackageEnvironment",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IFluidBrowserPackageEnvironment#umd:member",
              "docComment": "/**\n * The Universal Module Definition (umd) target specifics the scripts necessary for loading a packages in a browser environment and finding its entry point\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "umd: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        files: string[];\n        library: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "umd",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetails:interface",
          "docComment": "/**\n * Data structure used to describe the code to load on the Fluid document\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IFluidCodeDetails "
            }
          ],
          "releaseTag": "Public",
          "name": "IFluidCodeDetails",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetails#config:member",
              "docComment": "/**\n * Configuration details. This includes links to the package manager and base CDNs.\n *\n * @remarks\n *\n * This is strictly consumer-defined data. Its contents and semantics (including whether or not this data is present) are completely up to the consumer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly config?: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidCodeDetailsConfig",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetailsConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "config",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetails#package:member",
              "docComment": "/**\n * The code package to be used on the Fluid document. This is either the package name which will be loaded from a package manager. Or the expanded Fluid package.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly package: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IFluidPackage",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidPackage:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "package",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetailsComparer:interface",
          "docComment": "/**\n * Provides capability to compare Fluid code details.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IFluidCodeDetailsComparer extends "
            },
            {
              "kind": "Reference",
              "text": "IProvideFluidCodeDetailsComparer",
              "canonicalReference": "@fluidframework/container-definitions!IProvideFluidCodeDetailsComparer:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IFluidCodeDetailsComparer",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetailsComparer#compare:member(1)",
              "docComment": "/**\n * Return a number representing the ascending sort order of the `a` and `b` code details; `< 0` if `a < b`. `= 0` if `a === b`. `> 0` if `a > b`. `undefined` if `a` is not comparable to `b`.\n *\n * Similar semantics to: {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Description | Array.sort}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compare(a: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidCodeDetails",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidCodeDetails",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "compare"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetailsComparer#satisfies:member(1)",
              "docComment": "/**\n * Determines if the `candidate` code details satisfy the constraints specified in `constraint` code details.\n *\n * Similar semantics to: {@link https://github.com/npm/node-semver#usage}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "satisfies(candidate: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidCodeDetails",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ", constraint: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidCodeDetails",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "candidate",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "constraint",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "satisfies"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetailsComparer:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "IFluidCodeDetailsComparer: "
            },
            {
              "kind": "Content",
              "text": "keyof "
            },
            {
              "kind": "Reference",
              "text": "IProvideFluidCodeDetailsComparer",
              "canonicalReference": "@fluidframework/container-definitions!IProvideFluidCodeDetailsComparer:interface"
            }
          ],
          "releaseTag": "Public",
          "name": "IFluidCodeDetailsComparer",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetailsConfig:interface",
          "docComment": "/**\n * Package manager configuration. Provides a key value mapping of config values\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IFluidCodeDetailsConfig "
            }
          ],
          "releaseTag": "Public",
          "name": "IFluidCodeDetailsConfig",
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetailsConfig:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly [key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IFluidCodeResolver:interface",
          "docComment": "/**\n * Fluid code resolvers take a Fluid code details, and resolve the full Fluid package including absolute urls for the browser file entries. The Fluid code resolver is coupled to a specific cdn and knows how to resolve the code detail for loading from that cdn. This include resolving to the most recent version of package that supports the provided code details.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IFluidCodeResolver "
            }
          ],
          "releaseTag": "Public",
          "name": "IFluidCodeResolver",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IFluidCodeResolver#resolveCodeDetails:member(1)",
              "docComment": "/**\n * Resolves a Fluid code details into a form that can be loaded\n *\n * @param details - The Fluid code details to resolve\n *\n * @returns - A IResolvedFluidCodeDetails where the resolvedPackage's Fluid file entries are absolute urls, and an optional resolvedPackageCacheId if the loaded package should be cached.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resolveCodeDetails(details: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidCodeDetails",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IResolvedFluidCodeDetails",
                  "canonicalReference": "@fluidframework/container-definitions!IResolvedFluidCodeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "details",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "resolveCodeDetails"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IFluidModule:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IFluidModule "
            }
          ],
          "releaseTag": "Public",
          "name": "IFluidModule",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IFluidModule#fluidExport:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fluidExport: "
                },
                {
                  "kind": "Reference",
                  "text": "FluidObject",
                  "canonicalReference": "@fluidframework/core-interfaces!FluidObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IRuntimeFactory",
                  "canonicalReference": "@fluidframework/container-definitions!IRuntimeFactory:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "IProvideFluidCodeDetailsComparer",
                  "canonicalReference": "@fluidframework/container-definitions!IProvideFluidCodeDetailsComparer:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "fluidExport",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IFluidModuleWithDetails:interface",
          "docComment": "/**\n * Encapsulates a module entry point with corresponding code details.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IFluidModuleWithDetails "
            }
          ],
          "releaseTag": "Public",
          "name": "IFluidModuleWithDetails",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IFluidModuleWithDetails#details:member",
              "docComment": "/**\n * Code details associated with the module. Represents a document schema this module supports. If the code loader implements the {@link @fluidframework/core-interfaces#IFluidCodeDetailsComparer} interface, it'll be called to determine whether the module code details satisfy the new code proposal in the quorum.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "details: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidCodeDetails",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "details",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IFluidModuleWithDetails#module:member",
              "docComment": "/**\n * Fluid code module that implements the runtime factory needed to instantiate the container runtime.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "module: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidModule",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidModule:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "module",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IFluidPackage:interface",
          "docComment": "/**\n * Fluid-specific properties expected on a package to be loaded by the code loader. While compatible with the npm package format it is not necessary that that package is an npm package: {@link https://stackoverflow.com/questions/10065564/add-custom-metadata-or-config-to-package-json-is-it-valid}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IFluidPackage "
            }
          ],
          "releaseTag": "Public",
          "name": "IFluidPackage",
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "@fluidframework/container-definitions!IFluidPackage:index(1)",
              "docComment": "/**\n * General access for extended fields as specific usages will likely have additional infornamation like a definition of compatible versions, or deployment information like rings or rollouts.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IFluidPackage#fluid:member",
              "docComment": "/**\n * This object represents the Fluid specific properties of the package\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fluid: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [environment: string]: undefined | "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidPackageEnvironment",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidPackageEnvironment:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "fluid",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IFluidPackage#name:member",
              "docComment": "/**\n * The name of the package that this code represnets\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IFluidPackageEnvironment:interface",
          "docComment": "/**\n * Specifies an environment on Fluid property of a IFluidPackage\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IFluidPackageEnvironment "
            }
          ],
          "releaseTag": "Public",
          "name": "IFluidPackageEnvironment",
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "@fluidframework/container-definitions!IFluidPackageEnvironment:index(1)",
              "docComment": "/**\n * The name of the target. For a browser environment, this could be umd for scripts or css for styles.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[target: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "undefined | {\n        files: string[];\n        [key: string]: unknown;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "target",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IFluidTokenProvider:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IFluidTokenProvider extends "
            },
            {
              "kind": "Reference",
              "text": "IProvideFluidTokenProvider",
              "canonicalReference": "@fluidframework/container-definitions!IProvideFluidTokenProvider:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IFluidTokenProvider",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IFluidTokenProvider#intelligence:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "intelligence: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [service: string]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "intelligence",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluidframework/container-definitions!IFluidTokenProvider:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "IFluidTokenProvider: "
            },
            {
              "kind": "Content",
              "text": "keyof "
            },
            {
              "kind": "Reference",
              "text": "IProvideFluidTokenProvider",
              "canonicalReference": "@fluidframework/container-definitions!IProvideFluidTokenProvider:interface"
            }
          ],
          "releaseTag": "Public",
          "name": "IFluidTokenProvider",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IGenericError:interface",
          "docComment": "/**\n * Generic wrapper for an unrecognized/uncategorized error object\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IGenericError extends "
            },
            {
              "kind": "Reference",
              "text": "IErrorBase",
              "canonicalReference": "@fluidframework/container-definitions!IErrorBase:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IGenericError",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IGenericError#error:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IGenericError#errorType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly errorType: "
                },
                {
                  "kind": "Reference",
                  "text": "ContainerErrorType.genericError",
                  "canonicalReference": "@fluidframework/container-definitions!ContainerErrorType.genericError:member"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errorType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IHostLoader:interface",
          "docComment": "/**\n * The Host's view of the Loader, used for loading Containers\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IHostLoader extends "
            },
            {
              "kind": "Reference",
              "text": "ILoader",
              "canonicalReference": "@fluidframework/container-definitions!ILoader:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IHostLoader",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IHostLoader#createDetachedContainer:member(1)",
              "docComment": "/**\n * Creates a new container using the specified chaincode but in an unattached state. While unattached all updates will only be local until the user explicitly attaches the container to a service provider.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createDetachedContainer(codeDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidCodeDetails",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IContainer",
                  "canonicalReference": "@fluidframework/container-definitions!IContainer:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "codeDetails",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "createDetachedContainer"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IHostLoader#rehydrateDetachedContainerFromSnapshot:member(1)",
              "docComment": "/**\n * Creates a new container using the specified snapshot but in an unattached state. While unattached all updates will only be local until the user explicitly attaches the container to a service provider.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rehydrateDetachedContainerFromSnapshot(snapshot: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IContainer",
                  "canonicalReference": "@fluidframework/container-definitions!IContainer:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "snapshot",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "rehydrateDetachedContainerFromSnapshot"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!ILoader:interface",
          "docComment": "/**\n * The Runtime's view of the Loader, used for loading Containers\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ILoader extends "
            },
            {
              "kind": "Reference",
              "text": "IFluidRouter",
              "canonicalReference": "@fluidframework/core-interfaces!IFluidRouter:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IProvideLoader",
              "canonicalReference": "@fluidframework/container-definitions!IProvideLoader:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "ILoader",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!ILoader#resolve:member(1)",
              "docComment": "/**\n * Resolves the resource specified by the URL + headers contained in the request object to the underlying container that will resolve the request.\n *\n * An analogy for this is resolve is a DNS resolve of a Fluid container. Request then executes a request against the server found from the resolve step.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resolve(request: "
                },
                {
                  "kind": "Reference",
                  "text": "IRequest",
                  "canonicalReference": "@fluidframework/core-interfaces!IRequest:interface"
                },
                {
                  "kind": "Content",
                  "text": ", pendingLocalState?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IContainer",
                  "canonicalReference": "@fluidframework/container-definitions!IContainer:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "request",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "pendingLocalState",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "resolve"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 6
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!ILoaderHeader:interface",
          "docComment": "/**\n * Set of Request Headers that the Loader understands and may inspect or modify\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ILoaderHeader "
            }
          ],
          "releaseTag": "Public",
          "name": "ILoaderHeader",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!ILoaderHeader#\"fluid-cache\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "LoaderHeader.cache",
                  "canonicalReference": "@fluidframework/container-definitions!LoaderHeader.cache:member"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"fluid-cache\"",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!ILoaderHeader#\"fluid-client-details\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "LoaderHeader.clientDetails",
                  "canonicalReference": "@fluidframework/container-definitions!LoaderHeader.clientDetails:member"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "IClientDetails",
                  "canonicalReference": "@fluidframework/protocol-definitions!IClientDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"fluid-client-details\"",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!ILoaderHeader#\"fluid-reconnect\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "LoaderHeader.reconnect",
                  "canonicalReference": "@fluidframework/container-definitions!LoaderHeader.reconnect:member"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"fluid-reconnect\"",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!ILoaderHeader#\"fluid-sequence-number\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "LoaderHeader.sequenceNumber",
                  "canonicalReference": "@fluidframework/container-definitions!LoaderHeader.sequenceNumber:member"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"fluid-sequence-number\"",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!ILoaderHeader#loadMode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "LoaderHeader.loadMode",
                  "canonicalReference": "@fluidframework/container-definitions!LoaderHeader.loadMode:member"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "IContainerLoadMode",
                  "canonicalReference": "@fluidframework/container-definitions!IContainerLoadMode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "loadMode",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!ILoaderHeader#version:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "LoaderHeader.version",
                  "canonicalReference": "@fluidframework/container-definitions!LoaderHeader.version:member"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluidframework/container-definitions!ILoaderOptions:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ILoaderOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n    [key in string | number]: any;\n} & {\n    cache?: boolean;\n    provideScopeLoader?: boolean;\n    maxClientLeaveWaitTime?: number;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ILoaderOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IPendingLocalState:interface",
          "docComment": "/**\n * @deprecated\n *\n * 0.48, This API will be removed in 0.50 No replacement since it is not expected anyone will depend on this outside container-loader See https://github.com/microsoft/FluidFramework/issues/9711 for context\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPendingLocalState "
            }
          ],
          "releaseTag": "Public",
          "name": "IPendingLocalState",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IPendingLocalState#pendingRuntimeState:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pendingRuntimeState: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pendingRuntimeState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IPendingLocalState#url:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "url",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IProvideFluidCodeDetailsComparer:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IProvideFluidCodeDetailsComparer "
            }
          ],
          "releaseTag": "Public",
          "name": "IProvideFluidCodeDetailsComparer",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IProvideFluidCodeDetailsComparer#IFluidCodeDetailsComparer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly IFluidCodeDetailsComparer: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidCodeDetailsComparer",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetailsComparer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "IFluidCodeDetailsComparer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IProvideFluidTokenProvider:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IProvideFluidTokenProvider "
            }
          ],
          "releaseTag": "Public",
          "name": "IProvideFluidTokenProvider",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IProvideFluidTokenProvider#IFluidTokenProvider:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly IFluidTokenProvider: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidTokenProvider",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidTokenProvider:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "IFluidTokenProvider",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IProvideLoader:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IProvideLoader "
            }
          ],
          "releaseTag": "Public",
          "name": "IProvideLoader",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IProvideLoader#ILoader:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly ILoader: "
                },
                {
                  "kind": "Reference",
                  "text": "ILoader",
                  "canonicalReference": "@fluidframework/container-definitions!ILoader:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ILoader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IProvideRuntimeFactory:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IProvideRuntimeFactory "
            }
          ],
          "releaseTag": "Public",
          "name": "IProvideRuntimeFactory",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IProvideRuntimeFactory#IRuntimeFactory:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly IRuntimeFactory: "
                },
                {
                  "kind": "Reference",
                  "text": "IRuntimeFactory",
                  "canonicalReference": "@fluidframework/container-definitions!IRuntimeFactory:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "IRuntimeFactory",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IResolvedFluidCodeDetails:interface",
          "docComment": "/**\n * The interface returned from a IFluidCodeResolver which represents IFluidCodeDetails that have been resolved and are ready to load\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IResolvedFluidCodeDetails extends "
            },
            {
              "kind": "Reference",
              "text": "IFluidCodeDetails",
              "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetails:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IResolvedFluidCodeDetails",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IResolvedFluidCodeDetails#resolvedPackage:member",
              "docComment": "/**\n * A resolved version of the Fluid package. All Fluid browser file entries should be absolute urls.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly resolvedPackage: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IFluidPackage",
                  "canonicalReference": "@fluidframework/container-definitions!IFluidPackage:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "resolvedPackage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IResolvedFluidCodeDetails#resolvedPackageCacheId:member",
              "docComment": "/**\n * If not undefined, this id will be used to cache the entry point for the code package\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly resolvedPackageCacheId: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "resolvedPackageCacheId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IRuntime:interface",
          "docComment": "/**\n * The IRuntime represents an instantiation of a code package within a Container. Primarily held by the ContainerContext to be able to interact with the running instance of the Container.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IRuntime extends "
            },
            {
              "kind": "Reference",
              "text": "IDisposable",
              "canonicalReference": "@fluidframework/common-definitions!IDisposable:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IRuntime",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IRuntime#createSummary:member(1)",
              "docComment": "/**\n * Create a summary. Used when attaching or serializing a detached container.\n *\n * @param blobRedirectTable - A table passed during the attach process. While detached, blob upload is supported using IDs generated locally. After attach, these IDs cannot be used, so this table maps the old local IDs to the new storage IDs so requests can be redirected.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createSummary(blobRedirectTable?: "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ISummaryTree",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISummaryTree:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "blobRedirectTable",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": true
                }
              ],
              "name": "createSummary"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IRuntime#getPendingLocalState:member(1)",
              "docComment": "/**\n * Get pending local state in a serializable format to be given back to a newly loaded container\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPendingLocalState(): "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getPendingLocalState"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IRuntime#notifyAttaching:member(1)",
              "docComment": "/**\n * Notify runtime that container is moving to \"Attaching\" state\n *\n * @param snapshot - snapshot created at attach time\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "notifyAttaching(snapshot: "
                },
                {
                  "kind": "Reference",
                  "text": "ISnapshotTreeWithBlobContents",
                  "canonicalReference": "@fluidframework/container-definitions!ISnapshotTreeWithBlobContents:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "snapshot",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "notifyAttaching"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IRuntime#process:member(1)",
              "docComment": "/**\n * Processes the given op (message)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "process(message: "
                },
                {
                  "kind": "Reference",
                  "text": "ISequencedDocumentMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISequencedDocumentMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ", local: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "local",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "name": "process"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IRuntime#processSignal:member(1)",
              "docComment": "/**\n * Processes the given signal\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processSignal(message: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", local: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "local",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "processSignal"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IRuntime#request:member(1)",
              "docComment": "/**\n * Executes a request against the runtime\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "request(request: "
                },
                {
                  "kind": "Reference",
                  "text": "IRequest",
                  "canonicalReference": "@fluidframework/core-interfaces!IRequest:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IResponse",
                  "canonicalReference": "@fluidframework/core-interfaces!IResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "request",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "request"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IRuntime#setAttachState:member(1)",
              "docComment": "/**\n * Propagate the container state when container is attaching or attached.\n *\n * @param attachState - State of the container.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setAttachState(attachState: "
                },
                {
                  "kind": "Reference",
                  "text": "AttachState.Attaching",
                  "canonicalReference": "@fluidframework/container-definitions!AttachState.Attaching:member"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "AttachState.Attached",
                  "canonicalReference": "@fluidframework/container-definitions!AttachState.Attached:member"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "attachState",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "setAttachState"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IRuntime#setConnectionState:member(1)",
              "docComment": "/**\n * Notifies the runtime of a change in the connection state\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setConnectionState(connected: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", clientId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "connected",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "clientId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "setConnectionState"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IRuntimeFactory:interface",
          "docComment": "/**\n * Exported module definition\n *\n * Provides the entry point for the ContainerContext to load the proper IRuntime to start up the running instance of the Container.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IRuntimeFactory extends "
            },
            {
              "kind": "Reference",
              "text": "IProvideRuntimeFactory",
              "canonicalReference": "@fluidframework/container-definitions!IProvideRuntimeFactory:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IRuntimeFactory",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/container-definitions!IRuntimeFactory#instantiateRuntime:member(1)",
              "docComment": "/**\n * Instantiates a new IRuntime for the given IContainerContext to proxy to This is the main entry point to the Container's business logic\n *\n * @param context - container context to be supplied to the runtime\n *\n * @param existing - whether to instantiate for the first time or from an existing context\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "instantiateRuntime(context: "
                },
                {
                  "kind": "Reference",
                  "text": "IContainerContext",
                  "canonicalReference": "@fluidframework/container-definitions!IContainerContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ", existing?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IRuntime",
                  "canonicalReference": "@fluidframework/container-definitions!IRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "existing",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "instantiateRuntime"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluidframework/container-definitions!IRuntimeFactory:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "IRuntimeFactory: "
            },
            {
              "kind": "Content",
              "text": "keyof "
            },
            {
              "kind": "Reference",
              "text": "IProvideRuntimeFactory",
              "canonicalReference": "@fluidframework/container-definitions!IProvideRuntimeFactory:interface"
            }
          ],
          "releaseTag": "Public",
          "name": "IRuntimeFactory",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluidframework/container-definitions!isFluidBrowserPackage:var",
          "docComment": "/**\n * Determines if any object is an IFluidBrowserPackage\n *\n * @param maybePkg - The object to check for compatibility with IFluidBrowserPackage\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isFluidBrowserPackage: "
            },
            {
              "kind": "Content",
              "text": "(maybePkg: any) => "
            },
            {
              "kind": "Reference",
              "text": "maybePkg",
              "canonicalReference": "@fluidframework/container-definitions!~maybePkg"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IFluidBrowserPackage",
              "canonicalReference": "@fluidframework/container-definitions!IFluidBrowserPackage:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "isFluidBrowserPackage",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluidframework/container-definitions!isFluidCodeDetails:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isFluidCodeDetails: "
            },
            {
              "kind": "Content",
              "text": "(details: unknown) => "
            },
            {
              "kind": "Reference",
              "text": "details",
              "canonicalReference": "@fluidframework/container-definitions!~details"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IFluidCodeDetails",
              "canonicalReference": "@fluidframework/container-definitions!IFluidCodeDetails:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "isFluidCodeDetails",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluidframework/container-definitions!isFluidPackage:var",
          "docComment": "/**\n * Check if the package.json defines a Fluid package\n *\n * @param pkg - the package json data to check if it is a Fluid package.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isFluidPackage: "
            },
            {
              "kind": "Content",
              "text": "(pkg: any) => "
            },
            {
              "kind": "Reference",
              "text": "pkg",
              "canonicalReference": "@fluidframework/container-definitions!~pkg"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IFluidPackage",
              "canonicalReference": "@fluidframework/container-definitions!IFluidPackage:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "isFluidPackage",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!ISnapshotTreeWithBlobContents:interface",
          "docComment": "/**\n * This is used when we rehydrate a container from the snapshot. Here we put the blob contents in separate property: blobContents. This is used as the ContainerContext's base snapshot when attaching.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISnapshotTreeWithBlobContents extends "
            },
            {
              "kind": "Reference",
              "text": "ISnapshotTree",
              "canonicalReference": "@fluidframework/protocol-definitions!ISnapshotTree:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ISnapshotTreeWithBlobContents",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!ISnapshotTreeWithBlobContents#blobsContents:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "blobsContents: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [path: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "ArrayBufferLike",
                  "canonicalReference": "!ArrayBufferLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "blobsContents",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!ISnapshotTreeWithBlobContents#trees:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "trees: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [path: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "ISnapshotTreeWithBlobContents",
                  "canonicalReference": "@fluidframework/container-definitions!ISnapshotTreeWithBlobContents:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "trees",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IThrottlingWarning:interface",
          "docComment": "/**\n * Warning emitted when requests to storage are being throttled\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IThrottlingWarning extends "
            },
            {
              "kind": "Reference",
              "text": "IErrorBase",
              "canonicalReference": "@fluidframework/container-definitions!IErrorBase:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IThrottlingWarning",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IThrottlingWarning#errorType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly errorType: "
                },
                {
                  "kind": "Reference",
                  "text": "ContainerErrorType.throttlingError",
                  "canonicalReference": "@fluidframework/container-definitions!ContainerErrorType.throttlingError:member"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errorType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IThrottlingWarning#retryAfterSeconds:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly retryAfterSeconds: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "retryAfterSeconds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/container-definitions!IUsageError:interface",
          "docComment": "/**\n * Error indicating an API is being used improperly resulting in an invalid operation.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IUsageError extends "
            },
            {
              "kind": "Reference",
              "text": "IErrorBase",
              "canonicalReference": "@fluidframework/container-definitions!IErrorBase:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IUsageError",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/container-definitions!IUsageError#errorType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly errorType: "
                },
                {
                  "kind": "Reference",
                  "text": "ContainerErrorType.usageError",
                  "canonicalReference": "@fluidframework/container-definitions!ContainerErrorType.usageError:member"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errorType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@fluidframework/container-definitions!LoaderHeader:enum",
          "docComment": "/**\n * Accepted header keys for requests coming to the Loader\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum LoaderHeader "
            }
          ],
          "releaseTag": "Public",
          "name": "LoaderHeader",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluidframework/container-definitions!LoaderHeader.cache:member",
              "docComment": "/**\n * Override the Loader's default caching behavior for this container.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cache = "
                },
                {
                  "kind": "Content",
                  "text": "\"fluid-cache\""
                }
              ],
              "releaseTag": "Public",
              "name": "cache",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluidframework/container-definitions!LoaderHeader.clientDetails:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clientDetails = "
                },
                {
                  "kind": "Content",
                  "text": "\"fluid-client-details\""
                }
              ],
              "releaseTag": "Public",
              "name": "clientDetails",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluidframework/container-definitions!LoaderHeader.loadMode:member",
              "docComment": "/**\n * Start the container in a paused, unconnected state. Defaults to false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loadMode = "
                },
                {
                  "kind": "Content",
                  "text": "\"loadMode\""
                }
              ],
              "releaseTag": "Public",
              "name": "loadMode",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluidframework/container-definitions!LoaderHeader.reconnect:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reconnect = "
                },
                {
                  "kind": "Content",
                  "text": "\"fluid-reconnect\""
                }
              ],
              "releaseTag": "Public",
              "name": "reconnect",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluidframework/container-definitions!LoaderHeader.sequenceNumber:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sequenceNumber = "
                },
                {
                  "kind": "Content",
                  "text": "\"fluid-sequence-number\""
                }
              ],
              "releaseTag": "Public",
              "name": "sequenceNumber",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluidframework/container-definitions!LoaderHeader.version:member",
              "docComment": "/**\n * One of the following: null or \"null\": use ops, no snapshots undefined: fetch latest snapshot otherwise, version sha to load snapshot\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "version = "
                },
                {
                  "kind": "Content",
                  "text": "\"version\""
                }
              ],
              "releaseTag": "Public",
              "name": "version",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluidframework/container-definitions!ReadOnlyInfo:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ReadOnlyInfo = "
            },
            {
              "kind": "Content",
              "text": "{\n    readonly readonly: false | undefined;\n} | {\n    readonly readonly: true;\n    readonly forced: boolean;\n    readonly permissions: boolean | undefined;\n    readonly storageOnly: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ReadOnlyInfo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        }
      ]
    }
  ]
}

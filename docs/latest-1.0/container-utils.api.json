{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.22.2",
    "schemaVersion": 1005,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@fluidframework/container-utils!",
  "docComment": "",
  "name": "@fluidframework/container-utils",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@fluidframework/container-utils!",
      "name": "",
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/container-utils!ClientSessionExpiredError:class",
          "docComment": "/**\n * Error indicating that a client's session has reached its time limit and is closed.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ClientSessionExpiredError extends "
            },
            {
              "kind": "Reference",
              "text": "LoggingError",
              "canonicalReference": "@fluidframework/telemetry-utils!LoggingError:class"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "IFluidErrorBase",
              "canonicalReference": "@fluidframework/telemetry-utils!IFluidErrorBase:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ClientSessionExpiredError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluidframework/container-utils!ClientSessionExpiredError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ClientSessionExpiredError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", expiryMs: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "expiryMs",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/container-utils!ClientSessionExpiredError#errorType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly errorType = "
                },
                {
                  "kind": "Reference",
                  "text": "ContainerErrorType.clientSessionExpiredError",
                  "canonicalReference": "@fluidframework/container-definitions!ContainerErrorType.clientSessionExpiredError:member"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errorType",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/container-utils!ClientSessionExpiredError#expiryMs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly expiryMs: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "expiryMs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": [
            {
              "startIndex": 4,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/container-utils!DataCorruptionError:class",
          "docComment": "/**\n * DataCorruptionError indicates that we encountered definitive evidence that the data at rest backing this container is corrupted, and this container would never be expected to load properly again\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DataCorruptionError extends "
            },
            {
              "kind": "Reference",
              "text": "LoggingError",
              "canonicalReference": "@fluidframework/telemetry-utils!LoggingError:class"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "IErrorBase",
              "canonicalReference": "@fluidframework/container-definitions!IErrorBase:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IFluidErrorBase",
              "canonicalReference": "@fluidframework/telemetry-utils!IFluidErrorBase:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DataCorruptionError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluidframework/container-utils!DataCorruptionError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `DataCorruptionError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryProperties",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/container-utils!DataCorruptionError#canRetry:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly canRetry = false;"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "canRetry",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/container-utils!DataCorruptionError#errorType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly errorType = "
                },
                {
                  "kind": "Reference",
                  "text": "ContainerErrorType.dataCorruptionError",
                  "canonicalReference": "@fluidframework/container-definitions!ContainerErrorType.dataCorruptionError:member"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errorType",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": [
            {
              "startIndex": 4,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/container-utils!DataProcessingError:class",
          "docComment": "/**\n * DataProcessingError indicates we hit a fatal error while processing incoming data from the Fluid Service. The error will often originate in the dataStore or DDS implementation that is responding to incoming changes. This differs from DataCorruptionError in that this may be a transient error that will not repro in another client or session.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DataProcessingError extends "
            },
            {
              "kind": "Reference",
              "text": "LoggingError",
              "canonicalReference": "@fluidframework/telemetry-utils!LoggingError:class"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "IErrorBase",
              "canonicalReference": "@fluidframework/container-definitions!IErrorBase:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IFluidErrorBase",
              "canonicalReference": "@fluidframework/telemetry-utils!IFluidErrorBase:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DataProcessingError",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/container-utils!DataProcessingError#canRetry:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly canRetry = false;"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "canRetry",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/container-utils!DataProcessingError.create:member(1)",
              "docComment": "/**\n * Create a new DataProcessingError detected and raised with the FF code\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static create(errorMessage: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", dataProcessingCodepath: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", sequencedMessage?: "
                },
                {
                  "kind": "Reference",
                  "text": "ISequencedDocumentMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISequencedDocumentMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ", props?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryProperties",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidErrorBase",
                  "canonicalReference": "@fluidframework/telemetry-utils!IFluidErrorBase:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "errorMessage",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "dataProcessingCodepath",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "sequencedMessage",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "name": "create"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/container-utils!DataProcessingError#errorType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly errorType = "
                },
                {
                  "kind": "Reference",
                  "text": "ContainerErrorType.dataProcessingError",
                  "canonicalReference": "@fluidframework/container-definitions!ContainerErrorType.dataProcessingError:member"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errorType",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/container-utils!DataProcessingError.wrapIfUnrecognized:member(1)",
              "docComment": "/**\n * Wrap the given error in a DataProcessingError, unless the error is already of a known type. In either case, the error will have some relevant properties added for telemetry We wrap conditionally since known error types represent well-understood failure modes, and ideally one day we will move away from throwing these errors but rather we'll return them. But an unrecognized error needs to be classified as DataProcessingError.\n *\n * @param originalError - error to be converted\n *\n * @param dataProcessingCodepath - which codepath failed while processing data\n *\n * @param sequencedMessage - Sequenced message to include info about via telemetry props\n *\n * @returns Either a new DataProcessingError, or (if wrapping is deemed unnecessary) the given error\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static wrapIfUnrecognized(originalError: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", dataProcessingCodepath: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", sequencedMessage?: "
                },
                {
                  "kind": "Reference",
                  "text": "ISequencedDocumentMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISequencedDocumentMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidErrorBase",
                  "canonicalReference": "@fluidframework/telemetry-utils!IFluidErrorBase:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "originalError",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "dataProcessingCodepath",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "sequencedMessage",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "name": "wrapIfUnrecognized"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": [
            {
              "startIndex": 4,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluidframework/container-utils!extractSafePropertiesFromMessage:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "extractSafePropertiesFromMessage: "
            },
            {
              "kind": "Content",
              "text": "(message: "
            },
            {
              "kind": "Reference",
              "text": "ISequencedDocumentMessage",
              "canonicalReference": "@fluidframework/protocol-definitions!ISequencedDocumentMessage:interface"
            },
            {
              "kind": "Content",
              "text": ") => {\n    messageClientId: string;\n    messageSequenceNumber: number;\n    messageClientSequenceNumber: number;\n    messageReferenceSequenceNumber: number;\n    messageMinimumSequenceNumber: number;\n    messageTimestamp: number;\n}"
            }
          ],
          "releaseTag": "Public",
          "name": "extractSafePropertiesFromMessage",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/container-utils!GenericError:class",
          "docComment": "/**\n * Generic wrapper for an unrecognized/uncategorized error object\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class GenericError extends "
            },
            {
              "kind": "Reference",
              "text": "LoggingError",
              "canonicalReference": "@fluidframework/telemetry-utils!LoggingError:class"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "IGenericError",
              "canonicalReference": "@fluidframework/container-definitions!IGenericError:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IFluidErrorBase",
              "canonicalReference": "@fluidframework/telemetry-utils!IFluidErrorBase:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "GenericError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluidframework/container-utils!GenericError:constructor(1)",
              "docComment": "/**\n * Create a new GenericError\n *\n * @param message - Error message\n *\n * @param error - inner error object\n *\n * @param props - Telemetry props to include when the error is logged\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", error?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", props?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryProperties",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/container-utils!GenericError#error:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly error?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/container-utils!GenericError#errorType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly errorType = "
                },
                {
                  "kind": "Reference",
                  "text": "ContainerErrorType.genericError",
                  "canonicalReference": "@fluidframework/container-definitions!ContainerErrorType.genericError:member"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errorType",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": [
            {
              "startIndex": 4,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/container-utils!ThrottlingWarning:class",
          "docComment": "/**\n * Warning emitted when requests to storage are being throttled.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ThrottlingWarning extends "
            },
            {
              "kind": "Reference",
              "text": "LoggingError",
              "canonicalReference": "@fluidframework/telemetry-utils!LoggingError:class"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "IThrottlingWarning",
              "canonicalReference": "@fluidframework/container-definitions!IThrottlingWarning:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IFluidErrorBase",
              "canonicalReference": "@fluidframework/telemetry-utils!IFluidErrorBase:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ThrottlingWarning",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/container-utils!ThrottlingWarning#errorType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly errorType = "
                },
                {
                  "kind": "Reference",
                  "text": "ContainerErrorType.throttlingError",
                  "canonicalReference": "@fluidframework/container-definitions!ContainerErrorType.throttlingError:member"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errorType",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/container-utils!ThrottlingWarning#retryAfterSeconds:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly retryAfterSeconds: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "retryAfterSeconds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/container-utils!ThrottlingWarning.wrap:member(1)",
              "docComment": "/**\n * Wrap the given error as a ThrottlingWarning Only preserves the error message, and applies the given retry after to the new warning object\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static wrap(error: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ", retryAfterSeconds: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", logger: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryLogger",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IThrottlingWarning",
                  "canonicalReference": "@fluidframework/container-definitions!IThrottlingWarning:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "retryAfterSeconds",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "logger",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "name": "wrap"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": [
            {
              "startIndex": 4,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/container-utils!UsageError:class",
          "docComment": "/**\n * Error indicating an API is being used improperly resulting in an invalid operation.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class UsageError extends "
            },
            {
              "kind": "Reference",
              "text": "LoggingError",
              "canonicalReference": "@fluidframework/telemetry-utils!LoggingError:class"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "IFluidErrorBase",
              "canonicalReference": "@fluidframework/telemetry-utils!IFluidErrorBase:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "UsageError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluidframework/container-utils!UsageError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `UsageError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/container-utils!UsageError#errorType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly errorType = \"usageError\";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errorType",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": [
            {
              "startIndex": 4,
              "endIndex": 5
            }
          ]
        }
      ]
    }
  ]
}

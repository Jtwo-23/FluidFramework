{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.22.2",
    "schemaVersion": 1005,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@fluidframework/synthesize!",
  "docComment": "",
  "name": "@fluidframework/synthesize",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@fluidframework/synthesize!",
      "name": "",
      "members": [
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluidframework/synthesize!AsyncFluidObjectProvider:type",
          "docComment": "/**\n * Combined type for Optional and Required Async Fluid object Providers\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AsyncFluidObjectProvider<O, R = "
            },
            {
              "kind": "Content",
              "text": "undefined"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "AsyncOptionalFluidObjectProvider",
              "canonicalReference": "@fluidframework/synthesize!AsyncOptionalFluidObjectProvider:type"
            },
            {
              "kind": "Content",
              "text": "<O> & "
            },
            {
              "kind": "Reference",
              "text": "AsyncRequiredFluidObjectProvider",
              "canonicalReference": "@fluidframework/synthesize!AsyncRequiredFluidObjectProvider:type"
            },
            {
              "kind": "Content",
              "text": "<R>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AsyncFluidObjectProvider",
          "typeParameters": [
            {
              "typeParameterName": "O",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluidframework/synthesize!AsyncOptionalFluidObjectProvider:type",
          "docComment": "/**\n * This is a condensed version of Record that requires the object has all the FluidObject properties as its type, mapped to an object that implements the property or undefined.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AsyncOptionalFluidObjectProvider<T> = "
            },
            {
              "kind": "Content",
              "text": "T extends undefined ? "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, never> : {\n    [P in keyof T]?: "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<T[P] | undefined>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AsyncOptionalFluidObjectProvider",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluidframework/synthesize!AsyncRequiredFluidObjectProvider:type",
          "docComment": "/**\n * This is a condensed version of Record that requires the object has all the FluidObject properties as its type mapped to an object that implements the property.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AsyncRequiredFluidObjectProvider<T> = "
            },
            {
              "kind": "Content",
              "text": "T extends undefined ? "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, never> : {\n    [P in keyof T]: "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<T[P], undefined | null>>>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AsyncRequiredFluidObjectProvider",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/synthesize!DependencyContainer:class",
          "docComment": "/**\n * DependencyContainer is similar to a IoC Container. It takes providers and will synthesize an object based on them when requested.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DependencyContainer<TMap> implements "
            },
            {
              "kind": "Reference",
              "text": "IFluidDependencySynthesizer",
              "canonicalReference": "@fluidframework/synthesize!IFluidDependencySynthesizer:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TMap",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "DependencyContainer",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluidframework/synthesize!DependencyContainer:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `DependencyContainer` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(...parents: "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDependencySynthesizer",
                  "canonicalReference": "@fluidframework/synthesize!IFluidDependencySynthesizer:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined)[]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "parents",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/synthesize!DependencyContainer#has:member(1)",
              "docComment": "/**\n * Check if a given type is registered\n *\n * @param type - Type to check\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "has(type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", excludeParents?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "excludeParents",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "has"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/synthesize!DependencyContainer#IFluidDependencySynthesizer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get IFluidDependencySynthesizer(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "IFluidDependencySynthesizer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/synthesize!DependencyContainer#register:member(1)",
              "docComment": "/**\n * Add a new provider\n *\n * @param type - Name of the Type T being provided\n *\n * @param provider - A provider that will resolve the T correctly when asked\n *\n * @throws\n *\n * - If passing a type that's already registered\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "register<T extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof TMap "
                },
                {
                  "kind": "Content",
                  "text": "= "
                },
                {
                  "kind": "Content",
                  "text": "keyof TMap"
                },
                {
                  "kind": "Content",
                  "text": ">(type: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ", provider: "
                },
                {
                  "kind": "Reference",
                  "text": "FluidObjectProvider",
                  "canonicalReference": "@fluidframework/synthesize!FluidObjectProvider:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<TMap, T>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "provider",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 1
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "register"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/synthesize!DependencyContainer#synthesize:member(1)",
              "docComment": "/**\n * synthesize takes optional and required types and returns an object that will fulfill the defined types based off objects that has been previously registered.\n *\n * @param optionalTypes - optional types to be in the Scope object\n *\n * @param requiredTypes - required types that need to be in the Scope object\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "synthesize<O, R = "
                },
                {
                  "kind": "Content",
                  "text": "undefined | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, never>"
                },
                {
                  "kind": "Content",
                  "text": ">(optionalTypes: "
                },
                {
                  "kind": "Reference",
                  "text": "FluidObjectSymbolProvider",
                  "canonicalReference": "@fluidframework/synthesize!FluidObjectSymbolProvider:type"
                },
                {
                  "kind": "Content",
                  "text": "<O>"
                },
                {
                  "kind": "Content",
                  "text": ", requiredTypes: "
                },
                {
                  "kind": "Reference",
                  "text": "Required",
                  "canonicalReference": "!Required:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FluidObjectSymbolProvider",
                  "canonicalReference": "@fluidframework/synthesize!FluidObjectSymbolProvider:type"
                },
                {
                  "kind": "Content",
                  "text": "<R>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AsyncFluidObjectProvider",
                  "canonicalReference": "@fluidframework/synthesize!AsyncFluidObjectProvider:type"
                },
                {
                  "kind": "Content",
                  "text": "<O, R>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "optionalTypes",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "requiredTypes",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 12
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "O",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "R",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                }
              ],
              "name": "synthesize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/synthesize!DependencyContainer#unregister:member(1)",
              "docComment": "/**\n * Remove a provider\n *\n * @param type - Name of the provider to remove\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unregister(type: "
                },
                {
                  "kind": "Content",
                  "text": "keyof TMap"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "unregister"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluidframework/synthesize!FluidObjectProvider:type",
          "docComment": "/**\n * Multiple ways to provide a Fluid object.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type FluidObjectProvider<T> = "
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<T> | "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<T>> | ((dependencyContainer: "
            },
            {
              "kind": "Reference",
              "text": "IFluidDependencySynthesizer",
              "canonicalReference": "@fluidframework/synthesize!IFluidDependencySynthesizer:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<T>) | ((dependencyContainer: "
            },
            {
              "kind": "Reference",
              "text": "IFluidDependencySynthesizer",
              "canonicalReference": "@fluidframework/synthesize!IFluidDependencySynthesizer:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<T>>)"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "FluidObjectProvider",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 17
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluidframework/synthesize!FluidObjectSymbolProvider:type",
          "docComment": "/**\n * This is a condensed version of Record that requires the object has all the FluidObject properties as its type mapped to a string representation of that property.\n *\n * @example\n *\n * - \\{ IFoo: \"IFoo\" \\}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type FluidObjectSymbolProvider<T> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [P in keyof T]?: P;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "FluidObjectSymbolProvider",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/synthesize!IFluidDependencySynthesizer:interface",
          "docComment": "/**\n * IFluidDependencySynthesizer can generate IFluidObjects based on the IProvideFluidObject pattern. It allow for registering providers and uses synthesize to generate a new object with the optional and required types.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IFluidDependencySynthesizer extends "
            },
            {
              "kind": "Reference",
              "text": "IProvideFluidDependencySynthesizer",
              "canonicalReference": "@fluidframework/synthesize!IProvideFluidDependencySynthesizer:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IFluidDependencySynthesizer",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/synthesize!IFluidDependencySynthesizer#has:member(1)",
              "docComment": "/**\n * Check if a given type is registered\n *\n * @param type - Type to check\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "has(type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "has"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/synthesize!IFluidDependencySynthesizer#synthesize:member(1)",
              "docComment": "/**\n * synthesize takes optional and required types and returns an object that will fulfill the defined types based off objects that has been previously registered.\n *\n * @param optionalTypes - optional types to be in the Scope object\n *\n * @param requiredTypes - required types that need to be in the Scope object\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "synthesize<O, R = "
                },
                {
                  "kind": "Content",
                  "text": "undefined | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, never>"
                },
                {
                  "kind": "Content",
                  "text": ">(optionalTypes: "
                },
                {
                  "kind": "Reference",
                  "text": "FluidObjectSymbolProvider",
                  "canonicalReference": "@fluidframework/synthesize!FluidObjectSymbolProvider:type"
                },
                {
                  "kind": "Content",
                  "text": "<O>"
                },
                {
                  "kind": "Content",
                  "text": ", requiredTypes: "
                },
                {
                  "kind": "Reference",
                  "text": "Required",
                  "canonicalReference": "!Required:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FluidObjectSymbolProvider",
                  "canonicalReference": "@fluidframework/synthesize!FluidObjectSymbolProvider:type"
                },
                {
                  "kind": "Content",
                  "text": "<R>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AsyncFluidObjectProvider",
                  "canonicalReference": "@fluidframework/synthesize!AsyncFluidObjectProvider:type"
                },
                {
                  "kind": "Content",
                  "text": "<O, R>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "optionalTypes",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "requiredTypes",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 12
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "O",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "R",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                }
              ],
              "name": "synthesize"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluidframework/synthesize!IFluidDependencySynthesizer:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "IFluidDependencySynthesizer: "
            },
            {
              "kind": "Content",
              "text": "keyof "
            },
            {
              "kind": "Reference",
              "text": "IProvideFluidDependencySynthesizer",
              "canonicalReference": "@fluidframework/synthesize!IProvideFluidDependencySynthesizer:interface"
            }
          ],
          "releaseTag": "Public",
          "name": "IFluidDependencySynthesizer",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/synthesize!IProvideFluidDependencySynthesizer:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IProvideFluidDependencySynthesizer "
            }
          ],
          "releaseTag": "Public",
          "name": "IProvideFluidDependencySynthesizer",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/synthesize!IProvideFluidDependencySynthesizer#IFluidDependencySynthesizer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "IFluidDependencySynthesizer: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDependencySynthesizer",
                  "canonicalReference": "@fluidframework/synthesize!IFluidDependencySynthesizer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "IFluidDependencySynthesizer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        }
      ]
    }
  ]
}

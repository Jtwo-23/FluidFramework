# Copyright (c) Microsoft Corporation and contributors. All rights reserved.
# Licensed under the MIT License.

# server-gitrest pipeline

name: $(Build.BuildId)

parameters:
- name: releaseBuildOverride
  displayName: Release Build (default = not released)
  type: string
  default: none
  values:
    - none
    - release

- name: releaseKind
  displayName: Release Kind
  type: string
  default: both
  values:
    - both
    - npm
    - docker

- name: publishOverride
  displayName: Publish Override (default = based on branch)
  type: string
  default: default
  values:
    - default
    - skip
    - force
- name: buildToolsVersionToInstall
  displayName: Fluid build tools version (default = installs version in repo)
  type: string
  default: repo

trigger:
  branches:
    include:
    - main
    - next
    - lts
  paths:
    include:
    - .prettierignore
    - fluidBuild.config.cjs
    - server/gitrest
    - tools/pipelines/server-gitrest.yml
    - tools/pipelines/templates/1ES/build-docker-service.yml
    - tools/pipelines/templates/1ES/include-set-package-version.yml
    - tools/pipelines/templates/1ES/include-vars.yml
    - tools/pipelines/templates/1ES/include-install-pnpm.yml
    - tools/pipelines/templates/1ES/include-generate-notice-steps.yml
    - tools/pipelines/templates/1ES/include-publish-npm-package.yml
    - tools/pipelines/templates/1ES/include-publish-npm-package-deployment.yml
    - tools/pipelines/templates/1ES/include-publish-npm-package-steps.yml
    - tools/pipelines/templates/1ES/include-publish-docker-service.yml
    - tools/pipelines/templates/1ES/include-publish-docker-service-steps.yml
    - tools/pipelines/templates/1ES/include-git-tag-steps.yml
    - tools/pipelines/templates/1ES/include-use-node-version.yml

pr:
  branches:
    include:
    - main
    - next
    - lts
    - release/*
  paths:
    include:
    - .prettierignore
    - fluidBuild.config.cjs
    - server/gitrest
    - tools/pipelines/server-gitrest.yml
    - tools/pipelines/templates/1ES/build-docker-service.yml
    - tools/pipelines/templates/1ES/include-set-package-version.yml
    - tools/pipelines/templates/1ES/include-vars.yml
    - tools/pipelines/templates/1ES/include-install-pnpm.yml
    - tools/pipelines/templates/1ES/include-use-node-version.yml

# Some variables feed into functionality in the templates which uses template-expression syntax ( '${{ }}' ) and thus gets
# processed at parse/compile time. For that to work, those values must be passed to the templates as parameters, and the
# only way to do that is to define some variables at the pipeline level because that's the only way we can make them
# available at compile time so we can pass them as parameters.
variables:
- template: /tools/pipelines/templates/1ES/include-vars.yml@self
  parameters:
    releaseImage: true
    publishOverride: ${{ parameters.publishOverride }}
    releaseBuildOverride: ${{ parameters.releaseBuildOverride }}
    buildNumberInPatch: true
- group: container-registry-info

extends:
  template: /tools/pipelines/templates/1ES/build-docker-service.yml@self
  parameters:
    testBuild: ${{ variables.testBuild }}
    pushImage: ${{ variables.pushImage }}
    releaseKind: ${{ parameters.releaseKind }}
    containerRegistryServiceConnectionName: $(containerRegistryConnection)
    buildToolsVersionToInstall: ${{ parameters.buildToolsVersionToInstall }}
    packageManagerInstallCommand: 'pnpm config set recursive-install false ; pnpm i --frozen-lockfile ; pnpm config set recursive-install true'
    packageManager: pnpm
    buildDirectory: server/gitrest
    containerName: fluidframework/routerlicious/gitrest
    test: test
    tagName: gitrest
    lint: true
    pack: true
    checks:
    - prettier

{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.22.2",
    "schemaVersion": 1005,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@fluidframework/dds-interceptions!",
  "docComment": "",
  "name": "@fluidframework/dds-interceptions",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@fluidframework/dds-interceptions!",
      "name": "",
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@fluidframework/dds-interceptions!createDirectoryWithInterception:function(1)",
          "docComment": "/**\n * - Create a new object from the passed IDirectory object. - Modify the set method to call the setInterceptionCallback before calling set on the underlying object. - The setInterceptionCallback and the call to the underlying object are wrapped around an orderSequentially call to batch any operations that might happen in the callback. - Modify the sub directory methods to create / return a wrapper object that in turn intercepts the set method and calls the setInterceptionCallback. - When a sub directory is created from this directory, this directory object is passed to it which is passed into the interception callback.\n *\n * @param baseDirectory - The underlying object that is to be intercepted\n *\n * @param context - The IFluidDataStoreContext that will be used to call orderSequentially\n *\n * @param setInterceptionCallback - The interception callback to be called\n *\n * @returns A new IDirectory object that intercepts the set method and calls the setInterceptionCallback.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createDirectoryWithInterception<T extends "
            },
            {
              "kind": "Reference",
              "text": "IDirectory",
              "canonicalReference": "@fluidframework/map!IDirectory:interface"
            },
            {
              "kind": "Content",
              "text": ">(baseDirectory: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ", context: "
            },
            {
              "kind": "Reference",
              "text": "IFluidDataStoreContext",
              "canonicalReference": "@fluidframework/runtime-definitions!IFluidDataStoreContext:interface"
            },
            {
              "kind": "Content",
              "text": ", setInterceptionCallback: "
            },
            {
              "kind": "Content",
              "text": "(baseDirectory: "
            },
            {
              "kind": "Reference",
              "text": "IDirectory",
              "canonicalReference": "@fluidframework/map!IDirectory:interface"
            },
            {
              "kind": "Content",
              "text": ", subDirectory: "
            },
            {
              "kind": "Reference",
              "text": "IDirectory",
              "canonicalReference": "@fluidframework/map!IDirectory:interface"
            },
            {
              "kind": "Content",
              "text": ", key: string, value: any) => void"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 13,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "baseDirectory",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "context",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "setInterceptionCallback",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 12
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "createDirectoryWithInterception"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluidframework/dds-interceptions!createSharedMapWithInterception:function(1)",
          "docComment": "/**\n * - Create a new object from the passed SharedMap. - Modify the set method to call the setInterceptionCallback before calling set on the underlying SharedMap. - The setInterceptionCallback and the call to the underlying SharedMap are wrapped around an orderSequentially call to batch any operations that might happen in the callback.\n *\n * @param sharedMap - The underlying SharedMap\n *\n * @param context - The IFluidDataStoreContext that will be used to call orderSequentially\n *\n * @param setInterceptionCallback - The interception callback to be called\n *\n * @returns A new SharedMap that intercepts the set method and calls the setInterceptionCallback.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createSharedMapWithInterception(sharedMap: "
            },
            {
              "kind": "Reference",
              "text": "SharedMap",
              "canonicalReference": "@fluidframework/map!SharedMap:class"
            },
            {
              "kind": "Content",
              "text": ", context: "
            },
            {
              "kind": "Reference",
              "text": "IFluidDataStoreContext",
              "canonicalReference": "@fluidframework/runtime-definitions!IFluidDataStoreContext:interface"
            },
            {
              "kind": "Content",
              "text": ", setInterceptionCallback: "
            },
            {
              "kind": "Content",
              "text": "(sharedMap: "
            },
            {
              "kind": "Reference",
              "text": "ISharedMap",
              "canonicalReference": "@fluidframework/map!ISharedMap:interface"
            },
            {
              "kind": "Content",
              "text": ", key: string, value: any) => void"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "SharedMap",
              "canonicalReference": "@fluidframework/map!SharedMap:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "sharedMap",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "context",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "setInterceptionCallback",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 8
              },
              "isOptional": false
            }
          ],
          "name": "createSharedMapWithInterception"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluidframework/dds-interceptions!createSharedStringWithInterception:function(1)",
          "docComment": "/**\n * - Create a new object from the passed SharedString. - Modify the methods that insert / remove / annotate the properties of the SharedString to call the propertyInterceptionCallback to get new properties. - Use these new properties to call the underlying SharedString. - The propertyInterceptionCallback and the call to the underlying SharedString are wrapped around an orderSequentially call to batch any operations that might happen in the callback.\n *\n * @param sharedString - The underlying SharedString\n *\n * @param context - The IFluidDataStoreContext that will be used to call orderSequentially\n *\n * @param propertyInterceptionCallback - The interception callback to be called\n *\n * @returns A new SharedString that intercepts the methods modifying the SharedString properties.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createSharedStringWithInterception(sharedString: "
            },
            {
              "kind": "Reference",
              "text": "SharedString",
              "canonicalReference": "@fluidframework/sequence!SharedString:class"
            },
            {
              "kind": "Content",
              "text": ", context: "
            },
            {
              "kind": "Reference",
              "text": "IFluidDataStoreContext",
              "canonicalReference": "@fluidframework/runtime-definitions!IFluidDataStoreContext:interface"
            },
            {
              "kind": "Content",
              "text": ", propertyInterceptionCallback: "
            },
            {
              "kind": "Content",
              "text": "(props?: MergeTree."
            },
            {
              "kind": "Reference",
              "text": "PropertySet",
              "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
            },
            {
              "kind": "Content",
              "text": ") => MergeTree."
            },
            {
              "kind": "Reference",
              "text": "PropertySet",
              "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "SharedString",
              "canonicalReference": "@fluidframework/sequence!SharedString:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "sharedString",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "context",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "propertyInterceptionCallback",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "isOptional": false
            }
          ],
          "name": "createSharedStringWithInterception"
        }
      ]
    }
  ]
}

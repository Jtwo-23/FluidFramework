{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.22.2",
    "schemaVersion": 1005,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@fluidframework/telemetry-utils!",
  "docComment": "",
  "name": "@fluidframework/telemetry-utils",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@fluidframework/telemetry-utils!",
      "name": "",
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/telemetry-utils!ChildLogger:class",
          "docComment": "/**\n * ChildLogger class contains various helper telemetry methods, encoding in one place schemas for various types of Fluid telemetry events. Creates sub-logger that appends properties to all events\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ChildLogger extends "
            },
            {
              "kind": "Reference",
              "text": "TelemetryLogger",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryLogger:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ChildLogger",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/telemetry-utils!ChildLogger#baseLogger:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly baseLogger: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryBaseLogger",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "baseLogger",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!ChildLogger.create:member(1)",
              "docComment": "/**\n * Create child logger\n *\n * @param baseLogger - Base logger to use to output events. If undefined, proper child logger is created, but it does not sends telemetry events anywhere.\n *\n * @param namespace - Telemetry event name prefix to add to all events\n *\n * @param properties - Base properties to add to all events\n *\n * @param propertyGetters - Getters to add additional properties to all events\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static create(baseLogger?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryBaseLogger",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ", namespace?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", properties?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryLoggerPropertyBags",
                  "canonicalReference": "@fluidframework/telemetry-utils!ITelemetryLoggerPropertyBags:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TelemetryLogger",
                  "canonicalReference": "@fluidframework/telemetry-utils!TelemetryLogger:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "baseLogger",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "namespace",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "properties",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!ChildLogger#send:member(1)",
              "docComment": "/**\n * Send an event with the logger\n *\n * @param event - the event to send\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "send(event: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryBaseEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "send"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluidframework/telemetry-utils!ConfigTypes:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ConfigTypes = "
            },
            {
              "kind": "Content",
              "text": "string | number | boolean | number[] | string[] | boolean[] | undefined"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ConfigTypes",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluidframework/telemetry-utils!connectedEventName:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "connectedEventName = \"connected\""
            }
          ],
          "releaseTag": "Public",
          "name": "connectedEventName",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/telemetry-utils!DebugLogger:class",
          "docComment": "/**\n * Implementation of debug logger\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DebugLogger extends "
            },
            {
              "kind": "Reference",
              "text": "TelemetryLogger",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryLogger:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DebugLogger",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluidframework/telemetry-utils!DebugLogger:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `DebugLogger` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(debug: "
                },
                {
                  "kind": "Reference",
                  "text": "IDebugger",
                  "canonicalReference": "@types/debug!~debug.IDebugger:type"
                },
                {
                  "kind": "Content",
                  "text": ", debugErr: "
                },
                {
                  "kind": "Reference",
                  "text": "IDebugger",
                  "canonicalReference": "@types/debug!~debug.IDebugger:type"
                },
                {
                  "kind": "Content",
                  "text": ", properties?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryLoggerPropertyBags",
                  "canonicalReference": "@fluidframework/telemetry-utils!ITelemetryLoggerPropertyBags:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "debug",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "debugErr",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "properties",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!DebugLogger.create:member(1)",
              "docComment": "/**\n * Create debug logger - all events are output to debug npm library\n *\n * @param namespace - Telemetry event name prefix to add to all events\n *\n * @param properties - Base properties to add to all events\n *\n * @param propertyGetters - Getters to add additional properties to all events\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static create(namespace: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", properties?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryLoggerPropertyBags",
                  "canonicalReference": "@fluidframework/telemetry-utils!ITelemetryLoggerPropertyBags:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TelemetryLogger",
                  "canonicalReference": "@fluidframework/telemetry-utils!TelemetryLogger:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "namespace",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "properties",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!DebugLogger.mixinDebugLogger:member(1)",
              "docComment": "/**\n * Mix in debug logger with another logger. Returned logger will output events to both newly created debug logger, as well as base logger\n *\n * @param namespace - Telemetry event name prefix to add to all events\n *\n * @param properties - Base properties to add to all events\n *\n * @param propertyGetters - Getters to add additional properties to all events\n *\n * @param baseLogger - Base logger to output events (in addition to debug logger being created). Can be undefined.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static mixinDebugLogger(namespace: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", baseLogger?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryBaseLogger",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ", properties?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryLoggerPropertyBags",
                  "canonicalReference": "@fluidframework/telemetry-utils!ITelemetryLoggerPropertyBags:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TelemetryLogger",
                  "canonicalReference": "@fluidframework/telemetry-utils!TelemetryLogger:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "namespace",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "baseLogger",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "properties",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "name": "mixinDebugLogger"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!DebugLogger#send:member(1)",
              "docComment": "/**\n * Send an event to debug loggers\n *\n * @param event - the event to send\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "send(event: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryBaseEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "send"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluidframework/telemetry-utils!disconnectedEventName:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "disconnectedEventName = \"disconnected\""
            }
          ],
          "releaseTag": "Public",
          "name": "disconnectedEventName",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/telemetry-utils!EventEmitterWithErrorHandling:class",
          "docComment": "/**\n * Event Emitter helper class Any exceptions thrown by listeners will be caught and raised through \"error\" event. Any exception thrown by \"error\" listeners will propagate to the caller.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class EventEmitterWithErrorHandling<TEvent extends "
            },
            {
              "kind": "Reference",
              "text": "IEvent",
              "canonicalReference": "@fluidframework/common-definitions!IEvent:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "IEvent",
              "canonicalReference": "@fluidframework/common-definitions!IEvent:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "TypedEventEmitter",
              "canonicalReference": "@fluidframework/common-utils!TypedEventEmitter:class"
            },
            {
              "kind": "Content",
              "text": "<TEvent> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TEvent",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "EventEmitterWithErrorHandling",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluidframework/telemetry-utils!EventEmitterWithErrorHandling:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `EventEmitterWithErrorHandling` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(errorHandler: "
                },
                {
                  "kind": "Content",
                  "text": "(eventName: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitterEventType",
                  "canonicalReference": "@fluidframework/common-utils!EventEmitterEventType:type"
                },
                {
                  "kind": "Content",
                  "text": ", error: any) => void"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "errorHandler",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!EventEmitterWithErrorHandling#emit:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "emit(event: "
                },
                {
                  "kind": "Reference",
                  "text": "EventEmitterEventType",
                  "canonicalReference": "@fluidframework/common-utils!EventEmitterEventType:type"
                },
                {
                  "kind": "Content",
                  "text": ", ...args: "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "emit"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluidframework/telemetry-utils!extractLogSafeErrorProperties:function(1)",
          "docComment": "/**\n * Inspect the given error for common \"safe\" props and return them\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function extractLogSafeErrorProperties(error: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", sanitizeStack: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    message: string;\n    errorType?: string | undefined;\n    stack?: string | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "error",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "sanitizeStack",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "extractLogSafeErrorProperties"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluidframework/telemetry-utils!generateErrorWithStack:function(1)",
          "docComment": "/**\n * The purpose of this function is to provide ability to capture stack context quickly. Accessing new Error().stack is slow, and the slowest part is accessing stack property itself. There are scenarios where we generate error with stack, but error is handled in most cases and stack property is not accessed. For such cases it's better to not read stack property right away, but rather delay it until / if it's needed Some browsers will populate stack right away, others require throwing Error, so we do auto-detection on the fly.\n *\n * @returns Error object that has stack populated.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function generateErrorWithStack(): "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "generateErrorWithStack"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluidframework/telemetry-utils!generateStack:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function generateStack(): "
            },
            {
              "kind": "Content",
              "text": "string | undefined"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "generateStack"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluidframework/telemetry-utils!getCircularReplacer:var",
          "docComment": "/**\n * Borrowed from {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Cyclic_object_value#examples} Avoids runtime errors with circular references. Not ideal, as will cut values that are not necessarily circular references. Could be improved by implementing Node's util.inspect() for browser (minus all the coloring code)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getCircularReplacer: "
            },
            {
              "kind": "Content",
              "text": "() => (key: string, value: any) => any"
            }
          ],
          "releaseTag": "Public",
          "name": "getCircularReplacer",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluidframework/telemetry-utils!hasErrorInstanceId:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "hasErrorInstanceId: "
            },
            {
              "kind": "Content",
              "text": "(x: any) => "
            },
            {
              "kind": "Reference",
              "text": "x",
              "canonicalReference": "@fluidframework/telemetry-utils!~x"
            },
            {
              "kind": "Content",
              "text": " is {\n    errorInstanceId: string;\n}"
            }
          ],
          "releaseTag": "Public",
          "name": "hasErrorInstanceId",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/telemetry-utils!IConfigProvider:interface",
          "docComment": "/**\n * Explicitly typed interface for reading configurations\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IConfigProvider extends "
            },
            {
              "kind": "Reference",
              "text": "IConfigProviderBase",
              "canonicalReference": "@fluidframework/telemetry-utils!IConfigProviderBase:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IConfigProvider",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/telemetry-utils!IConfigProvider#getBoolean:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getBoolean(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "getBoolean"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/telemetry-utils!IConfigProvider#getBooleanArray:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getBooleanArray(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "getBooleanArray"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/telemetry-utils!IConfigProvider#getNumber:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNumber(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "getNumber"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/telemetry-utils!IConfigProvider#getNumberArray:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNumberArray(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "getNumberArray"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/telemetry-utils!IConfigProvider#getString:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getString(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "getString"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/telemetry-utils!IConfigProvider#getStringArray:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getStringArray(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "getStringArray"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/telemetry-utils!IConfigProviderBase:interface",
          "docComment": "/**\n * Base interface for providing configurations to enable/disable/control features\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IConfigProviderBase "
            }
          ],
          "releaseTag": "Public",
          "name": "IConfigProviderBase",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/telemetry-utils!IConfigProviderBase#getRawConfig:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRawConfig(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ConfigTypes",
                  "canonicalReference": "@fluidframework/telemetry-utils!ConfigTypes:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "getRawConfig"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/telemetry-utils!IFluidErrorAnnotations:interface",
          "docComment": "/**\n * Metadata to annotate an error object when annotating or normalizing it\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IFluidErrorAnnotations "
            }
          ],
          "releaseTag": "Public",
          "name": "IFluidErrorAnnotations",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/telemetry-utils!IFluidErrorAnnotations#props:member",
              "docComment": "/**\n * Telemetry props to log with the error\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "props?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryProperties",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "props",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/telemetry-utils!IFluidErrorBase:interface",
          "docComment": "/**\n * All normalized errors flowing through the Fluid Framework adhere to this readonly interface. It features errorType and errorInstanceId on top of Error's members as readonly, and a getter/setter for telemetry props to be included when the error is logged.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IFluidErrorBase extends "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IFluidErrorBase",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/telemetry-utils!IFluidErrorBase#addTelemetryProperties:member",
              "docComment": "/**\n * Add telemetry properties to this error which will be logged with the error\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addTelemetryProperties: "
                },
                {
                  "kind": "Content",
                  "text": "(props: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryProperties",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "addTelemetryProperties",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/telemetry-utils!IFluidErrorBase#errorInstanceId:member",
              "docComment": "/**\n * A Guid identifying this error instance. Useful in telemetry for deduping multiple logging events arising from the same error, or correlating an error with an inner error that caused it, in case of error wrapping.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly errorInstanceId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errorInstanceId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/telemetry-utils!IFluidErrorBase#errorType:member",
              "docComment": "/**\n * Classification of what type of error this is, used programmatically by consumers to interpret the error\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly errorType: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errorType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/telemetry-utils!IFluidErrorBase#getTelemetryProperties:member(1)",
              "docComment": "/**\n * Get the telemetry properties stashed on this error for logging\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTelemetryProperties(): "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryProperties",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getTelemetryProperties"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/telemetry-utils!IFluidErrorBase#message:member",
              "docComment": "/**\n * Error's message property, made readonly. Be specific, but also take care when including variable data to consider suitability for aggregation in telemetry Also avoid including any data that jeopardizes the user's privacy. Add a tagged telemetry property instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/telemetry-utils!IFluidErrorBase#name:member",
              "docComment": "/**\n * Error's name property, made readonly\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/telemetry-utils!IFluidErrorBase#stack:member",
              "docComment": "/**\n * Error's stack property, made readonly\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly stack?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "stack",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/telemetry-utils!IPerformanceEventMarkers:interface",
          "docComment": "/**\n * Describes what events PerformanceEvent should log By default, all events are logged, but client can override this behavior For example, there is rarely a need to record start event, as we really after success / failure tracking, including duration (on success).\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPerformanceEventMarkers "
            }
          ],
          "releaseTag": "Public",
          "name": "IPerformanceEventMarkers",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/telemetry-utils!IPerformanceEventMarkers#cancel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cancel?: "
                },
                {
                  "kind": "Content",
                  "text": "\"generic\" | \"error\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "cancel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/telemetry-utils!IPerformanceEventMarkers#end:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "end?: "
                },
                {
                  "kind": "Content",
                  "text": "true"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "end",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/telemetry-utils!IPerformanceEventMarkers#start:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start?: "
                },
                {
                  "kind": "Content",
                  "text": "true"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "start",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluidframework/telemetry-utils!isExternalError:function(1)",
          "docComment": "/**\n * True for any error object that is an (optionally normalized) external error False for any error we created and raised within the FF codebase, or wrapped in a well-known error type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isExternalError(e: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "e",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isExternalError"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluidframework/telemetry-utils!isFluidError:function(1)",
          "docComment": "/**\n * type guard for IFluidErrorBase interface\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isFluidError(e: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "e",
              "canonicalReference": "@fluidframework/telemetry-utils!~e"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "IFluidErrorBase",
              "canonicalReference": "@fluidframework/telemetry-utils!IFluidErrorBase:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "e",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isFluidError"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluidframework/telemetry-utils!isILoggingError:var",
          "docComment": "/**\n * type guard for ILoggingError interface\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isILoggingError: "
            },
            {
              "kind": "Content",
              "text": "(x: any) => "
            },
            {
              "kind": "Reference",
              "text": "x",
              "canonicalReference": "@fluidframework/telemetry-utils!~x"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "ILoggingError",
              "canonicalReference": "@fluidframework/common-definitions!ILoggingError:interface"
            }
          ],
          "releaseTag": "Public",
          "name": "isILoggingError",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluidframework/telemetry-utils!isTaggedTelemetryPropertyValue:function(1)",
          "docComment": "/**\n * Type guard to identify if a particular value (loosely) appears to be a tagged telemetry property\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isTaggedTelemetryPropertyValue(x: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "x",
              "canonicalReference": "@fluidframework/telemetry-utils!~x"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "ITaggedTelemetryPropertyType",
              "canonicalReference": "@fluidframework/common-definitions!ITaggedTelemetryPropertyType:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "x",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isTaggedTelemetryPropertyValue"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluidframework/telemetry-utils!isValidLegacyError:function(1)",
          "docComment": "/**\n * type guard for old standard of valid/known errors\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isValidLegacyError(e: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "e",
              "canonicalReference": "@fluidframework/telemetry-utils!~e"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IFluidErrorBase",
              "canonicalReference": "@fluidframework/telemetry-utils!IFluidErrorBase:interface"
            },
            {
              "kind": "Content",
              "text": ", \"errorInstanceId\">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "e",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isValidLegacyError"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/telemetry-utils!ITelemetryLoggerPropertyBag:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ITelemetryLoggerPropertyBag "
            }
          ],
          "releaseTag": "Public",
          "name": "ITelemetryLoggerPropertyBag",
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "@fluidframework/telemetry-utils!ITelemetryLoggerPropertyBag:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[index: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "TelemetryEventPropertyTypes",
                  "canonicalReference": "@fluidframework/telemetry-utils!TelemetryEventPropertyTypes:type"
                },
                {
                  "kind": "Content",
                  "text": " | (() => "
                },
                {
                  "kind": "Reference",
                  "text": "TelemetryEventPropertyTypes",
                  "canonicalReference": "@fluidframework/telemetry-utils!TelemetryEventPropertyTypes:type"
                },
                {
                  "kind": "Content",
                  "text": ")"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/telemetry-utils!ITelemetryLoggerPropertyBags:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ITelemetryLoggerPropertyBags "
            }
          ],
          "releaseTag": "Public",
          "name": "ITelemetryLoggerPropertyBags",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/telemetry-utils!ITelemetryLoggerPropertyBags#all:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "all?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryLoggerPropertyBag",
                  "canonicalReference": "@fluidframework/telemetry-utils!ITelemetryLoggerPropertyBag:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "all",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/telemetry-utils!ITelemetryLoggerPropertyBags#error:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryLoggerPropertyBag",
                  "canonicalReference": "@fluidframework/telemetry-utils!ITelemetryLoggerPropertyBag:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluidframework/telemetry-utils!loggerToMonitoringContext:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function loggerToMonitoringContext<L extends "
            },
            {
              "kind": "Reference",
              "text": "ITelemetryBaseLogger",
              "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseLogger:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "ITelemetryLogger",
              "canonicalReference": "@fluidframework/common-definitions!ITelemetryLogger:interface"
            },
            {
              "kind": "Content",
              "text": ">(logger: "
            },
            {
              "kind": "Content",
              "text": "L"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "MonitoringContext",
              "canonicalReference": "@fluidframework/telemetry-utils!MonitoringContext:interface"
            },
            {
              "kind": "Content",
              "text": "<L>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "logger",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "L",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "loggerToMonitoringContext"
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/telemetry-utils!LoggingError:class",
          "docComment": "/**\n * Base class for \"trusted\" errors we create, whose properties can generally be logged to telemetry safely. All properties set on the object, or passed in (via the constructor or addTelemetryProperties), will be logged in accordance with their tag, if present.\n *\n * PLEASE take care to avoid setting sensitive data on this object without proper tagging!\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class LoggingError extends "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "ILoggingError",
              "canonicalReference": "@fluidframework/common-definitions!ILoggingError:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IFluidErrorBase",
              "canonicalReference": "@fluidframework/telemetry-utils!IFluidErrorBase:interface"
            },
            {
              "kind": "Content",
              "text": ", \"errorType\"> "
            }
          ],
          "releaseTag": "Public",
          "name": "LoggingError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluidframework/telemetry-utils!LoggingError:constructor(1)",
              "docComment": "/**\n * Create a new LoggingError\n *\n * @param message - Error message to use for Error base class\n *\n * @param props - telemetry props to include on the error for when it's logged\n *\n * @param omitPropsFromLogging - properties by name to omit from telemetry props\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryProperties",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ", omitPropsFromLogging?: "
                },
                {
                  "kind": "Reference",
                  "text": "Set",
                  "canonicalReference": "!Set:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "omitPropsFromLogging",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!LoggingError#addTelemetryProperties:member(1)",
              "docComment": "/**\n * Add additional properties to be logged\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addTelemetryProperties(props: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryProperties",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "addTelemetryProperties"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/telemetry-utils!LoggingError#errorInstanceId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get errorInstanceId(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errorInstanceId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!LoggingError#getTelemetryProperties:member(1)",
              "docComment": "/**\n * Get all properties fit to be logged to telemetry for this error\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTelemetryProperties(): "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryProperties",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getTelemetryProperties"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!LoggingError#overwriteErrorInstanceId:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "overwriteErrorInstanceId(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "overwriteErrorInstanceId"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": [
            {
              "startIndex": 4,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluidframework/telemetry-utils!logIfFalse:function(1)",
          "docComment": "/**\n * Like assert, but logs only if the condition is false, rather than throwing\n *\n * @param condition - The condition to attest too\n *\n * @param logger - The logger to log with\n *\n * @param event - The string or event to log\n *\n * @returns - The outcome of the condition\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function logIfFalse(condition: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", logger: "
            },
            {
              "kind": "Reference",
              "text": "ITelemetryBaseLogger",
              "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseLogger:interface"
            },
            {
              "kind": "Content",
              "text": ", event: "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "ITelemetryGenericEvent",
              "canonicalReference": "@fluidframework/common-definitions!ITelemetryGenericEvent:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "condition",
              "canonicalReference": "@fluidframework/telemetry-utils!~condition"
            },
            {
              "kind": "Content",
              "text": " is true"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "condition",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "logger",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "event",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "isOptional": false
            }
          ],
          "name": "logIfFalse"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluidframework/telemetry-utils!mixinMonitoringContext:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function mixinMonitoringContext<L extends "
            },
            {
              "kind": "Reference",
              "text": "ITelemetryBaseLogger",
              "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseLogger:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "ITelemetryLogger",
              "canonicalReference": "@fluidframework/common-definitions!ITelemetryLogger:interface"
            },
            {
              "kind": "Content",
              "text": ">(logger: "
            },
            {
              "kind": "Content",
              "text": "L"
            },
            {
              "kind": "Content",
              "text": ", ...configs: "
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "IConfigProviderBase",
              "canonicalReference": "@fluidframework/telemetry-utils!IConfigProviderBase:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined)[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "MonitoringContext",
              "canonicalReference": "@fluidframework/telemetry-utils!MonitoringContext:interface"
            },
            {
              "kind": "Content",
              "text": "<L>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 12,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "logger",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": false
            },
            {
              "parameterName": "configs",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 11
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "L",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "mixinMonitoringContext"
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/telemetry-utils!MockLogger:class",
          "docComment": "/**\n * The MockLogger records events sent to it, and then can walk back over those events searching for a set of expected events to match against the logged events.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MockLogger extends "
            },
            {
              "kind": "Reference",
              "text": "TelemetryLogger",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryLogger:class"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "ITelemetryLogger",
              "canonicalReference": "@fluidframework/common-definitions!ITelemetryLogger:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MockLogger",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluidframework/telemetry-utils!MockLogger:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MockLogger` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!MockLogger#assertMatch:member(1)",
              "docComment": "/**\n * Asserts that matchEvents is true, and prints the actual/expected output if not\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "assertMatch(expectedEvents: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryBaseEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ", \"category\">[]"
                },
                {
                  "kind": "Content",
                  "text": ", message?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "expectedEvents",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "name": "assertMatch"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!MockLogger#assertMatchAny:member(1)",
              "docComment": "/**\n * Asserts that matchAnyEvent is true, and prints the actual/expected output if not\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "assertMatchAny(expectedEvents: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryBaseEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ", \"category\">[]"
                },
                {
                  "kind": "Content",
                  "text": ", message?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "expectedEvents",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "name": "assertMatchAny"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!MockLogger#clear:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clear(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "clear"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/telemetry-utils!MockLogger#events:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "events: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryBaseEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "events",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!MockLogger#matchAnyEvent:member(1)",
              "docComment": "/**\n * Search events logged since the last time matchEvents was called, looking for any of the given expected events.\n *\n * @param expectedEvents - events that are expected to appear in the recorded log. These event objects may be subsets of the logged events. Note: category is ommitted from the type because it's usually uninteresting and tedious to type.\n *\n * @returns if any of the expected events is found.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "matchAnyEvent(expectedEvents: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryBaseEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ", \"category\">[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "expectedEvents",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "name": "matchAnyEvent"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!MockLogger#matchEvents:member(1)",
              "docComment": "/**\n * Search events logged since the last time matchEvents was called, looking for the given expected events in order.\n *\n * @param expectedEvents - events in order that are expected to appear in the recorded log. These event objects may be subsets of the logged events. Note: category is ommitted from the type because it's usually uninteresting and tedious to type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "matchEvents(expectedEvents: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryBaseEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ", \"category\">[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "expectedEvents",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "name": "matchEvents"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!MockLogger#send:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "send(event: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryBaseEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "send"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": [
            {
              "startIndex": 4,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/telemetry-utils!MonitoringContext:interface",
          "docComment": "/**\n * A type containing both a telemetry logger and a configuration provider\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MonitoringContext<L extends "
            },
            {
              "kind": "Reference",
              "text": "ITelemetryBaseLogger",
              "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseLogger:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "ITelemetryLogger",
              "canonicalReference": "@fluidframework/common-definitions!ITelemetryLogger:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "L",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "MonitoringContext",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/telemetry-utils!MonitoringContext#config:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "config: "
                },
                {
                  "kind": "Reference",
                  "text": "IConfigProvider",
                  "canonicalReference": "@fluidframework/telemetry-utils!IConfigProvider:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "config",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluidframework/telemetry-utils!MonitoringContext#logger:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logger: "
                },
                {
                  "kind": "Content",
                  "text": "L"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "logger",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/telemetry-utils!MultiSinkLogger:class",
          "docComment": "/**\n * Multi-sink logger Takes multiple ITelemetryBaseLogger objects (sinks) and logs all events into each sink Implements ITelemetryBaseLogger (through static create() method)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MultiSinkLogger extends "
            },
            {
              "kind": "Reference",
              "text": "TelemetryLogger",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryLogger:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MultiSinkLogger",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluidframework/telemetry-utils!MultiSinkLogger:constructor(1)",
              "docComment": "/**\n * Create multiple sink logger (i.e. logger that sends events to multiple sinks)\n *\n * @param namespace - Telemetry event name prefix to add to all events\n *\n * @param properties - Base properties to add to all events\n *\n * @param propertyGetters - Getters to add additional properties to all events\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(namespace?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", properties?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryLoggerPropertyBags",
                  "canonicalReference": "@fluidframework/telemetry-utils!ITelemetryLoggerPropertyBags:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "namespace",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "properties",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!MultiSinkLogger#addLogger:member(1)",
              "docComment": "/**\n * Add logger to send all events to\n *\n * @param logger - Logger to add\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addLogger(logger?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryBaseLogger",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "logger",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "name": "addLogger"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/telemetry-utils!MultiSinkLogger#loggers:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected loggers: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryBaseLogger",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "loggers",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!MultiSinkLogger#send:member(1)",
              "docComment": "/**\n * Send an event to the loggers\n *\n * @param event - the event to send to all the registered logger\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "send(event: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryBaseEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "send"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluidframework/telemetry-utils!normalizeError:function(1)",
          "docComment": "/**\n * Normalize the given error yielding a valid Fluid Error\n *\n * @param error - The error to normalize\n *\n * @param annotations - Annotations to apply to the normalized error\n *\n * @returns A valid Fluid Error with any provided annotations applied\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function normalizeError(error: "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": ", annotations?: "
            },
            {
              "kind": "Reference",
              "text": "IFluidErrorAnnotations",
              "canonicalReference": "@fluidframework/telemetry-utils!IFluidErrorAnnotations:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IFluidErrorBase",
              "canonicalReference": "@fluidframework/telemetry-utils!IFluidErrorBase:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "error",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "annotations",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "normalizeError"
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/telemetry-utils!PerformanceEvent:class",
          "docComment": "/**\n * Helper class to log performance events\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PerformanceEvent "
            }
          ],
          "releaseTag": "Public",
          "name": "PerformanceEvent",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluidframework/telemetry-utils!PerformanceEvent:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `PerformanceEvent` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected constructor(logger: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryLogger",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ", event: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryGenericEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryGenericEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ", markers?: "
                },
                {
                  "kind": "Reference",
                  "text": "IPerformanceEventMarkers",
                  "canonicalReference": "@fluidframework/telemetry-utils!IPerformanceEventMarkers:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "logger",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "markers",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!PerformanceEvent#cancel:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cancel(props?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryProperties",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ", error?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "cancel"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/telemetry-utils!PerformanceEvent#duration:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get duration(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "duration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!PerformanceEvent#end:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "end(props?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryProperties",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "name": "end"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!PerformanceEvent#reportEvent:member(1)",
              "docComment": "/**\n * Report the event, if it hasn't already been reported.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reportEvent(eventNameSuffix: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryProperties",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ", error?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "eventNameSuffix",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "name": "reportEvent"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!PerformanceEvent#reportProgress:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reportProgress(props?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryProperties",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ", eventNameSuffix?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "eventNameSuffix",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "reportProgress"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!PerformanceEvent.start:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static start(logger: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryLogger",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ", event: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryGenericEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryGenericEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ", markers?: "
                },
                {
                  "kind": "Reference",
                  "text": "IPerformanceEventMarkers",
                  "canonicalReference": "@fluidframework/telemetry-utils!IPerformanceEventMarkers:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "PerformanceEvent",
                  "canonicalReference": "@fluidframework/telemetry-utils!PerformanceEvent:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "logger",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "markers",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "name": "start"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!PerformanceEvent.timedExec:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static timedExec<T>(logger: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryLogger",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ", event: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryGenericEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryGenericEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Reference",
                  "text": "PerformanceEvent",
                  "canonicalReference": "@fluidframework/telemetry-utils!PerformanceEvent:class"
                },
                {
                  "kind": "Content",
                  "text": ") => T"
                },
                {
                  "kind": "Content",
                  "text": ", markers?: "
                },
                {
                  "kind": "Reference",
                  "text": "IPerformanceEventMarkers",
                  "canonicalReference": "@fluidframework/telemetry-utils!IPerformanceEventMarkers:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "logger",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "markers",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "timedExec"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!PerformanceEvent.timedExecAsync:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static timedExecAsync<T>(logger: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryLogger",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ", event: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryGenericEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryGenericEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Reference",
                  "text": "PerformanceEvent",
                  "canonicalReference": "@fluidframework/telemetry-utils!PerformanceEvent:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ", markers?: "
                },
                {
                  "kind": "Reference",
                  "text": "IPerformanceEventMarkers",
                  "canonicalReference": "@fluidframework/telemetry-utils!IPerformanceEventMarkers:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "logger",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "markers",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": true
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "timedExecAsync"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluidframework/telemetry-utils!raiseConnectedEvent:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function raiseConnectedEvent(logger: "
            },
            {
              "kind": "Reference",
              "text": "ITelemetryLogger",
              "canonicalReference": "@fluidframework/common-definitions!ITelemetryLogger:interface"
            },
            {
              "kind": "Content",
              "text": ", emitter: "
            },
            {
              "kind": "Reference",
              "text": "EventEmitter",
              "canonicalReference": "@types/events!EventEmitter:class"
            },
            {
              "kind": "Content",
              "text": ", connected: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", clientId?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "logger",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "emitter",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "connected",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "clientId",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": true
            }
          ],
          "name": "raiseConnectedEvent"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluidframework/telemetry-utils!safeRaiseEvent:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function safeRaiseEvent(emitter: "
            },
            {
              "kind": "Reference",
              "text": "EventEmitter",
              "canonicalReference": "@types/events!EventEmitter:class"
            },
            {
              "kind": "Content",
              "text": ", logger: "
            },
            {
              "kind": "Reference",
              "text": "ITelemetryLogger",
              "canonicalReference": "@fluidframework/common-definitions!ITelemetryLogger:interface"
            },
            {
              "kind": "Content",
              "text": ", event: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", ...args: "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "emitter",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "logger",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "event",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "args",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": false
            }
          ],
          "name": "safeRaiseEvent"
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/telemetry-utils!SampledTelemetryHelper:class",
          "docComment": "/**\n * Helper class that executes a specified code block and writes an {@link @fluidframework/common-definitions#ITelemetryPerformanceEvent} to a specified logger every time a specified number of executions is reached (or when the class is disposed). The `duration` field in the telemetry event is the duration of the latest execution (sample) of the specified function. See the documentation of the `includeAggregateMetrics` parameter for additional details that can be included.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SampledTelemetryHelper implements "
            },
            {
              "kind": "Reference",
              "text": "IDisposable",
              "canonicalReference": "@fluidframework/common-definitions!IDisposable:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SampledTelemetryHelper",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluidframework/telemetry-utils!SampledTelemetryHelper:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `SampledTelemetryHelper` class\n *\n * @param eventBase - Custom properties to include in the telemetry performance event when it is written.\n *\n * @param logger - The logger to use to write the telemetry performance event.\n *\n * @param sampleThreshold - Telemetry performance events will be generated every time we hit this many executions of the code block.\n *\n * @param includeAggregateMetrics - If set to `true`, the telemetry performance event will include aggregated metrics (total duration, min duration, max duration) for all the executions in between generated events.\n *\n * @param perBucketProperties - Map of strings that represent different buckets (which can be specified when calling the 'measure' method), to properties which should be added to the telemetry event for that bucket. If a bucket being measured does not have an entry in this map, no additional properties will be added to its telemetry events. The following keys are reserved for use by this class: \"duration\", \"count\", \"totalDuration\", \"minDuration\", \"maxDuration\". If any of them is specified as a key in one of the ITelemetryProperties objects in this map, that key-value pair will be ignored.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(eventBase: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryGenericEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryGenericEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ", logger: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryLogger",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ", sampleThreshold: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", includeAggregateMetrics?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", perBucketProperties?: "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryProperties",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "eventBase",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "logger",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "sampleThreshold",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "includeAggregateMetrics",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "perBucketProperties",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 13
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!SampledTelemetryHelper#dispose:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dispose(error?: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": true
                }
              ],
              "name": "dispose"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/telemetry-utils!SampledTelemetryHelper#disposed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disposed: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "disposed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!SampledTelemetryHelper#measure:member(1)",
              "docComment": "/**\n * @param codeToMeasure - The code to be executed and measured.\n *\n * @param bucket - A key to track executions of the code block separately. Each different value of this parameter has a separate set of executions and metrics tracked by the class. If no such distinction needs to be made, do not provide a value.\n *\n * @returns Whatever the passed-in code block returns.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "measure<T>(codeToMeasure: "
                },
                {
                  "kind": "Content",
                  "text": "() => T"
                },
                {
                  "kind": "Content",
                  "text": ", bucket?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "codeToMeasure",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "bucket",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "measure"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluidframework/telemetry-utils!sessionStorageConfigProvider:var",
          "docComment": "/**\n * Creates a base configuration provider based on `sessionStorage`\n *\n * @returns A lazy initialized base configuration provider with `sessionStorage` as the underlying config store\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "sessionStorageConfigProvider: "
            },
            {
              "kind": "Reference",
              "text": "Lazy",
              "canonicalReference": "@fluidframework/common-utils!Lazy:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IConfigProviderBase",
              "canonicalReference": "@fluidframework/telemetry-utils!IConfigProviderBase:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "sessionStorageConfigProvider",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/telemetry-utils!TaggedLoggerAdapter:class",
          "docComment": "/**\n * @deprecated\n *\n * 0.56, remove TaggedLoggerAdapter once its usage is removed from container-runtime. Issue: #8191 TaggedLoggerAdapter class can add tag handling to your logger.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class TaggedLoggerAdapter implements "
            },
            {
              "kind": "Reference",
              "text": "ITelemetryBaseLogger",
              "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseLogger:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "TaggedLoggerAdapter",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluidframework/telemetry-utils!TaggedLoggerAdapter:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `TaggedLoggerAdapter` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(logger: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryBaseLogger",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "logger",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!TaggedLoggerAdapter#send:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "send(eventWithTagsMaybe: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryBaseEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "eventWithTagsMaybe",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "send"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@fluidframework/telemetry-utils!TelemetryDataTag:enum",
          "docComment": "/**\n * Broad classifications to be applied to individual properties as they're prepared to be logged to telemetry. Please do not modify existing entries for backwards compatibility.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum TelemetryDataTag "
            }
          ],
          "releaseTag": "Public",
          "name": "TelemetryDataTag",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryDataTag.CodeArtifact:member",
              "docComment": "/**\n * Data containing terms or IDs from code packages that may have been dynamically loaded\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CodeArtifact = "
                },
                {
                  "kind": "Content",
                  "text": "\"CodeArtifact\""
                }
              ],
              "releaseTag": "Public",
              "name": "CodeArtifact",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryDataTag.PackageData:member",
              "docComment": "/**\n * Data containing terms from code packages that may have been dynamically loaded\n *\n * @deprecated\n *\n * 1.0, will be removed in next release (see issue #6603). Use `TelemetryDataTag.CodeArtifact` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PackageData = "
                },
                {
                  "kind": "Content",
                  "text": "\"PackageData\""
                }
              ],
              "releaseTag": "Public",
              "name": "PackageData",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryDataTag.UserData:member",
              "docComment": "/**\n * Personal data of a variety of classifications that pertains to the user\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UserData = "
                },
                {
                  "kind": "Content",
                  "text": "\"UserData\""
                }
              ],
              "releaseTag": "Public",
              "name": "UserData",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluidframework/telemetry-utils!TelemetryEventPropertyTypes:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type TelemetryEventPropertyTypes = "
            },
            {
              "kind": "Reference",
              "text": "TelemetryEventPropertyType",
              "canonicalReference": "@fluidframework/common-definitions!TelemetryEventPropertyType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ITaggedTelemetryPropertyType",
              "canonicalReference": "@fluidframework/common-definitions!ITaggedTelemetryPropertyType:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "TelemetryEventPropertyTypes",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/telemetry-utils!TelemetryLogger:class",
          "docComment": "/**\n * TelemetryLogger class contains various helper telemetry methods, encoding in one place schemas for various types of Fluid telemetry events. Creates sub-logger that appends properties to all events\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class TelemetryLogger implements "
            },
            {
              "kind": "Reference",
              "text": "ITelemetryLogger",
              "canonicalReference": "@fluidframework/common-definitions!ITelemetryLogger:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "TelemetryLogger",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryLogger:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `TelemetryLogger` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(namespace?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", properties?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryLoggerPropertyBags",
                  "canonicalReference": "@fluidframework/telemetry-utils!ITelemetryLoggerPropertyBags:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "namespace",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "properties",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryLogger.eventNamespaceSeparator:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly eventNamespaceSeparator = \":\";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "eventNamespaceSeparator",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "isStatic": true
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryLogger.formatTick:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static formatTick(tick: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tick",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "formatTick"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryLogger#namespace:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly namespace?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "namespace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryLogger.numberFromString:member(1)",
              "docComment": "/**\n * Attempts to parse number from string. If fails,returns original string. Used to make telemetry data typed (and support math operations, like comparison), in places where we do expect numbers (like contentsize/duration property in http header)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static numberFromString(str: "
                },
                {
                  "kind": "Content",
                  "text": "string | null | undefined"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string | number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "str",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "numberFromString"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryLogger.prepareErrorObject:member(1)",
              "docComment": "/**\n * Take an unknown error object and add the appropriate info from it to the event. Message and stack will be copied over from the error object, along with other telemetry properties if it's an ILoggingError.\n *\n * @param event - Event being logged\n *\n * @param error - Error to extract info from\n *\n * @param fetchStack - Whether to fetch the current callstack if error.stack is undefined\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static prepareErrorObject(event: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryBaseEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ", error: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", fetchStack: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fetchStack",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "name": "prepareErrorObject"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryLogger#prepareEvent:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected prepareEvent(event: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryBaseEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryBaseEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "prepareEvent"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryLogger#properties:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly properties?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryLoggerPropertyBags",
                  "canonicalReference": "@fluidframework/telemetry-utils!ITelemetryLoggerPropertyBags:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "properties",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryLogger.sanitizePkgName:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static sanitizePkgName(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "sanitizePkgName"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryLogger#send:member(1)",
              "docComment": "/**\n * Send an event with the logger\n *\n * @param event - the event to send\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract send(event: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryBaseEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "send"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryLogger#sendErrorEvent:member(1)",
              "docComment": "/**\n * Send an error telemetry event with the logger\n *\n * @param event - the event to send\n *\n * @param error - optional error object to log\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendErrorEvent(event: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryErrorEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryErrorEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ", error?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "sendErrorEvent"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryLogger#sendPerformanceEvent:member(1)",
              "docComment": "/**\n * Send a performance telemetry event with the logger\n *\n * @param event - Event to send\n *\n * @param error - optional error object to log\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendPerformanceEvent(event: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPerformanceEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryPerformanceEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ", error?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "sendPerformanceEvent"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryLogger#sendTelemetryEvent:member(1)",
              "docComment": "/**\n * Send a telemetry event with the logger\n *\n * @param event - the event to send\n *\n * @param error - optional error object to log\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendTelemetryEvent(event: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryGenericEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryGenericEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ", error?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "sendTelemetryEvent"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryLogger#sendTelemetryEventCore:member(1)",
              "docComment": "/**\n * Send a telemetry event with the logger\n *\n * @param event - the event to send\n *\n * @param error - optional error object to log\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected sendTelemetryEventCore(event: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryGenericEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryGenericEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        category: "
                },
                {
                  "kind": "Reference",
                  "text": "TelemetryEventCategory",
                  "canonicalReference": "@fluidframework/common-definitions!TelemetryEventCategory:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ", error?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "name": "sendTelemetryEventCore"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/telemetry-utils!TelemetryUTLogger:class",
          "docComment": "/**\n * Logger that is useful for UT It can be used in places where logger instance is required, but events should be not send over.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class TelemetryUTLogger implements "
            },
            {
              "kind": "Reference",
              "text": "ITelemetryLogger",
              "canonicalReference": "@fluidframework/common-definitions!ITelemetryLogger:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "TelemetryUTLogger",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryUTLogger#debugAssert:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "debugAssert(condition: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", event?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryErrorEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryErrorEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "condition",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "debugAssert"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryUTLogger#logException:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logException(event: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryErrorEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryErrorEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ", exception: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "exception",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "logException"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryUTLogger#logGenericError:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logGenericError(eventName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", error: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "eventName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "logGenericError"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryUTLogger#send:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "send(event: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryBaseEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryBaseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "send"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryUTLogger#sendErrorEvent:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendErrorEvent(event: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryErrorEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryErrorEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ", error?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "sendErrorEvent"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryUTLogger#sendPerformanceEvent:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendPerformanceEvent(event: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPerformanceEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryPerformanceEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ", error?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "sendPerformanceEvent"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryUTLogger#sendTelemetryEvent:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendTelemetryEvent(event: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryGenericEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryGenericEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ", error?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "sendTelemetryEvent"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!TelemetryUTLogger#shipAssert:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shipAssert(condition: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", event?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryErrorEvent",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryErrorEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "condition",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "shipAssert"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/telemetry-utils!ThresholdCounter:class",
          "docComment": "/**\n * Utility counter which will send event only if the provided value is above a configured threshold\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ThresholdCounter "
            }
          ],
          "releaseTag": "Public",
          "name": "ThresholdCounter",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluidframework/telemetry-utils!ThresholdCounter:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ThresholdCounter` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(threshold: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", logger: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryLogger",
                  "canonicalReference": "@fluidframework/common-definitions!ITelemetryLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ", thresholdMultiple?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "threshold",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "logger",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "thresholdMultiple",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!ThresholdCounter#send:member(1)",
              "docComment": "/**\n * Sends the value if it's above the treshold.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "send(eventName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "eventName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "send"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/telemetry-utils!ThresholdCounter#sendIfMultiple:member(1)",
              "docComment": "/**\n * Sends the value if it's above the treshold and a multiple of the threshold.\n *\n * To be used in scenarios where we'd like to record a threshold violation while reducing telemetry noise.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendIfMultiple(eventName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "eventName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "sendIfMultiple"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluidframework/telemetry-utils!wrapError:function(1)",
          "docComment": "/**\n * Create a new error using newErrorFn, wrapping and caused by the given unknown error. Copies the inner error's stack, errorInstanceId and telemetry props over to the new error if present\n *\n * @param innerError - An error from untrusted/unknown origins\n *\n * @param newErrorFn - callback that will create a new error given the original error's message\n *\n * @returns A new error object \"wrapping\" the given error\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function wrapError<T extends "
            },
            {
              "kind": "Reference",
              "text": "LoggingError",
              "canonicalReference": "@fluidframework/telemetry-utils!LoggingError:class"
            },
            {
              "kind": "Content",
              "text": ">(innerError: "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": ", newErrorFn: "
            },
            {
              "kind": "Content",
              "text": "(message: string) => T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "innerError",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "newErrorFn",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "wrapError"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluidframework/telemetry-utils!wrapErrorAndLog:function(1)",
          "docComment": "/**\n * The same as wrapError, but also logs the innerError, including the wrapping error's instance id\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function wrapErrorAndLog<T extends "
            },
            {
              "kind": "Reference",
              "text": "LoggingError",
              "canonicalReference": "@fluidframework/telemetry-utils!LoggingError:class"
            },
            {
              "kind": "Content",
              "text": ">(innerError: "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": ", newErrorFn: "
            },
            {
              "kind": "Content",
              "text": "(message: string) => T"
            },
            {
              "kind": "Content",
              "text": ", logger: "
            },
            {
              "kind": "Reference",
              "text": "ITelemetryLogger",
              "canonicalReference": "@fluidframework/common-definitions!ITelemetryLogger:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "innerError",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "newErrorFn",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "logger",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "wrapErrorAndLog"
        }
      ]
    }
  ]
}

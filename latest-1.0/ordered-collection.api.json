{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.22.2",
    "schemaVersion": 1005,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@fluidframework/ordered-collection!",
  "docComment": "",
  "name": "@fluidframework/ordered-collection",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@fluidframework/ordered-collection!",
      "name": "",
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@fluidframework/ordered-collection!acquireAndComplete:function(1)",
          "docComment": "/**\n * Helper method to acquire and complete an item Should be used in test code only\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function acquireAndComplete<T>(collection: "
            },
            {
              "kind": "Reference",
              "text": "IConsensusOrderedCollection",
              "canonicalReference": "@fluidframework/ordered-collection!IConsensusOrderedCollection:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<T | undefined>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "acquireAndComplete"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluidframework/ordered-collection!ConsensusCallback:type",
          "docComment": "/**\n * Callback provided to acquire() and waitAndAcquire() methods.\n *\n * @returns ConsensusResult indicating whether item was completed, or releases back to the queue.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ConsensusCallback<T> = "
            },
            {
              "kind": "Content",
              "text": "(value: T) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ConsensusResult",
              "canonicalReference": "@fluidframework/ordered-collection!ConsensusResult:enum"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ConsensusCallback",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/ordered-collection!ConsensusOrderedCollection:class",
          "docComment": "/**\n * Implementation of a consensus collection shared object\n *\n * Implements the shared object's communication, and the semantics around the release/complete mechanism following acquire.\n *\n * Generally not used directly. A derived type will pass in a backing data type IOrderedCollection that will define the deterministic add/acquire order and snapshot ability.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ConsensusOrderedCollection<T = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "SharedObject",
              "canonicalReference": "@fluidframework/shared-object-base!SharedObject:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IConsensusOrderedCollectionEvents",
              "canonicalReference": "@fluidframework/ordered-collection!IConsensusOrderedCollectionEvents:interface"
            },
            {
              "kind": "Content",
              "text": "<T>> "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "IConsensusOrderedCollection",
              "canonicalReference": "@fluidframework/ordered-collection!IConsensusOrderedCollection:interface"
            },
            {
              "kind": "Content",
              "text": "<T> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "ConsensusOrderedCollection",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluidframework/ordered-collection!ConsensusOrderedCollection:constructor(1)",
              "docComment": "/**\n * Constructs a new consensus collection. If the object is non-local an id and service interfaces will be provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected constructor(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ", data: "
                },
                {
                  "kind": "Reference",
                  "text": "IOrderedCollection",
                  "canonicalReference": "@fluidframework/ordered-collection!IOrderedCollection:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/ordered-collection!ConsensusOrderedCollection#acquire:member(1)",
              "docComment": "/**\n * Remove a value from the consensus collection. If the collection is empty, returns false. Otherwise calls callback with the value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "acquire(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "ConsensusCallback",
                  "canonicalReference": "@fluidframework/ordered-collection!ConsensusCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "acquire"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/ordered-collection!ConsensusOrderedCollection#add:member(1)",
              "docComment": "/**\n * Add a value to the consensus collection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "add(value: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "add"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/ordered-collection!ConsensusOrderedCollection#applyStashedOp:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected applyStashedOp(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "applyStashedOp"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/ordered-collection!ConsensusOrderedCollection#complete:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected complete(acquireId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "acquireId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "complete"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/ordered-collection!ConsensusOrderedCollection#completeCore:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected completeCore(acquireId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "acquireId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "completeCore"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/ordered-collection!ConsensusOrderedCollection#isActive:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected isActive(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "isActive"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/ordered-collection!ConsensusOrderedCollection#loadCore:member(1)",
              "docComment": "/**\n * {@inheritDoc @fluidframework/shared-object-base#SharedObject.loadCore}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected loadCore(storage: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelStorageService",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelStorageService:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "storage",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "loadCore"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/ordered-collection!ConsensusOrderedCollection#onDisconnect:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected onDisconnect(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "onDisconnect"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/ordered-collection!ConsensusOrderedCollection#processCore:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected processCore(message: "
                },
                {
                  "kind": "Reference",
                  "text": "ISequencedDocumentMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISequencedDocumentMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ", local: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", localOpMetadata: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "local",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "localOpMetadata",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "name": "processCore"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/ordered-collection!ConsensusOrderedCollection#release:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected release(acquireId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "acquireId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "release"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/ordered-collection!ConsensusOrderedCollection#releaseCore:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected releaseCore(acquireId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "acquireId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "releaseCore"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/ordered-collection!ConsensusOrderedCollection#summarizeCore:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected summarizeCore(serializer: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidSerializer",
                  "canonicalReference": "@fluidframework/shared-object-base!IFluidSerializer:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ISummaryTreeWithStats",
                  "canonicalReference": "@fluidframework/runtime-definitions!ISummaryTreeWithStats:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "serializer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "summarizeCore"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/ordered-collection!ConsensusOrderedCollection#waitAndAcquire:member(1)",
              "docComment": "/**\n * Wait for a value to be available and acquire it from the consensus collection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "waitAndAcquire(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "ConsensusCallback",
                  "canonicalReference": "@fluidframework/ordered-collection!ConsensusCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "waitAndAcquire"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          },
          "implementsTokenRanges": [
            {
              "startIndex": 8,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluidframework/ordered-collection!ConsensusQueue:class",
          "docComment": "/**\n * Implementation of a consensus stack\n *\n * An derived type of ConsensusOrderedCollection with a queue as the backing data and order.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ConsensusQueue<T = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "ConsensusOrderedCollection",
              "canonicalReference": "@fluidframework/ordered-collection!ConsensusOrderedCollection:class"
            },
            {
              "kind": "Content",
              "text": "<T> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "ConsensusQueue",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluidframework/ordered-collection!ConsensusQueue:constructor(1)",
              "docComment": "/**\n * Constructs a new consensus queue. If the object is non-local an id and service interfaces will be provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/ordered-collection!ConsensusQueue.create:member(1)",
              "docComment": "/**\n * Create a new consensus queue\n *\n * @param runtime - data store runtime the new consensus queue belongs to\n *\n * @param id - optional name of theconsensus queue\n *\n * @returns newly create consensus queue (but not attached yet)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static create<T = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ">(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ConsensusQueue",
                  "canonicalReference": "@fluidframework/ordered-collection!ConsensusQueue:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluidframework/ordered-collection!ConsensusQueue.getFactory:member(1)",
              "docComment": "/**\n * Get a factory for ConsensusQueue to register with the data store.\n *\n * @returns a factory that creates and load ConsensusQueue\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getFactory(): "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelFactory",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelFactory:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getFactory"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@fluidframework/ordered-collection!ConsensusResult:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum ConsensusResult "
            }
          ],
          "releaseTag": "Public",
          "name": "ConsensusResult",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluidframework/ordered-collection!ConsensusResult.Complete:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Complete = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "Complete",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluidframework/ordered-collection!ConsensusResult.Release:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Release = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "Release",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/ordered-collection!IConsensusOrderedCollection:interface",
          "docComment": "/**\n * Consensus Ordered Collection interface\n *\n * An consensus ordered collection is a distributed data structure, which holds a collection of JSON-able or handles, and has a deterministic add/remove order.\n *\n * @remarks\n *\n * The order the server receive the add/remove operation determines the order those operation are applied to the collection. Different clients issuing `add` or `acquire` operations at the same time will be sequenced. The order dictates which `add` is done first, thus determining the order in which it appears in the collection. It also determines which client will get the first removed item, etc. All operations are asynchronous. A function `waitAndAcquire` is provided to wait for and remove an entry in the collection.\n *\n * As a client acquires an item, it processes it and then returns a value (via callback) indicating whether it has completed processing the item, or whether the item should be released back to the collection for another client to process.\n *\n * All objects added to the collection will be cloned (via JSON). They will not be references to the original input object. Thus changed to the input object will not reflect the object in the collection.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IConsensusOrderedCollection<T = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "ISharedObject",
              "canonicalReference": "@fluidframework/shared-object-base!ISharedObject:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IConsensusOrderedCollectionEvents",
              "canonicalReference": "@fluidframework/ordered-collection!IConsensusOrderedCollectionEvents:interface"
            },
            {
              "kind": "Content",
              "text": "<T>> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "IConsensusOrderedCollection",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/ordered-collection!IConsensusOrderedCollection#acquire:member(1)",
              "docComment": "/**\n * Retrieves a value from the collection.\n *\n * @returns Returns true (and calls callback with acquired value) if collection was not empty. Otherwise returns false.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "acquire(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "ConsensusCallback",
                  "canonicalReference": "@fluidframework/ordered-collection!ConsensusCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "acquire"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/ordered-collection!IConsensusOrderedCollection#add:member(1)",
              "docComment": "/**\n * Adds a value to the collection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "add(value: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "add"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/ordered-collection!IConsensusOrderedCollection#waitAndAcquire:member(1)",
              "docComment": "/**\n * Wait for a value to be available and remove it from the consensus collection Calls callback with retrieved value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "waitAndAcquire(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "ConsensusCallback",
                  "canonicalReference": "@fluidframework/ordered-collection!ConsensusCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "waitAndAcquire"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 6
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/ordered-collection!IConsensusOrderedCollectionEvents:interface",
          "docComment": "/**\n * Events notifying about addition, acquisition, release and completion of items\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IConsensusOrderedCollectionEvents<T> extends "
            },
            {
              "kind": "Reference",
              "text": "ISharedObjectEvents",
              "canonicalReference": "@fluidframework/shared-object-base!ISharedObjectEvents:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IConsensusOrderedCollectionEvents",
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/ordered-collection!IConsensusOrderedCollectionEvents:call(1)",
              "docComment": "/**\n * Event fires when new item is added to the queue or an item previously acquired is returned back to a queue (including client loosing connection)\n *\n * @param newlyAdded - indicates if it's newly added item of previously acquired item\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"add\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(value: T, newlyAdded: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/ordered-collection!IConsensusOrderedCollectionEvents:call(2)",
              "docComment": "/**\n * Event fires when a client acquired an item Fires both for locally acquired items, as well as items acquired by remote clients\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"acquire\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(value: T, clientId?: string) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/ordered-collection!IConsensusOrderedCollectionEvents:call(3)",
              "docComment": "/**\n * \"Complete event fires when a client completes an item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"complete\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(value: T) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluidframework/ordered-collection!IConsensusOrderedCollectionEvents:call(4)",
              "docComment": "/**\n * Event fires when locally acquired item is being released back to the queue. Please note that release process is asynchronous, so it takes a while for it to happen (\"add\" event will be fired as result of it)\n *\n * @param intentional - indicates whether release was intentional (result of returning ConsensusResult.Release from callback) or it happened as result of lost connection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"localRelease\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(value: T, intentional: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/ordered-collection!IConsensusOrderedCollectionFactory:interface",
          "docComment": "/**\n * Consensus Ordered Collection channel factory interface\n *\n * Extends the base IChannelFactory to return a more definite type of IConsensusOrderedCollection Use for the runtime to create and load distributed data structure by type name of each channel\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IConsensusOrderedCollectionFactory extends "
            },
            {
              "kind": "Reference",
              "text": "IChannelFactory",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannelFactory:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IConsensusOrderedCollectionFactory",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/ordered-collection!IConsensusOrderedCollectionFactory#create:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "create(document: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IConsensusOrderedCollection",
                  "canonicalReference": "@fluidframework/ordered-collection!IConsensusOrderedCollection:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "document",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "create"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/ordered-collection!IConsensusOrderedCollectionFactory#load:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "load(document: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", services: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelServices",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelServices:interface"
                },
                {
                  "kind": "Content",
                  "text": ", attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IConsensusOrderedCollection",
                  "canonicalReference": "@fluidframework/ordered-collection!IConsensusOrderedCollection:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "document",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "services",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "name": "load"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/ordered-collection!IOrderedCollection:interface",
          "docComment": "/**\n * Ordered Collection interface\n *\n * Collection of objects that has deterministic add and remove ordering. Object implementing this interface can be used as the data backing for the ConsensusOrderedCollection\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IOrderedCollection<T = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "ISnapshotable",
              "canonicalReference": "@fluidframework/ordered-collection!ISnapshotable:interface"
            },
            {
              "kind": "Content",
              "text": "<T> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "IOrderedCollection",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/ordered-collection!IOrderedCollection#add:member(1)",
              "docComment": "/**\n * Adds a value to the collection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "add(value: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "add"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/ordered-collection!IOrderedCollection#remove:member(1)",
              "docComment": "/**\n * Retrieves a value from the collection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "remove(): "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "remove"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/ordered-collection!IOrderedCollection#size:member(1)",
              "docComment": "/**\n * Return the size of the collection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "size(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "size"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluidframework/ordered-collection!ISnapshotable:interface",
          "docComment": "/**\n * Interface for object that can be snapshoted\n *\n * TODO: move this to be use in other place TODO: currently input and output is not symmetrical, can they become symmetrical?\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISnapshotable<T> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ISnapshotable",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/ordered-collection!ISnapshotable#asArray:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "asArray(): "
                },
                {
                  "kind": "Content",
                  "text": "T[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "asArray"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluidframework/ordered-collection!ISnapshotable#loadFrom:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loadFrom(values: "
                },
                {
                  "kind": "Content",
                  "text": "T[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "values",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "loadFrom"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluidframework/ordered-collection!waitAcquireAndComplete:function(1)",
          "docComment": "/**\n * Helper method to acquire and complete an item Should be used in test code only\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function waitAcquireAndComplete<T>(collection: "
            },
            {
              "kind": "Reference",
              "text": "IConsensusOrderedCollection",
              "canonicalReference": "@fluidframework/ordered-collection!IConsensusOrderedCollection:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "waitAcquireAndComplete"
        }
      ]
    }
  ]
}
